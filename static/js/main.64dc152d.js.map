{"version":3,"file":"static/js/main.64dc152d.js","mappings":";wCAYa,IAAIA,EAAGC,EAAQ,IAASC,EAAGD,EAAQ,KAAa,SAASE,EAAEC,GAAG,IAAI,IAAIC,EAAE,yDAAyDD,EAAEE,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,IAAID,GAAG,WAAWI,mBAAmBF,UAAUD,IAAI,MAAM,yBAAyBF,EAAE,WAAWC,EAAE,gHAAgH,CAAC,IAAIK,EAAG,IAAIC,IAAIC,EAAG,CAAC,EAAE,SAASC,EAAGT,EAAEC,GAAGS,EAAGV,EAAEC,GAAGS,EAAGV,EAAE,UAAUC,EAAE,CACxb,SAASS,EAAGV,EAAEC,GAAW,IAARO,EAAGR,GAAGC,EAAMD,EAAE,EAAEA,EAAEC,EAAEG,OAAOJ,IAAIM,EAAGK,IAAIV,EAAED,GAAG,CAC5D,IAAIY,IAAK,qBAAqBC,QAAQ,qBAAqBA,OAAOC,UAAU,qBAAqBD,OAAOC,SAASC,eAAeC,EAAGC,OAAOC,UAAUC,eAAeC,EAAG,8VAA8VC,EACpgB,CAAC,EAAEC,EAAG,CAAC,EACiN,SAASC,EAAEvB,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,GAAGC,KAAKC,gBAAgB,IAAI5B,GAAG,IAAIA,GAAG,IAAIA,EAAE2B,KAAKE,cAAcN,EAAEI,KAAKG,mBAAmBN,EAAEG,KAAKI,gBAAgB9B,EAAE0B,KAAKK,aAAajC,EAAE4B,KAAKM,KAAKjC,EAAE2B,KAAKO,YAAYT,EAAEE,KAAKQ,kBAAkBT,CAAC,CAAC,IAAIU,EAAE,CAAC,EACpb,uIAAuIC,MAAM,KAAKC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,CAAC,gBAAgB,kBAAkB,CAAC,YAAY,SAAS,CAAC,UAAU,OAAO,CAAC,YAAY,eAAeuC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAE,GAAGqC,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,GAAG,MAAK,GAAG,EAAG,IAAG,CAAC,kBAAkB,YAAY,aAAa,SAASuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IAC1e,CAAC,cAAc,4BAA4B,YAAY,iBAAiBD,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,8OAA8OsC,MAAM,KAAKC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IACxb,CAAC,UAAU,WAAW,QAAQ,YAAYD,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,YAAYuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,OAAO,OAAO,OAAO,QAAQuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAE,MAAK,GAAG,EAAG,IAAG,CAAC,UAAU,SAASuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IAAG,IAAIC,EAAG,gBAAgB,SAASC,EAAG1C,GAAG,OAAOA,EAAE,GAAG2C,aAAa,CAIxZ,SAASC,EAAG5C,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEY,EAAElB,eAAelB,GAAGoC,EAAEpC,GAAG,MAAQ,OAAOwB,EAAE,IAAIA,EAAES,KAAKV,KAAK,EAAEvB,EAAEG,SAAS,MAAMH,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,IAAI,MAAMA,EAAE,MAP9I,SAAYD,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,OAAOvB,GAAG,qBAAqBA,GADqE,SAAYD,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,OAAOtB,GAAG,IAAIA,EAAEgC,KAAK,OAAM,EAAG,cAAcjC,GAAG,IAAK,WAAW,IAAK,SAAS,OAAM,EAAG,IAAK,UAAU,OAAGuB,IAAc,OAAOtB,GAASA,EAAE2B,gBAAmD,WAAnC7B,EAAEA,EAAEwC,cAAcK,MAAM,EAAE,KAAsB,UAAU7C,GAAE,QAAQ,OAAM,EAAG,CAC/T8C,CAAG9C,EAAEC,EAAEC,EAAEsB,GAAG,OAAM,EAAG,GAAGA,EAAE,OAAM,EAAG,GAAG,OAAOtB,EAAE,OAAOA,EAAEgC,MAAM,KAAK,EAAE,OAAOjC,EAAE,KAAK,EAAE,OAAM,IAAKA,EAAE,KAAK,EAAE,OAAO8C,MAAM9C,GAAG,KAAK,EAAE,OAAO8C,MAAM9C,IAAI,EAAEA,EAAE,OAAM,CAAE,CAOtE+C,CAAG/C,EAAEC,EAAEuB,EAAED,KAAKtB,EAAE,MAAMsB,GAAG,OAAOC,EARxK,SAAYzB,GAAG,QAAGgB,EAAGiC,KAAK3B,EAAGtB,KAAegB,EAAGiC,KAAK5B,EAAGrB,KAAeoB,EAAG8B,KAAKlD,GAAUsB,EAAGtB,IAAG,GAAGqB,EAAGrB,IAAG,GAAS,GAAE,CAQwDmD,CAAGlD,KAAK,OAAOC,EAAEF,EAAEoD,gBAAgBnD,GAAGD,EAAEqD,aAAapD,EAAE,GAAGC,IAAIuB,EAAEO,gBAAgBhC,EAAEyB,EAAEQ,cAAc,OAAO/B,EAAE,IAAIuB,EAAES,MAAQ,GAAGhC,GAAGD,EAAEwB,EAAEK,cAAcN,EAAEC,EAAEM,mBAAmB,OAAO7B,EAAEF,EAAEoD,gBAAgBnD,IAAaC,EAAE,KAAXuB,EAAEA,EAAES,OAAc,IAAIT,IAAG,IAAKvB,EAAE,GAAG,GAAGA,EAAEsB,EAAExB,EAAEsD,eAAe9B,EAAEvB,EAAEC,GAAGF,EAAEqD,aAAapD,EAAEC,KAAI,CAHjd,0jCAA0jCoC,MAAM,KAAKC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAEuD,QAAQd,EACzmCC,GAAIL,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,MAAK,GAAG,EAAG,IAAG,2EAA2EsC,MAAM,KAAKC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAEuD,QAAQd,EAAGC,GAAIL,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,gCAA+B,GAAG,EAAG,IAAG,CAAC,WAAW,WAAW,aAAauC,SAAQ,SAASvC,GAAG,IAAIC,EAAED,EAAEuD,QAAQd,EAAGC,GAAIL,EAAEpC,GAAG,IAAIsB,EAAEtB,EAAE,GAAE,EAAGD,EAAE,wCAAuC,GAAG,EAAG,IAAG,CAAC,WAAW,eAAeuC,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IACldH,EAAEmB,UAAU,IAAIjC,EAAE,YAAY,GAAE,EAAG,aAAa,gCAA+B,GAAG,GAAI,CAAC,MAAM,OAAO,SAAS,cAAcgB,SAAQ,SAASvC,GAAGqC,EAAErC,GAAG,IAAIuB,EAAEvB,EAAE,GAAE,EAAGA,EAAEwC,cAAc,MAAK,GAAG,EAAG,IAE5L,IAAIiB,EAAG7D,EAAG8D,mDAAmDC,EAAGC,OAAOC,IAAI,iBAAiBC,EAAGF,OAAOC,IAAI,gBAAgBE,EAAGH,OAAOC,IAAI,kBAAkBG,EAAGJ,OAAOC,IAAI,qBAAqBI,EAAGL,OAAOC,IAAI,kBAAkBK,EAAGN,OAAOC,IAAI,kBAAkBM,EAAGP,OAAOC,IAAI,iBAAiBO,EAAGR,OAAOC,IAAI,qBAAqBQ,EAAGT,OAAOC,IAAI,kBAAkBS,EAAGV,OAAOC,IAAI,uBAAuBU,EAAGX,OAAOC,IAAI,cAAcW,EAAGZ,OAAOC,IAAI,cAAcD,OAAOC,IAAI,eAAeD,OAAOC,IAAI,0BACje,IAAIY,EAAGb,OAAOC,IAAI,mBAAmBD,OAAOC,IAAI,uBAAuBD,OAAOC,IAAI,eAAeD,OAAOC,IAAI,wBAAwB,IAAIa,EAAGd,OAAOe,SAAS,SAASC,EAAG5E,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAwC,oBAAnCA,EAAE0E,GAAI1E,EAAE0E,IAAK1E,EAAE,eAA0CA,EAAE,IAAI,CAAC,IAAoB6E,EAAhBC,EAAE7D,OAAO8D,OAAU,SAASC,EAAGhF,GAAG,QAAG,IAAS6E,EAAG,IAAI,MAAMI,OAAQ,CAAC,MAAM/E,GAAG,IAAID,EAAEC,EAAEgF,MAAMC,OAAOC,MAAM,gBAAgBP,EAAG5E,GAAGA,EAAE,IAAI,EAAE,CAAC,MAAM,KAAK4E,EAAG7E,CAAC,CAAC,IAAIqF,GAAG,EACzb,SAASC,EAAGtF,EAAEC,GAAG,IAAID,GAAGqF,EAAG,MAAM,GAAGA,GAAG,EAAG,IAAInF,EAAE+E,MAAMM,kBAAkBN,MAAMM,uBAAkB,EAAO,IAAI,GAAGtF,EAAE,GAAGA,EAAE,WAAW,MAAMgF,OAAQ,EAAEhE,OAAOuE,eAAevF,EAAEiB,UAAU,QAAQ,CAACuE,IAAI,WAAW,MAAMR,OAAQ,IAAI,kBAAkBS,SAASA,QAAQC,UAAU,CAAC,IAAID,QAAQC,UAAU1F,EAAE,GAAG,CAAC,MAAM2F,GAAG,IAAIpE,EAAEoE,CAAC,CAACF,QAAQC,UAAU3F,EAAE,GAAGC,EAAE,KAAK,CAAC,IAAIA,EAAEgD,MAAM,CAAC,MAAM2C,GAAGpE,EAAEoE,CAAC,CAAC5F,EAAEiD,KAAKhD,EAAEiB,UAAU,KAAK,CAAC,IAAI,MAAM+D,OAAQ,CAAC,MAAMW,GAAGpE,EAAEoE,CAAC,CAAC5F,GAAG,CAAC,CAAC,MAAM4F,GAAG,GAAGA,GAAGpE,GAAG,kBAAkBoE,EAAEV,MAAM,CAAC,IAAI,IAAIzD,EAAEmE,EAAEV,MAAM5C,MAAM,MACnfZ,EAAEF,EAAE0D,MAAM5C,MAAM,MAAMX,EAAEF,EAAErB,OAAO,EAAEyF,EAAEnE,EAAEtB,OAAO,EAAE,GAAGuB,GAAG,GAAGkE,GAAGpE,EAAEE,KAAKD,EAAEmE,IAAIA,IAAI,KAAK,GAAGlE,GAAG,GAAGkE,EAAElE,IAAIkE,IAAI,GAAGpE,EAAEE,KAAKD,EAAEmE,GAAG,CAAC,GAAG,IAAIlE,GAAG,IAAIkE,EAAG,MAAMlE,IAAQ,IAAJkE,GAASpE,EAAEE,KAAKD,EAAEmE,GAAG,CAAC,IAAIC,EAAE,KAAKrE,EAAEE,GAAG4B,QAAQ,WAAW,QAA6F,OAArFvD,EAAE+F,aAAaD,EAAEE,SAAS,iBAAiBF,EAAEA,EAAEvC,QAAQ,cAAcvD,EAAE+F,cAAqBD,CAAC,QAAO,GAAGnE,GAAG,GAAGkE,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQR,GAAG,EAAGJ,MAAMM,kBAAkBrF,CAAC,CAAC,OAAOF,EAAEA,EAAEA,EAAE+F,aAAa/F,EAAEiG,KAAK,IAAIjB,EAAGhF,GAAG,EAAE,CAC9Z,SAASkG,EAAGlG,GAAG,OAAOA,EAAEmG,KAAK,KAAK,EAAE,OAAOnB,EAAGhF,EAAEkC,MAAM,KAAK,GAAG,OAAO8C,EAAG,QAAQ,KAAK,GAAG,OAAOA,EAAG,YAAY,KAAK,GAAG,OAAOA,EAAG,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,OAAOhF,EAAEsF,EAAGtF,EAAEkC,MAAK,GAAM,KAAK,GAAG,OAAOlC,EAAEsF,EAAGtF,EAAEkC,KAAKkE,QAAO,GAAM,KAAK,EAAE,OAAOpG,EAAEsF,EAAGtF,EAAEkC,MAAK,GAAM,QAAQ,MAAM,GAAG,CACxR,SAASmE,EAAGrG,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,oBAAoBA,EAAE,OAAOA,EAAE+F,aAAa/F,EAAEiG,MAAM,KAAK,GAAG,kBAAkBjG,EAAE,OAAOA,EAAE,OAAOA,GAAG,KAAK+D,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,SAAS,KAAKG,EAAG,MAAM,WAAW,KAAKD,EAAG,MAAM,aAAa,KAAKK,EAAG,MAAM,WAAW,KAAKC,EAAG,MAAM,eAAe,GAAG,kBAAkBtE,EAAE,OAAOA,EAAEsG,UAAU,KAAKnC,EAAG,OAAOnE,EAAE+F,aAAa,WAAW,YAAY,KAAK7B,EAAG,OAAOlE,EAAEuG,SAASR,aAAa,WAAW,YAAY,KAAK3B,EAAG,IAAInE,EAAED,EAAEoG,OAC7Z,OADoapG,EAAEA,EAAE+F,eACnd/F,EAAE,MADieA,EAAEC,EAAE8F,aAClf9F,EAAEgG,MAAM,IAAY,cAAcjG,EAAE,IAAI,cAAqBA,EAAE,KAAKuE,EAAG,OAA6B,QAAtBtE,EAAED,EAAE+F,aAAa,MAAc9F,EAAEoG,EAAGrG,EAAEkC,OAAO,OAAO,KAAKsC,EAAGvE,EAAED,EAAEwG,SAASxG,EAAEA,EAAEyG,MAAM,IAAI,OAAOJ,EAAGrG,EAAEC,GAAG,CAAC,MAAMC,GAAG,EAAE,OAAO,IAAI,CAC3M,SAASwG,EAAG1G,GAAG,IAAIC,EAAED,EAAEkC,KAAK,OAAOlC,EAAEmG,KAAK,KAAK,GAAG,MAAM,QAAQ,KAAK,EAAE,OAAOlG,EAAE8F,aAAa,WAAW,YAAY,KAAK,GAAG,OAAO9F,EAAEsG,SAASR,aAAa,WAAW,YAAY,KAAK,GAAG,MAAM,qBAAqB,KAAK,GAAG,OAAkB/F,GAAXA,EAAEC,EAAEmG,QAAWL,aAAa/F,EAAEiG,MAAM,GAAGhG,EAAE8F,cAAc,KAAK/F,EAAE,cAAcA,EAAE,IAAI,cAAc,KAAK,EAAE,MAAM,WAAW,KAAK,EAAE,OAAOC,EAAE,KAAK,EAAE,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,KAAK,EAAE,MAAM,OAAO,KAAK,GAAG,OAAOoG,EAAGpG,GAAG,KAAK,EAAE,OAAOA,IAAI+D,EAAG,aAAa,OAAO,KAAK,GAAG,MAAM,YACtf,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,QAAQ,KAAK,GAAG,MAAM,WAAW,KAAK,GAAG,MAAM,eAAe,KAAK,GAAG,MAAM,gBAAgB,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,GAAG,oBAAoB/D,EAAE,OAAOA,EAAE8F,aAAa9F,EAAEgG,MAAM,KAAK,GAAG,kBAAkBhG,EAAE,OAAOA,EAAE,OAAO,IAAI,CAAC,SAAS0G,EAAG3G,GAAG,cAAcA,GAAG,IAAK,UAAU,IAAK,SAAS,IAAK,SAAS,IAAK,YAAqB,IAAK,SAAS,OAAOA,EAAE,QAAQ,MAAM,GAAG,CACra,SAAS4G,EAAG5G,GAAG,IAAIC,EAAED,EAAEkC,KAAK,OAAOlC,EAAEA,EAAE6G,WAAW,UAAU7G,EAAEwC,gBAAgB,aAAavC,GAAG,UAAUA,EAAE,CAEtF,SAAS6G,EAAG9G,GAAGA,EAAE+G,gBAAgB/G,EAAE+G,cADvD,SAAY/G,GAAG,IAAIC,EAAE2G,EAAG5G,GAAG,UAAU,QAAQE,EAAEe,OAAO+F,yBAAyBhH,EAAEiH,YAAY/F,UAAUjB,GAAGuB,EAAE,GAAGxB,EAAEC,GAAG,IAAID,EAAEmB,eAAelB,IAAI,qBAAqBC,GAAG,oBAAoBA,EAAEgH,KAAK,oBAAoBhH,EAAEuF,IAAI,CAAC,IAAIhE,EAAEvB,EAAEgH,IAAIxF,EAAExB,EAAEuF,IAAiL,OAA7KxE,OAAOuE,eAAexF,EAAEC,EAAE,CAACkH,cAAa,EAAGD,IAAI,WAAW,OAAOzF,EAAEwB,KAAKrB,KAAK,EAAE6D,IAAI,SAASzF,GAAGwB,EAAE,GAAGxB,EAAE0B,EAAEuB,KAAKrB,KAAK5B,EAAE,IAAIiB,OAAOuE,eAAexF,EAAEC,EAAE,CAACmH,WAAWlH,EAAEkH,aAAmB,CAACC,SAAS,WAAW,OAAO7F,CAAC,EAAE8F,SAAS,SAAStH,GAAGwB,EAAE,GAAGxB,CAAC,EAAEuH,aAAa,WAAWvH,EAAE+G,cACxf,YAAY/G,EAAEC,EAAE,EAAE,CAAC,CAAkDuH,CAAGxH,GAAG,CAAC,SAASyH,EAAGzH,GAAG,IAAIA,EAAE,OAAM,EAAG,IAAIC,EAAED,EAAE+G,cAAc,IAAI9G,EAAE,OAAM,EAAG,IAAIC,EAAED,EAAEoH,WAAe7F,EAAE,GAAqD,OAAlDxB,IAAIwB,EAAEoF,EAAG5G,GAAGA,EAAE0H,QAAQ,OAAO,QAAQ1H,EAAE2H,QAAO3H,EAAEwB,KAAatB,IAAGD,EAAEqH,SAAStH,IAAG,EAAM,CAAC,SAAS4H,EAAG5H,GAAwD,GAAG,qBAAxDA,EAAEA,IAAI,qBAAqBc,SAASA,cAAS,IAAkC,OAAO,KAAK,IAAI,OAAOd,EAAE6H,eAAe7H,EAAE8H,IAAI,CAAC,MAAM7H,GAAG,OAAOD,EAAE8H,IAAI,CAAC,CACpa,SAASC,EAAG/H,EAAEC,GAAG,IAAIC,EAAED,EAAEyH,QAAQ,OAAO5C,EAAE,CAAC,EAAE7E,EAAE,CAAC+H,oBAAe,EAAOC,kBAAa,EAAON,WAAM,EAAOD,QAAQ,MAAMxH,EAAEA,EAAEF,EAAEkI,cAAcC,gBAAgB,CAAC,SAASC,EAAGpI,EAAEC,GAAG,IAAIC,EAAE,MAAMD,EAAEgI,aAAa,GAAGhI,EAAEgI,aAAazG,EAAE,MAAMvB,EAAEyH,QAAQzH,EAAEyH,QAAQzH,EAAE+H,eAAe9H,EAAEyG,EAAG,MAAM1G,EAAE0H,MAAM1H,EAAE0H,MAAMzH,GAAGF,EAAEkI,cAAc,CAACC,eAAe3G,EAAE6G,aAAanI,EAAEoI,WAAW,aAAarI,EAAEiC,MAAM,UAAUjC,EAAEiC,KAAK,MAAMjC,EAAEyH,QAAQ,MAAMzH,EAAE0H,MAAM,CAAC,SAASY,EAAGvI,EAAEC,GAAe,OAAZA,EAAEA,EAAEyH,UAAiB9E,EAAG5C,EAAE,UAAUC,GAAE,EAAG,CAC9d,SAASuI,EAAGxI,EAAEC,GAAGsI,EAAGvI,EAAEC,GAAG,IAAIC,EAAEyG,EAAG1G,EAAE0H,OAAOnG,EAAEvB,EAAEiC,KAAK,GAAG,MAAMhC,EAAK,WAAWsB,GAAM,IAAItB,GAAG,KAAKF,EAAE2H,OAAO3H,EAAE2H,OAAOzH,KAAEF,EAAE2H,MAAM,GAAGzH,GAAOF,EAAE2H,QAAQ,GAAGzH,IAAIF,EAAE2H,MAAM,GAAGzH,QAAQ,GAAG,WAAWsB,GAAG,UAAUA,EAA8B,YAA3BxB,EAAEoD,gBAAgB,SAAgBnD,EAAEkB,eAAe,SAASsH,GAAGzI,EAAEC,EAAEiC,KAAKhC,GAAGD,EAAEkB,eAAe,iBAAiBsH,GAAGzI,EAAEC,EAAEiC,KAAKyE,EAAG1G,EAAEgI,eAAe,MAAMhI,EAAEyH,SAAS,MAAMzH,EAAE+H,iBAAiBhI,EAAEgI,iBAAiB/H,EAAE+H,eAAe,CACla,SAASU,EAAG1I,EAAEC,EAAEC,GAAG,GAAGD,EAAEkB,eAAe,UAAUlB,EAAEkB,eAAe,gBAAgB,CAAC,IAAIK,EAAEvB,EAAEiC,KAAK,KAAK,WAAWV,GAAG,UAAUA,QAAG,IAASvB,EAAE0H,OAAO,OAAO1H,EAAE0H,OAAO,OAAO1H,EAAE,GAAGD,EAAEkI,cAAcG,aAAanI,GAAGD,IAAID,EAAE2H,QAAQ3H,EAAE2H,MAAM1H,GAAGD,EAAEiI,aAAahI,CAAC,CAAU,MAATC,EAAEF,EAAEiG,QAAcjG,EAAEiG,KAAK,IAAIjG,EAAEgI,iBAAiBhI,EAAEkI,cAAcC,eAAe,KAAKjI,IAAIF,EAAEiG,KAAK/F,EAAE,CACzV,SAASuI,GAAGzI,EAAEC,EAAEC,GAAM,WAAWD,GAAG2H,EAAG5H,EAAE2I,iBAAiB3I,IAAE,MAAME,EAAEF,EAAEiI,aAAa,GAAGjI,EAAEkI,cAAcG,aAAarI,EAAEiI,eAAe,GAAG/H,IAAIF,EAAEiI,aAAa,GAAG/H,GAAE,CAAC,IAAI0I,GAAGC,MAAMC,QAC7K,SAASC,GAAG/I,EAAEC,EAAEC,EAAEsB,GAAe,GAAZxB,EAAEA,EAAEgJ,QAAW/I,EAAE,CAACA,EAAE,CAAC,EAAE,IAAI,IAAIwB,EAAE,EAAEA,EAAEvB,EAAEE,OAAOqB,IAAIxB,EAAE,IAAIC,EAAEuB,KAAI,EAAG,IAAIvB,EAAE,EAAEA,EAAEF,EAAEI,OAAOF,IAAIuB,EAAExB,EAAEkB,eAAe,IAAInB,EAAEE,GAAGyH,OAAO3H,EAAEE,GAAG+I,WAAWxH,IAAIzB,EAAEE,GAAG+I,SAASxH,GAAGA,GAAGD,IAAIxB,EAAEE,GAAGgJ,iBAAgB,EAAG,KAAK,CAAmB,IAAlBhJ,EAAE,GAAGyG,EAAGzG,GAAGD,EAAE,KAASwB,EAAE,EAAEA,EAAEzB,EAAEI,OAAOqB,IAAI,CAAC,GAAGzB,EAAEyB,GAAGkG,QAAQzH,EAAiD,OAA9CF,EAAEyB,GAAGwH,UAAS,OAAGzH,IAAIxB,EAAEyB,GAAGyH,iBAAgB,IAAW,OAAOjJ,GAAGD,EAAEyB,GAAG0H,WAAWlJ,EAAED,EAAEyB,GAAG,CAAC,OAAOxB,IAAIA,EAAEgJ,UAAS,EAAG,CAAC,CACxY,SAASG,GAAGpJ,EAAEC,GAAG,GAAG,MAAMA,EAAEoJ,wBAAwB,MAAMpE,MAAMlF,EAAE,KAAK,OAAO+E,EAAE,CAAC,EAAE7E,EAAE,CAAC0H,WAAM,EAAOM,kBAAa,EAAOqB,SAAS,GAAGtJ,EAAEkI,cAAcG,cAAc,CAAC,SAASkB,GAAGvJ,EAAEC,GAAG,IAAIC,EAAED,EAAE0H,MAAM,GAAG,MAAMzH,EAAE,CAA+B,GAA9BA,EAAED,EAAEqJ,SAASrJ,EAAEA,EAAEgI,aAAgB,MAAM/H,EAAE,CAAC,GAAG,MAAMD,EAAE,MAAMgF,MAAMlF,EAAE,KAAK,GAAG6I,GAAG1I,GAAG,CAAC,GAAG,EAAEA,EAAEE,OAAO,MAAM6E,MAAMlF,EAAE,KAAKG,EAAEA,EAAE,EAAE,CAACD,EAAEC,CAAC,CAAC,MAAMD,IAAIA,EAAE,IAAIC,EAAED,CAAC,CAACD,EAAEkI,cAAc,CAACG,aAAa1B,EAAGzG,GAAG,CACnY,SAASsJ,GAAGxJ,EAAEC,GAAG,IAAIC,EAAEyG,EAAG1G,EAAE0H,OAAOnG,EAAEmF,EAAG1G,EAAEgI,cAAc,MAAM/H,KAAIA,EAAE,GAAGA,KAAMF,EAAE2H,QAAQ3H,EAAE2H,MAAMzH,GAAG,MAAMD,EAAEgI,cAAcjI,EAAEiI,eAAe/H,IAAIF,EAAEiI,aAAa/H,IAAI,MAAMsB,IAAIxB,EAAEiI,aAAa,GAAGzG,EAAE,CAAC,SAASiI,GAAGzJ,GAAG,IAAIC,EAAED,EAAE0J,YAAYzJ,IAAID,EAAEkI,cAAcG,cAAc,KAAKpI,GAAG,OAAOA,IAAID,EAAE2H,MAAM1H,EAAE,CAAC,SAAS0J,GAAG3J,GAAG,OAAOA,GAAG,IAAK,MAAM,MAAM,6BAA6B,IAAK,OAAO,MAAM,qCAAqC,QAAQ,MAAM,+BAA+B,CAC7c,SAAS4J,GAAG5J,EAAEC,GAAG,OAAO,MAAMD,GAAG,iCAAiCA,EAAE2J,GAAG1J,GAAG,+BAA+BD,GAAG,kBAAkBC,EAAE,+BAA+BD,CAAC,CAChK,IAAI6J,GAAe7J,GAAZ8J,IAAY9J,GAAsJ,SAASA,EAAEC,GAAG,GAAG,+BAA+BD,EAAE+J,cAAc,cAAc/J,EAAEA,EAAEgK,UAAU/J,MAAM,CAA2F,KAA1F4J,GAAGA,IAAI/I,SAASC,cAAc,QAAUiJ,UAAU,QAAQ/J,EAAEgK,UAAUC,WAAW,SAAajK,EAAE4J,GAAGM,WAAWnK,EAAEmK,YAAYnK,EAAEoK,YAAYpK,EAAEmK,YAAY,KAAKlK,EAAEkK,YAAYnK,EAAEqK,YAAYpK,EAAEkK,WAAW,CAAC,EAAvb,qBAAqBG,OAAOA,MAAMC,wBAAwB,SAAStK,EAAEC,EAAEsB,EAAEC,GAAG6I,MAAMC,yBAAwB,WAAW,OAAOvK,GAAEC,EAAEC,EAAM,GAAE,EAAEF,IACtK,SAASwK,GAAGxK,EAAEC,GAAG,GAAGA,EAAE,CAAC,IAAIC,EAAEF,EAAEmK,WAAW,GAAGjK,GAAGA,IAAIF,EAAEyK,WAAW,IAAIvK,EAAEwK,SAAwB,YAAdxK,EAAEyK,UAAU1K,EAAS,CAACD,EAAE0J,YAAYzJ,CAAC,CACtH,IAAI2K,GAAG,CAACC,yBAAwB,EAAGC,aAAY,EAAGC,mBAAkB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,SAAQ,EAAGC,cAAa,EAAGC,iBAAgB,EAAGC,aAAY,EAAGC,SAAQ,EAAGC,MAAK,EAAGC,UAAS,EAAGC,cAAa,EAAGC,YAAW,EAAGC,cAAa,EAAGC,WAAU,EAAGC,UAAS,EAAGC,SAAQ,EAAGC,YAAW,EAAGC,aAAY,EAAGC,cAAa,EAAGC,YAAW,EAAGC,eAAc,EAAGC,gBAAe,EAAGC,iBAAgB,EAAGC,YAAW,EAAGC,WAAU,EAAGC,YAAW,EAAGC,SAAQ,EAAGC,OAAM,EAAGC,SAAQ,EAAGC,SAAQ,EAAGC,QAAO,EAAGC,QAAO,EAClfC,MAAK,EAAGC,aAAY,EAAGC,cAAa,EAAGC,aAAY,EAAGC,iBAAgB,EAAGC,kBAAiB,EAAGC,kBAAiB,EAAGC,eAAc,EAAGC,aAAY,GAAIC,GAAG,CAAC,SAAS,KAAK,MAAM,KAA6H,SAASC,GAAGzN,EAAEC,EAAEC,GAAG,OAAO,MAAMD,GAAG,mBAAmBA,GAAG,KAAKA,EAAE,GAAGC,GAAG,kBAAkBD,GAAG,IAAIA,GAAG2K,GAAGzJ,eAAenB,IAAI4K,GAAG5K,IAAI,GAAGC,GAAGkF,OAAOlF,EAAE,IAAI,CACzb,SAASyN,GAAG1N,EAAEC,GAAa,IAAI,IAAIC,KAAlBF,EAAEA,EAAE2N,MAAmB1N,EAAE,GAAGA,EAAEkB,eAAejB,GAAG,CAAC,IAAIsB,EAAE,IAAItB,EAAE0N,QAAQ,MAAMnM,EAAEgM,GAAGvN,EAAED,EAAEC,GAAGsB,GAAG,UAAUtB,IAAIA,EAAE,YAAYsB,EAAExB,EAAE6N,YAAY3N,EAAEuB,GAAGzB,EAAEE,GAAGuB,CAAC,CAAC,CADYR,OAAO6M,KAAKlD,IAAIrI,SAAQ,SAASvC,GAAGwN,GAAGjL,SAAQ,SAAStC,GAAGA,EAAEA,EAAED,EAAE+N,OAAO,GAAGpL,cAAc3C,EAAEgO,UAAU,GAAGpD,GAAG3K,GAAG2K,GAAG5K,EAAE,GAAE,IAChI,IAAIiO,GAAGnJ,EAAE,CAACoJ,UAAS,GAAI,CAACC,MAAK,EAAGC,MAAK,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,IAAG,EAAGC,KAAI,EAAGC,OAAM,EAAGC,QAAO,EAAGC,MAAK,EAAGC,MAAK,EAAGC,OAAM,EAAGC,QAAO,EAAGC,OAAM,EAAGC,KAAI,IAClT,SAASC,GAAGlP,EAAEC,GAAG,GAAGA,EAAE,CAAC,GAAGgO,GAAGjO,KAAK,MAAMC,EAAEqJ,UAAU,MAAMrJ,EAAEoJ,yBAAyB,MAAMpE,MAAMlF,EAAE,IAAIC,IAAI,GAAG,MAAMC,EAAEoJ,wBAAwB,CAAC,GAAG,MAAMpJ,EAAEqJ,SAAS,MAAMrE,MAAMlF,EAAE,KAAK,GAAG,kBAAkBE,EAAEoJ,2BAA2B,WAAWpJ,EAAEoJ,yBAAyB,MAAMpE,MAAMlF,EAAE,IAAK,CAAC,GAAG,MAAME,EAAE0N,OAAO,kBAAkB1N,EAAE0N,MAAM,MAAM1I,MAAMlF,EAAE,IAAK,CAAC,CAClW,SAASoP,GAAGnP,EAAEC,GAAG,IAAI,IAAID,EAAE4N,QAAQ,KAAK,MAAM,kBAAkB3N,EAAEmP,GAAG,OAAOpP,GAAG,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,YAAY,IAAK,gBAAgB,IAAK,gBAAgB,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,gBAAgB,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,IAAIqP,GAAG,KAAK,SAASC,GAAGtP,GAA6F,OAA1FA,EAAEA,EAAEuP,QAAQvP,EAAEwP,YAAY3O,QAAS4O,0BAA0BzP,EAAEA,EAAEyP,yBAAgC,IAAIzP,EAAE0K,SAAS1K,EAAE0P,WAAW1P,CAAC,CAAC,IAAI2P,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpc,SAASC,GAAG9P,GAAG,GAAGA,EAAE+P,GAAG/P,GAAG,CAAC,GAAG,oBAAoB2P,GAAG,MAAM1K,MAAMlF,EAAE,MAAM,IAAIE,EAAED,EAAEgQ,UAAU/P,IAAIA,EAAEgQ,GAAGhQ,GAAG0P,GAAG3P,EAAEgQ,UAAUhQ,EAAEkC,KAAKjC,GAAG,CAAC,CAAC,SAASiQ,GAAGlQ,GAAG4P,GAAGC,GAAGA,GAAGM,KAAKnQ,GAAG6P,GAAG,CAAC7P,GAAG4P,GAAG5P,CAAC,CAAC,SAASoQ,KAAK,GAAGR,GAAG,CAAC,IAAI5P,EAAE4P,GAAG3P,EAAE4P,GAAoB,GAAjBA,GAAGD,GAAG,KAAKE,GAAG9P,GAAMC,EAAE,IAAID,EAAE,EAAEA,EAAEC,EAAEG,OAAOJ,IAAI8P,GAAG7P,EAAED,GAAG,CAAC,CAAC,SAASqQ,GAAGrQ,EAAEC,GAAG,OAAOD,EAAEC,EAAE,CAAC,SAASqQ,KAAK,CAAC,IAAIC,IAAG,EAAG,SAASC,GAAGxQ,EAAEC,EAAEC,GAAG,GAAGqQ,GAAG,OAAOvQ,EAAEC,EAAEC,GAAGqQ,IAAG,EAAG,IAAI,OAAOF,GAAGrQ,EAAEC,EAAEC,EAAE,CAAC,QAAWqQ,IAAG,GAAG,OAAOX,IAAI,OAAOC,MAAGS,KAAKF,KAAI,CAAC,CAChb,SAASK,GAAGzQ,EAAEC,GAAG,IAAIC,EAAEF,EAAEgQ,UAAU,GAAG,OAAO9P,EAAE,OAAO,KAAK,IAAIsB,EAAEyO,GAAG/P,GAAG,GAAG,OAAOsB,EAAE,OAAO,KAAKtB,EAAEsB,EAAEvB,GAAGD,EAAE,OAAOC,GAAG,IAAK,UAAU,IAAK,iBAAiB,IAAK,gBAAgB,IAAK,uBAAuB,IAAK,cAAc,IAAK,qBAAqB,IAAK,cAAc,IAAK,qBAAqB,IAAK,YAAY,IAAK,mBAAmB,IAAK,gBAAgBuB,GAAGA,EAAE2H,YAAqB3H,IAAI,YAAbxB,EAAEA,EAAEkC,OAAuB,UAAUlC,GAAG,WAAWA,GAAG,aAAaA,IAAIA,GAAGwB,EAAE,MAAMxB,EAAE,QAAQA,GAAE,EAAG,GAAGA,EAAE,OAAO,KAAK,GAAGE,GAAG,oBACleA,EAAE,MAAM+E,MAAMlF,EAAE,IAAIE,SAASC,IAAI,OAAOA,CAAC,CAAC,IAAIwQ,IAAG,EAAG,GAAG9P,EAAG,IAAI,IAAI+P,GAAG,CAAC,EAAE1P,OAAOuE,eAAemL,GAAG,UAAU,CAACzJ,IAAI,WAAWwJ,IAAG,CAAE,IAAI7P,OAAO+P,iBAAiB,OAAOD,GAAGA,IAAI9P,OAAOgQ,oBAAoB,OAAOF,GAAGA,GAAG,CAAC,MAAM3Q,IAAG0Q,IAAG,CAAE,CAAC,SAASI,GAAG9Q,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAG,IAAIF,EAAEiD,MAAM3H,UAAU2B,MAAMI,KAAK9C,UAAU,GAAG,IAAIF,EAAE8Q,MAAM7Q,EAAE0F,EAAE,CAAC,MAAMoL,GAAGpP,KAAKqP,QAAQD,EAAE,CAAC,CAAC,IAAIE,IAAG,EAAGC,GAAG,KAAKC,IAAG,EAAGC,GAAG,KAAKC,GAAG,CAACL,QAAQ,SAASjR,GAAGkR,IAAG,EAAGC,GAAGnR,CAAC,GAAG,SAASuR,GAAGvR,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAGoL,IAAG,EAAGC,GAAG,KAAKL,GAAGC,MAAMO,GAAGnR,UAAU,CACjW,SAASqR,GAAGxR,GAAG,IAAIC,EAAED,EAAEE,EAAEF,EAAE,GAAGA,EAAEyR,UAAU,KAAKxR,EAAEyR,QAAQzR,EAAEA,EAAEyR,WAAW,CAAC1R,EAAEC,EAAE,GAAO,KAAa,MAAjBA,EAAED,GAAS2R,SAAczR,EAAED,EAAEyR,QAAQ1R,EAAEC,EAAEyR,aAAa1R,EAAE,CAAC,OAAO,IAAIC,EAAEkG,IAAIjG,EAAE,IAAI,CAAC,SAAS0R,GAAG5R,GAAG,GAAG,KAAKA,EAAEmG,IAAI,CAAC,IAAIlG,EAAED,EAAE6R,cAAsE,GAAxD,OAAO5R,IAAkB,QAAdD,EAAEA,EAAEyR,aAAqBxR,EAAED,EAAE6R,gBAAmB,OAAO5R,EAAE,OAAOA,EAAE6R,UAAU,CAAC,OAAO,IAAI,CAAC,SAASC,GAAG/R,GAAG,GAAGwR,GAAGxR,KAAKA,EAAE,MAAMiF,MAAMlF,EAAE,KAAM,CAE1S,SAASiS,GAAGhS,GAAW,OAAO,QAAfA,EADtN,SAAYA,GAAG,IAAIC,EAAED,EAAEyR,UAAU,IAAIxR,EAAE,CAAS,GAAG,QAAXA,EAAEuR,GAAGxR,IAAe,MAAMiF,MAAMlF,EAAE,MAAM,OAAOE,IAAID,EAAE,KAAKA,CAAC,CAAC,IAAI,IAAIE,EAAEF,EAAEwB,EAAEvB,IAAI,CAAC,IAAIwB,EAAEvB,EAAEwR,OAAO,GAAG,OAAOjQ,EAAE,MAAM,IAAIC,EAAED,EAAEgQ,UAAU,GAAG,OAAO/P,EAAE,CAAY,GAAG,QAAdF,EAAEC,EAAEiQ,QAAmB,CAACxR,EAAEsB,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAGC,EAAEwQ,QAAQvQ,EAAEuQ,MAAM,CAAC,IAAIvQ,EAAED,EAAEwQ,MAAMvQ,GAAG,CAAC,GAAGA,IAAIxB,EAAE,OAAO6R,GAAGtQ,GAAGzB,EAAE,GAAG0B,IAAIF,EAAE,OAAOuQ,GAAGtQ,GAAGxB,EAAEyB,EAAEA,EAAEwQ,OAAO,CAAC,MAAMjN,MAAMlF,EAAE,KAAM,CAAC,GAAGG,EAAEwR,SAASlQ,EAAEkQ,OAAOxR,EAAEuB,EAAED,EAAEE,MAAM,CAAC,IAAI,IAAIC,GAAE,EAAGkE,EAAEpE,EAAEwQ,MAAMpM,GAAG,CAAC,GAAGA,IAAI3F,EAAE,CAACyB,GAAE,EAAGzB,EAAEuB,EAAED,EAAEE,EAAE,KAAK,CAAC,GAAGmE,IAAIrE,EAAE,CAACG,GAAE,EAAGH,EAAEC,EAAEvB,EAAEwB,EAAE,KAAK,CAACmE,EAAEA,EAAEqM,OAAO,CAAC,IAAIvQ,EAAE,CAAC,IAAIkE,EAAEnE,EAAEuQ,MAAMpM,GAAG,CAAC,GAAGA,IAC5f3F,EAAE,CAACyB,GAAE,EAAGzB,EAAEwB,EAAEF,EAAEC,EAAE,KAAK,CAAC,GAAGoE,IAAIrE,EAAE,CAACG,GAAE,EAAGH,EAAEE,EAAExB,EAAEuB,EAAE,KAAK,CAACoE,EAAEA,EAAEqM,OAAO,CAAC,IAAIvQ,EAAE,MAAMsD,MAAMlF,EAAE,KAAM,CAAC,CAAC,GAAGG,EAAEuR,YAAYjQ,EAAE,MAAMyD,MAAMlF,EAAE,KAAM,CAAC,GAAG,IAAIG,EAAEiG,IAAI,MAAMlB,MAAMlF,EAAE,MAAM,OAAOG,EAAE8P,UAAUmC,UAAUjS,EAAEF,EAAEC,CAAC,CAAkBmS,CAAGpS,IAAmBqS,GAAGrS,GAAG,IAAI,CAAC,SAASqS,GAAGrS,GAAG,GAAG,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,IAAI,OAAOnG,EAAE,IAAIA,EAAEA,EAAEiS,MAAM,OAAOjS,GAAG,CAAC,IAAIC,EAAEoS,GAAGrS,GAAG,GAAG,OAAOC,EAAE,OAAOA,EAAED,EAAEA,EAAEkS,OAAO,CAAC,OAAO,IAAI,CAC1X,IAAII,GAAGxS,EAAGyS,0BAA0BC,GAAG1S,EAAG2S,wBAAwBC,GAAG5S,EAAG6S,qBAAqBC,GAAG9S,EAAG+S,sBAAsBC,GAAEhT,EAAGiT,aAAaC,GAAGlT,EAAGmT,iCAAiCC,GAAGpT,EAAGqT,2BAA2BC,GAAGtT,EAAGuT,8BAA8BC,GAAGxT,EAAGyT,wBAAwBC,GAAG1T,EAAG2T,qBAAqBC,GAAG5T,EAAG6T,sBAAsBC,GAAG,KAAKC,GAAG,KACvV,IAAIC,GAAGC,KAAKC,MAAMD,KAAKC,MAAiC,SAAYhU,GAAU,OAAPA,KAAK,EAAS,IAAIA,EAAE,GAAG,IAAIiU,GAAGjU,GAAGkU,GAAG,GAAG,CAAC,EAA/ED,GAAGF,KAAKI,IAAID,GAAGH,KAAKK,IAA4D,IAAIC,GAAG,GAAGC,GAAG,QAC7H,SAASC,GAAGvU,GAAG,OAAOA,GAAGA,GAAG,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAS,QAAFA,EAAU,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,OAAS,UAAFA,EAAY,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,UAAU,OAAO,UAAU,KAAK,WAAW,OAAO,WACzgB,QAAQ,OAAOA,EAAE,CAAC,SAASwU,GAAGxU,EAAEC,GAAG,IAAIC,EAAEF,EAAEyU,aAAa,GAAG,IAAIvU,EAAE,OAAO,EAAE,IAAIsB,EAAE,EAAEC,EAAEzB,EAAE0U,eAAehT,EAAE1B,EAAE2U,YAAYhT,EAAI,UAAFzB,EAAY,GAAG,IAAIyB,EAAE,CAAC,IAAIkE,EAAElE,GAAGF,EAAE,IAAIoE,EAAErE,EAAE+S,GAAG1O,GAAS,KAALnE,GAAGC,KAAUH,EAAE+S,GAAG7S,GAAI,MAAa,KAAPC,EAAEzB,GAAGuB,GAAQD,EAAE+S,GAAG5S,GAAG,IAAID,IAAIF,EAAE+S,GAAG7S,IAAI,GAAG,IAAIF,EAAE,OAAO,EAAE,GAAG,IAAIvB,GAAGA,IAAIuB,GAAG,KAAKvB,EAAEwB,MAAKA,EAAED,GAAGA,KAAEE,EAAEzB,GAAGA,IAAQ,KAAKwB,GAAG,KAAO,QAAFC,IAAY,OAAOzB,EAA0C,GAAxC,KAAO,EAAFuB,KAAOA,GAAK,GAAFtB,GAA4B,KAAtBD,EAAED,EAAE4U,gBAAwB,IAAI5U,EAAEA,EAAE6U,cAAc5U,GAAGuB,EAAE,EAAEvB,GAAcwB,EAAE,IAAbvB,EAAE,GAAG4T,GAAG7T,IAAUuB,GAAGxB,EAAEE,GAAGD,IAAIwB,EAAE,OAAOD,CAAC,CACvc,SAASsT,GAAG9U,EAAEC,GAAG,OAAOD,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAOC,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAOA,EAAE,IAAuJ,QAAQ,OAAO,EAAE,CACrN,SAAS8U,GAAG/U,GAAgC,OAAO,KAApCA,GAAkB,WAAhBA,EAAEyU,cAAsCzU,EAAI,WAAFA,EAAa,WAAW,CAAC,CAAC,SAASgV,KAAK,IAAIhV,EAAEqU,GAAoC,OAA1B,KAAQ,SAAfA,KAAK,MAAqBA,GAAG,IAAWrU,CAAC,CAAC,SAASiV,GAAGjV,GAAG,IAAI,IAAIC,EAAE,GAAGC,EAAE,EAAE,GAAGA,EAAEA,IAAID,EAAEkQ,KAAKnQ,GAAG,OAAOC,CAAC,CAC3a,SAASiV,GAAGlV,EAAEC,EAAEC,GAAGF,EAAEyU,cAAcxU,EAAE,YAAYA,IAAID,EAAE0U,eAAe,EAAE1U,EAAE2U,YAAY,IAAG3U,EAAEA,EAAEmV,YAAWlV,EAAE,GAAG6T,GAAG7T,IAAQC,CAAC,CACzH,SAASkV,GAAGpV,EAAEC,GAAG,IAAIC,EAAEF,EAAE4U,gBAAgB3U,EAAE,IAAID,EAAEA,EAAE6U,cAAc3U,GAAG,CAAC,IAAIsB,EAAE,GAAGsS,GAAG5T,GAAGuB,EAAE,GAAGD,EAAEC,EAAExB,EAAED,EAAEwB,GAAGvB,IAAID,EAAEwB,IAAIvB,GAAGC,IAAIuB,CAAC,CAAC,CAAC,IAAI4T,GAAE,EAAE,SAASC,GAAGtV,GAAS,OAAO,GAAbA,IAAIA,GAAa,EAAEA,EAAE,KAAO,UAAFA,GAAa,GAAG,UAAU,EAAE,CAAC,CAAC,IAAIuV,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,IAAG,EAAGC,GAAG,GAAGC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,IAAIC,GAAG,IAAID,IAAIE,GAAG,GAAGC,GAAG,6PAA6P/T,MAAM,KAChiB,SAASgU,GAAGtW,EAAEC,GAAG,OAAOD,GAAG,IAAK,UAAU,IAAK,WAAW8V,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,YAAYC,GAAG,KAAK,MAAM,IAAK,YAAY,IAAK,WAAWC,GAAG,KAAK,MAAM,IAAK,cAAc,IAAK,aAAaC,GAAGM,OAAOtW,EAAEuW,WAAW,MAAM,IAAK,oBAAoB,IAAK,qBAAqBL,GAAGI,OAAOtW,EAAEuW,WAAW,CACnT,SAASC,GAAGzW,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAG,OAAG,OAAO1B,GAAGA,EAAE0W,cAAchV,GAAS1B,EAAE,CAAC2W,UAAU1W,EAAE2W,aAAa1W,EAAE2W,iBAAiBrV,EAAEkV,YAAYhV,EAAEoV,iBAAiB,CAACrV,IAAI,OAAOxB,IAAY,QAARA,EAAE8P,GAAG9P,KAAauV,GAAGvV,IAAID,IAAEA,EAAE6W,kBAAkBrV,EAAEvB,EAAED,EAAE8W,iBAAiB,OAAOrV,IAAI,IAAIxB,EAAE2N,QAAQnM,IAAIxB,EAAEkQ,KAAK1O,GAAUzB,EAAC,CAEpR,SAAS+W,GAAG/W,GAAG,IAAIC,EAAE+W,GAAGhX,EAAEuP,QAAQ,GAAG,OAAOtP,EAAE,CAAC,IAAIC,EAAEsR,GAAGvR,GAAG,GAAG,OAAOC,EAAE,GAAW,MAARD,EAAEC,EAAEiG,MAAY,GAAW,QAARlG,EAAE2R,GAAG1R,IAA4D,OAA/CF,EAAE2W,UAAU1W,OAAE0V,GAAG3V,EAAEiX,UAAS,WAAWxB,GAAGvV,EAAE,SAAgB,GAAG,IAAID,GAAGC,EAAE8P,UAAUmC,QAAQN,cAAcqF,aAAmE,YAArDlX,EAAE2W,UAAU,IAAIzW,EAAEiG,IAAIjG,EAAE8P,UAAUmH,cAAc,KAAY,CAACnX,EAAE2W,UAAU,IAAI,CAClT,SAASS,GAAGpX,GAAG,GAAG,OAAOA,EAAE2W,UAAU,OAAM,EAAG,IAAI,IAAI1W,EAAED,EAAE8W,iBAAiB,EAAE7W,EAAEG,QAAQ,CAAC,IAAIF,EAAEmX,GAAGrX,EAAE4W,aAAa5W,EAAE6W,iBAAiB5W,EAAE,GAAGD,EAAE0W,aAAa,GAAG,OAAOxW,EAAiG,OAAe,QAARD,EAAE8P,GAAG7P,KAAasV,GAAGvV,GAAGD,EAAE2W,UAAUzW,GAAE,EAA3H,IAAIsB,EAAE,IAAtBtB,EAAEF,EAAE0W,aAAwBzP,YAAY/G,EAAEgC,KAAKhC,GAAGmP,GAAG7N,EAAEtB,EAAEqP,OAAO+H,cAAc9V,GAAG6N,GAAG,KAA0DpP,EAAEsX,OAAO,CAAC,OAAM,CAAE,CAAC,SAASC,GAAGxX,EAAEC,EAAEC,GAAGkX,GAAGpX,IAAIE,EAAEqW,OAAOtW,EAAE,CAAC,SAASwX,KAAK7B,IAAG,EAAG,OAAOE,IAAIsB,GAAGtB,MAAMA,GAAG,MAAM,OAAOC,IAAIqB,GAAGrB,MAAMA,GAAG,MAAM,OAAOC,IAAIoB,GAAGpB,MAAMA,GAAG,MAAMC,GAAG1T,QAAQiV,IAAIrB,GAAG5T,QAAQiV,GAAG,CACnf,SAASE,GAAG1X,EAAEC,GAAGD,EAAE2W,YAAY1W,IAAID,EAAE2W,UAAU,KAAKf,KAAKA,IAAG,EAAG9V,EAAGyS,0BAA0BzS,EAAGyT,wBAAwBkE,KAAK,CAC5H,SAASE,GAAG3X,GAAG,SAASC,EAAEA,GAAG,OAAOyX,GAAGzX,EAAED,EAAE,CAAC,GAAG,EAAE6V,GAAGzV,OAAO,CAACsX,GAAG7B,GAAG,GAAG7V,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAE2V,GAAGzV,OAAOF,IAAI,CAAC,IAAIsB,EAAEqU,GAAG3V,GAAGsB,EAAEmV,YAAY3W,IAAIwB,EAAEmV,UAAU,KAAK,CAAC,CAAyF,IAAxF,OAAOb,IAAI4B,GAAG5B,GAAG9V,GAAG,OAAO+V,IAAI2B,GAAG3B,GAAG/V,GAAG,OAAOgW,IAAI0B,GAAG1B,GAAGhW,GAAGiW,GAAG1T,QAAQtC,GAAGkW,GAAG5T,QAAQtC,GAAOC,EAAE,EAAEA,EAAEkW,GAAGhW,OAAOF,KAAIsB,EAAE4U,GAAGlW,IAAKyW,YAAY3W,IAAIwB,EAAEmV,UAAU,MAAM,KAAK,EAAEP,GAAGhW,QAAiB,QAARF,EAAEkW,GAAG,IAAYO,WAAYI,GAAG7W,GAAG,OAAOA,EAAEyW,WAAWP,GAAGmB,OAAO,CAAC,IAAIK,GAAGnU,EAAGoU,wBAAwBC,IAAG,EAC5a,SAASC,GAAG/X,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE4T,GAAE3T,EAAEkW,GAAGI,WAAWJ,GAAGI,WAAW,KAAK,IAAI3C,GAAE,EAAE4C,GAAGjY,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,QAAQ6T,GAAE5T,EAAEmW,GAAGI,WAAWtW,CAAC,CAAC,CAAC,SAASwW,GAAGlY,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE4T,GAAE3T,EAAEkW,GAAGI,WAAWJ,GAAGI,WAAW,KAAK,IAAI3C,GAAE,EAAE4C,GAAGjY,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,QAAQ6T,GAAE5T,EAAEmW,GAAGI,WAAWtW,CAAC,CAAC,CACjO,SAASuW,GAAGjY,EAAEC,EAAEC,EAAEsB,GAAG,GAAGsW,GAAG,CAAC,IAAIrW,EAAE4V,GAAGrX,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,OAAOC,EAAE0W,GAAGnY,EAAEC,EAAEuB,EAAE4W,GAAGlY,GAAGoW,GAAGtW,EAAEwB,QAAQ,GANtF,SAAYxB,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,OAAOxB,GAAG,IAAK,UAAU,OAAO6V,GAAGW,GAAGX,GAAG9V,EAAEC,EAAEC,EAAEsB,EAAEC,IAAG,EAAG,IAAK,YAAY,OAAOsU,GAAGU,GAAGV,GAAG/V,EAAEC,EAAEC,EAAEsB,EAAEC,IAAG,EAAG,IAAK,YAAY,OAAOuU,GAAGS,GAAGT,GAAGhW,EAAEC,EAAEC,EAAEsB,EAAEC,IAAG,EAAG,IAAK,cAAc,IAAIC,EAAED,EAAE+U,UAAkD,OAAxCP,GAAGxQ,IAAI/D,EAAE+U,GAAGR,GAAG/O,IAAIxF,IAAI,KAAK1B,EAAEC,EAAEC,EAAEsB,EAAEC,KAAU,EAAG,IAAK,oBAAoB,OAAOC,EAAED,EAAE+U,UAAUL,GAAG1Q,IAAI/D,EAAE+U,GAAGN,GAAGjP,IAAIxF,IAAI,KAAK1B,EAAEC,EAAEC,EAAEsB,EAAEC,KAAI,EAAG,OAAM,CAAE,CAM1Q4W,CAAG5W,EAAEzB,EAAEC,EAAEC,EAAEsB,GAAGA,EAAE8W,uBAAuB,GAAGhC,GAAGtW,EAAEwB,GAAK,EAAFvB,IAAM,EAAEoW,GAAGzI,QAAQ5N,GAAG,CAAC,KAAK,OAAOyB,GAAG,CAAC,IAAIC,EAAEqO,GAAGtO,GAA0D,GAAvD,OAAOC,GAAG6T,GAAG7T,GAAiB,QAAdA,EAAE2V,GAAGrX,EAAEC,EAAEC,EAAEsB,KAAa2W,GAAGnY,EAAEC,EAAEuB,EAAE4W,GAAGlY,GAAMwB,IAAID,EAAE,MAAMA,EAAEC,CAAC,CAAC,OAAOD,GAAGD,EAAE8W,iBAAiB,MAAMH,GAAGnY,EAAEC,EAAEuB,EAAE,KAAKtB,EAAE,CAAC,CAAC,IAAIkY,GAAG,KACpU,SAASf,GAAGrX,EAAEC,EAAEC,EAAEsB,GAA2B,GAAxB4W,GAAG,KAAwB,QAAXpY,EAAEgX,GAAVhX,EAAEsP,GAAG9N,KAAuB,GAAW,QAARvB,EAAEuR,GAAGxR,IAAYA,EAAE,UAAU,GAAW,MAARE,EAAED,EAAEkG,KAAW,CAAS,GAAG,QAAXnG,EAAE4R,GAAG3R,IAAe,OAAOD,EAAEA,EAAE,IAAI,MAAM,GAAG,IAAIE,EAAE,CAAC,GAAGD,EAAE+P,UAAUmC,QAAQN,cAAcqF,aAAa,OAAO,IAAIjX,EAAEkG,IAAIlG,EAAE+P,UAAUmH,cAAc,KAAKnX,EAAE,IAAI,MAAMC,IAAID,IAAIA,EAAE,MAAW,OAALoY,GAAGpY,EAAS,IAAI,CAC7S,SAASuY,GAAGvY,GAAG,OAAOA,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,QAAQ,IAAK,cAAc,IAAK,OAAO,IAAK,MAAM,IAAK,WAAW,IAAK,WAAW,IAAK,UAAU,IAAK,YAAY,IAAK,OAAO,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,UAAU,IAAK,UAAU,IAAK,WAAW,IAAK,QAAQ,IAAK,YAAY,IAAK,UAAU,IAAK,QAAQ,IAAK,QAAQ,IAAK,OAAO,IAAK,gBAAgB,IAAK,cAAc,IAAK,YAAY,IAAK,aAAa,IAAK,QAAQ,IAAK,SAAS,IAAK,SAAS,IAAK,SAAS,IAAK,cAAc,IAAK,WAAW,IAAK,aAAa,IAAK,eAAe,IAAK,SAAS,IAAK,kBAAkB,IAAK,YAAY,IAAK,mBAAmB,IAAK,iBAAiB,IAAK,oBAAoB,IAAK,aAAa,IAAK,YAAY,IAAK,cAAc,IAAK,OAAO,IAAK,mBAAmB,IAAK,QAAQ,IAAK,aAAa,IAAK,WAAW,IAAK,SAAS,IAAK,cAAc,OAAO,EAAE,IAAK,OAAO,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,SAAS,IAAK,SAAS,IAAK,YAAY,IAAK,QAAQ,IAAK,aAAa,IAAK,aAAa,IAAK,eAAe,IAAK,eAAe,OAAO,EACpqC,IAAK,UAAU,OAAOgT,MAAM,KAAKE,GAAG,OAAO,EAAE,KAAKE,GAAG,OAAO,EAAE,KAAKE,GAAG,KAAKE,GAAG,OAAO,GAAG,KAAKE,GAAG,OAAO,UAAU,QAAQ,OAAO,GAAG,QAAQ,OAAO,GAAG,CAAC,IAAI8E,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAK,GAAGD,GAAG,OAAOA,GAAG,IAAI1Y,EAAkBwB,EAAhBvB,EAAEwY,GAAGvY,EAAED,EAAEG,OAASqB,EAAE,UAAU+W,GAAGA,GAAG7Q,MAAM6Q,GAAG9O,YAAYhI,EAAED,EAAErB,OAAO,IAAIJ,EAAE,EAAEA,EAAEE,GAAGD,EAAED,KAAKyB,EAAEzB,GAAGA,KAAK,IAAI2B,EAAEzB,EAAEF,EAAE,IAAIwB,EAAE,EAAEA,GAAGG,GAAG1B,EAAEC,EAAEsB,KAAKC,EAAEC,EAAEF,GAAGA,KAAK,OAAOkX,GAAGjX,EAAEoB,MAAM7C,EAAE,EAAEwB,EAAE,EAAEA,OAAE,EAAO,CACxY,SAASoX,GAAG5Y,GAAG,IAAIC,EAAED,EAAE6Y,QAA+E,MAAvE,aAAa7Y,EAAgB,KAAbA,EAAEA,EAAE8Y,WAAgB,KAAK7Y,IAAID,EAAE,IAAKA,EAAEC,EAAE,KAAKD,IAAIA,EAAE,IAAW,IAAIA,GAAG,KAAKA,EAAEA,EAAE,CAAC,CAAC,SAAS+Y,KAAK,OAAM,CAAE,CAAC,SAASC,KAAK,OAAM,CAAE,CAC5K,SAASC,GAAGjZ,GAAG,SAASC,EAAEA,EAAEuB,EAAEC,EAAEC,EAAEC,GAA6G,IAAI,IAAIzB,KAAlH0B,KAAKsX,WAAWjZ,EAAE2B,KAAKuX,YAAY1X,EAAEG,KAAKM,KAAKV,EAAEI,KAAK8U,YAAYhV,EAAEE,KAAK2N,OAAO5N,EAAEC,KAAKwX,cAAc,KAAkBpZ,EAAEA,EAAEmB,eAAejB,KAAKD,EAAED,EAAEE,GAAG0B,KAAK1B,GAAGD,EAAEA,EAAEyB,GAAGA,EAAExB,IAAgI,OAA5H0B,KAAKyX,oBAAoB,MAAM3X,EAAE4X,iBAAiB5X,EAAE4X,kBAAiB,IAAK5X,EAAE6X,aAAaR,GAAGC,GAAGpX,KAAK4X,qBAAqBR,GAAUpX,IAAI,CAC9E,OAD+EkD,EAAE7E,EAAEiB,UAAU,CAACuY,eAAe,WAAW7X,KAAK0X,kBAAiB,EAAG,IAAItZ,EAAE4B,KAAK8U,YAAY1W,IAAIA,EAAEyZ,eAAezZ,EAAEyZ,iBAAiB,mBAAmBzZ,EAAEuZ,cAC7evZ,EAAEuZ,aAAY,GAAI3X,KAAKyX,mBAAmBN,GAAG,EAAET,gBAAgB,WAAW,IAAItY,EAAE4B,KAAK8U,YAAY1W,IAAIA,EAAEsY,gBAAgBtY,EAAEsY,kBAAkB,mBAAmBtY,EAAE0Z,eAAe1Z,EAAE0Z,cAAa,GAAI9X,KAAK4X,qBAAqBT,GAAG,EAAEY,QAAQ,WAAW,EAAEC,aAAab,KAAY9Y,CAAC,CACjR,IAAoL4Z,GAAGC,GAAGC,GAAtLC,GAAG,CAACC,WAAW,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,SAASpa,GAAG,OAAOA,EAAEoa,WAAWC,KAAKC,KAAK,EAAEhB,iBAAiB,EAAEiB,UAAU,GAAGC,GAAGvB,GAAGe,IAAIS,GAAG3V,EAAE,CAAC,EAAEkV,GAAG,CAACU,KAAK,EAAEC,OAAO,IAAIC,GAAG3B,GAAGwB,IAAaI,GAAG/V,EAAE,CAAC,EAAE2V,GAAG,CAACK,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,iBAAiBC,GAAGC,OAAO,EAAEC,QAAQ,EAAEC,cAAc,SAAS5b,GAAG,YAAO,IAASA,EAAE4b,cAAc5b,EAAE6b,cAAc7b,EAAEwP,WAAWxP,EAAE8b,UAAU9b,EAAE6b,YAAY7b,EAAE4b,aAAa,EAAEG,UAAU,SAAS/b,GAAG,MAAG,cAC3eA,EAASA,EAAE+b,WAAU/b,IAAI+Z,KAAKA,IAAI,cAAc/Z,EAAEkC,MAAM2X,GAAG7Z,EAAE8a,QAAQf,GAAGe,QAAQhB,GAAG9Z,EAAE+a,QAAQhB,GAAGgB,SAASjB,GAAGD,GAAG,EAAEE,GAAG/Z,GAAU6Z,GAAE,EAAEmC,UAAU,SAAShc,GAAG,MAAM,cAAcA,EAAEA,EAAEgc,UAAUlC,EAAE,IAAImC,GAAGhD,GAAG4B,IAAiCqB,GAAGjD,GAA7BnU,EAAE,CAAC,EAAE+V,GAAG,CAACsB,aAAa,KAA4CC,GAAGnD,GAA9BnU,EAAE,CAAC,EAAE2V,GAAG,CAACmB,cAAc,KAA0ES,GAAGpD,GAA5DnU,EAAE,CAAC,EAAEkV,GAAG,CAACsC,cAAc,EAAEC,YAAY,EAAEC,cAAc,KAAcC,GAAG3X,EAAE,CAAC,EAAEkV,GAAG,CAAC0C,cAAc,SAAS1c,GAAG,MAAM,kBAAkBA,EAAEA,EAAE0c,cAAc7b,OAAO6b,aAAa,IAAIC,GAAG1D,GAAGwD,IAAyBG,GAAG3D,GAArBnU,EAAE,CAAC,EAAEkV,GAAG,CAAC6C,KAAK,KAAcC,GAAG,CAACC,IAAI,SACxfC,SAAS,IAAIC,KAAK,YAAYC,GAAG,UAAUC,MAAM,aAAaC,KAAK,YAAYC,IAAI,SAASC,IAAI,KAAKC,KAAK,cAAcC,KAAK,cAAcC,OAAO,aAAaC,gBAAgB,gBAAgBC,GAAG,CAAC,EAAE,YAAY,EAAE,MAAM,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,MAAM,GAAG,QAAQ,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI,GAAG,SAAS,GAAG,WAAW,GAAG,MAAM,GAAG,OAAO,GAAG,YAAY,GAAG,UAAU,GAAG,aAAa,GAAG,YAAY,GAAG,SAAS,GAAG,SAAS,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KACtf,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,UAAU,IAAI,aAAa,IAAI,QAAQC,GAAG,CAACC,IAAI,SAASC,QAAQ,UAAUC,KAAK,UAAUC,MAAM,YAAY,SAASC,GAAGje,GAAG,IAAIC,EAAE2B,KAAK8U,YAAY,OAAOzW,EAAEub,iBAAiBvb,EAAEub,iBAAiBxb,MAAIA,EAAE4d,GAAG5d,OAAMC,EAAED,EAAK,CAAC,SAASyb,KAAK,OAAOwC,EAAE,CAChS,IAAIC,GAAGpZ,EAAE,CAAC,EAAE2V,GAAG,CAAC0D,IAAI,SAASne,GAAG,GAAGA,EAAEme,IAAI,CAAC,IAAIle,EAAE6c,GAAG9c,EAAEme,MAAMne,EAAEme,IAAI,GAAG,iBAAiBle,EAAE,OAAOA,CAAC,CAAC,MAAM,aAAaD,EAAEkC,KAAc,MAARlC,EAAE4Y,GAAG5Y,IAAU,QAAQoe,OAAOC,aAAare,GAAI,YAAYA,EAAEkC,MAAM,UAAUlC,EAAEkC,KAAKyb,GAAG3d,EAAE6Y,UAAU,eAAe,EAAE,EAAEyF,KAAK,EAAEC,SAAS,EAAEnD,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,EAAEiD,OAAO,EAAEC,OAAO,EAAEjD,iBAAiBC,GAAG3C,SAAS,SAAS9Y,GAAG,MAAM,aAAaA,EAAEkC,KAAK0W,GAAG5Y,GAAG,CAAC,EAAE6Y,QAAQ,SAAS7Y,GAAG,MAAM,YAAYA,EAAEkC,MAAM,UAAUlC,EAAEkC,KAAKlC,EAAE6Y,QAAQ,CAAC,EAAE6F,MAAM,SAAS1e,GAAG,MAAM,aAC7eA,EAAEkC,KAAK0W,GAAG5Y,GAAG,YAAYA,EAAEkC,MAAM,UAAUlC,EAAEkC,KAAKlC,EAAE6Y,QAAQ,CAAC,IAAI8F,GAAG1F,GAAGiF,IAAiIU,GAAG3F,GAA7HnU,EAAE,CAAC,EAAE+V,GAAG,CAACrE,UAAU,EAAEqI,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY,EAAEC,UAAU,KAAmIC,GAAGrG,GAArHnU,EAAE,CAAC,EAAE2V,GAAG,CAAC8E,QAAQ,EAAEC,cAAc,EAAEC,eAAe,EAAEnE,OAAO,EAAEC,QAAQ,EAAEH,QAAQ,EAAEC,SAAS,EAAEG,iBAAiBC,MAA0EiE,GAAGzG,GAA3DnU,EAAE,CAAC,EAAEkV,GAAG,CAAC/X,aAAa,EAAEsa,YAAY,EAAEC,cAAc,KAAcmD,GAAG7a,EAAE,CAAC,EAAE+V,GAAG,CAAC+E,OAAO,SAAS5f,GAAG,MAAM,WAAWA,EAAEA,EAAE4f,OAAO,gBAAgB5f,GAAGA,EAAE6f,YAAY,CAAC,EACnfC,OAAO,SAAS9f,GAAG,MAAM,WAAWA,EAAEA,EAAE8f,OAAO,gBAAgB9f,GAAGA,EAAE+f,YAAY,eAAe/f,GAAGA,EAAEggB,WAAW,CAAC,EAAEC,OAAO,EAAEC,UAAU,IAAIC,GAAGlH,GAAG0G,IAAIS,GAAG,CAAC,EAAE,GAAG,GAAG,IAAIC,GAAGzf,GAAI,qBAAqBC,OAAOyf,GAAG,KAAK1f,GAAI,iBAAiBE,WAAWwf,GAAGxf,SAASyf,cAAc,IAAIC,GAAG5f,GAAI,cAAcC,SAASyf,GAAGG,GAAG7f,KAAMyf,IAAIC,IAAI,EAAEA,IAAI,IAAIA,IAAII,GAAGtC,OAAOC,aAAa,IAAIsC,IAAG,EAC1W,SAASC,GAAG5gB,EAAEC,GAAG,OAAOD,GAAG,IAAK,QAAQ,OAAO,IAAIogB,GAAGxS,QAAQ3N,EAAE4Y,SAAS,IAAK,UAAU,OAAO,MAAM5Y,EAAE4Y,QAAQ,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,OAAM,EAAG,QAAQ,OAAM,EAAG,CAAC,SAASgI,GAAG7gB,GAAc,MAAM,kBAAjBA,EAAEA,EAAE2a,SAAkC,SAAS3a,EAAEA,EAAE6c,KAAK,IAAI,CAAC,IAAIiE,IAAG,EAE9Q,IAAIC,GAAG,CAACC,OAAM,EAAGC,MAAK,EAAGC,UAAS,EAAG,kBAAiB,EAAGC,OAAM,EAAGC,OAAM,EAAGC,QAAO,EAAGC,UAAS,EAAGC,OAAM,EAAGC,QAAO,EAAGC,KAAI,EAAGC,MAAK,EAAGC,MAAK,EAAGC,KAAI,EAAGC,MAAK,GAAI,SAASC,GAAG9hB,GAAG,IAAIC,EAAED,GAAGA,EAAE6G,UAAU7G,EAAE6G,SAASrE,cAAc,MAAM,UAAUvC,IAAI8gB,GAAG/gB,EAAEkC,MAAM,aAAajC,CAAO,CAAC,SAAS8hB,GAAG/hB,EAAEC,EAAEC,EAAEsB,GAAG0O,GAAG1O,GAAsB,GAAnBvB,EAAE+hB,GAAG/hB,EAAE,aAAgBG,SAASF,EAAE,IAAIsa,GAAG,WAAW,SAAS,KAAKta,EAAEsB,GAAGxB,EAAEmQ,KAAK,CAAC8R,MAAM/hB,EAAEgiB,UAAUjiB,IAAI,CAAC,IAAIkiB,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGriB,GAAGsiB,GAAGtiB,EAAE,EAAE,CAAC,SAASuiB,GAAGviB,GAAe,GAAGyH,EAAT+a,GAAGxiB,IAAY,OAAOA,CAAC,CACpe,SAASyiB,GAAGziB,EAAEC,GAAG,GAAG,WAAWD,EAAE,OAAOC,CAAC,CAAC,IAAIyiB,IAAG,EAAG,GAAG9hB,EAAG,CAAC,IAAI+hB,GAAG,GAAG/hB,EAAG,CAAC,IAAIgiB,GAAG,YAAY9hB,SAAS,IAAI8hB,GAAG,CAAC,IAAIC,GAAG/hB,SAASC,cAAc,OAAO8hB,GAAGxf,aAAa,UAAU,WAAWuf,GAAG,oBAAoBC,GAAGC,OAAO,CAACH,GAAGC,EAAE,MAAMD,IAAG,EAAGD,GAAGC,MAAM7hB,SAASyf,cAAc,EAAEzf,SAASyf,aAAa,CAAC,SAASwC,KAAKZ,KAAKA,GAAGa,YAAY,mBAAmBC,IAAIb,GAAGD,GAAG,KAAK,CAAC,SAASc,GAAGjjB,GAAG,GAAG,UAAUA,EAAEiC,cAAcsgB,GAAGH,IAAI,CAAC,IAAIniB,EAAE,GAAG8hB,GAAG9hB,EAAEmiB,GAAGpiB,EAAEsP,GAAGtP,IAAIwQ,GAAG6R,GAAGpiB,EAAE,CAAC,CAC/b,SAASijB,GAAGljB,EAAEC,EAAEC,GAAG,YAAYF,GAAG+iB,KAAUX,GAAGliB,GAARiiB,GAAGliB,GAAUkjB,YAAY,mBAAmBF,KAAK,aAAajjB,GAAG+iB,IAAI,CAAC,SAASK,GAAGpjB,GAAG,GAAG,oBAAoBA,GAAG,UAAUA,GAAG,YAAYA,EAAE,OAAOuiB,GAAGH,GAAG,CAAC,SAASiB,GAAGrjB,EAAEC,GAAG,GAAG,UAAUD,EAAE,OAAOuiB,GAAGtiB,EAAE,CAAC,SAASqjB,GAAGtjB,EAAEC,GAAG,GAAG,UAAUD,GAAG,WAAWA,EAAE,OAAOuiB,GAAGtiB,EAAE,CAAiE,IAAIsjB,GAAG,oBAAoBtiB,OAAOmO,GAAGnO,OAAOmO,GAA5G,SAAYpP,EAAEC,GAAG,OAAOD,IAAIC,IAAI,IAAID,GAAG,EAAEA,IAAI,EAAEC,IAAID,IAAIA,GAAGC,IAAIA,CAAC,EACtW,SAASujB,GAAGxjB,EAAEC,GAAG,GAAGsjB,GAAGvjB,EAAEC,GAAG,OAAM,EAAG,GAAG,kBAAkBD,GAAG,OAAOA,GAAG,kBAAkBC,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAIC,EAAEe,OAAO6M,KAAK9N,GAAGwB,EAAEP,OAAO6M,KAAK7N,GAAG,GAAGC,EAAEE,SAASoB,EAAEpB,OAAO,OAAM,EAAG,IAAIoB,EAAE,EAAEA,EAAEtB,EAAEE,OAAOoB,IAAI,CAAC,IAAIC,EAAEvB,EAAEsB,GAAG,IAAIR,EAAGiC,KAAKhD,EAAEwB,KAAK8hB,GAAGvjB,EAAEyB,GAAGxB,EAAEwB,IAAI,OAAM,CAAE,CAAC,OAAM,CAAE,CAAC,SAASgiB,GAAGzjB,GAAG,KAAKA,GAAGA,EAAEmK,YAAYnK,EAAEA,EAAEmK,WAAW,OAAOnK,CAAC,CACtU,SAAS0jB,GAAG1jB,EAAEC,GAAG,IAAwBuB,EAApBtB,EAAEujB,GAAGzjB,GAAO,IAAJA,EAAE,EAAYE,GAAG,CAAC,GAAG,IAAIA,EAAEwK,SAAS,CAA0B,GAAzBlJ,EAAExB,EAAEE,EAAEwJ,YAAYtJ,OAAUJ,GAAGC,GAAGuB,GAAGvB,EAAE,MAAM,CAAC0jB,KAAKzjB,EAAE0jB,OAAO3jB,EAAED,GAAGA,EAAEwB,CAAC,CAACxB,EAAE,CAAC,KAAKE,GAAG,CAAC,GAAGA,EAAE2jB,YAAY,CAAC3jB,EAAEA,EAAE2jB,YAAY,MAAM7jB,CAAC,CAACE,EAAEA,EAAEwP,UAAU,CAACxP,OAAE,CAAM,CAACA,EAAEujB,GAAGvjB,EAAE,CAAC,CAAC,SAAS4jB,GAAG9jB,EAAEC,GAAG,SAAOD,IAAGC,KAAED,IAAIC,KAAKD,GAAG,IAAIA,EAAE0K,YAAYzK,GAAG,IAAIA,EAAEyK,SAASoZ,GAAG9jB,EAAEC,EAAEyP,YAAY,aAAa1P,EAAEA,EAAE+jB,SAAS9jB,KAAGD,EAAEgkB,4BAAwD,GAA7BhkB,EAAEgkB,wBAAwB/jB,KAAY,CAC9Z,SAASgkB,KAAK,IAAI,IAAIjkB,EAAEa,OAAOZ,EAAE2H,IAAK3H,aAAaD,EAAEkkB,mBAAmB,CAAC,IAAI,IAAIhkB,EAAE,kBAAkBD,EAAEkkB,cAAc5F,SAAS6F,IAAI,CAAC,MAAM5iB,GAAGtB,GAAE,CAAE,CAAC,IAAGA,EAAyB,MAAMD,EAAE2H,GAA/B5H,EAAEC,EAAEkkB,eAAgCrjB,SAAS,CAAC,OAAOb,CAAC,CAAC,SAASokB,GAAGrkB,GAAG,IAAIC,EAAED,GAAGA,EAAE6G,UAAU7G,EAAE6G,SAASrE,cAAc,OAAOvC,IAAI,UAAUA,IAAI,SAASD,EAAEkC,MAAM,WAAWlC,EAAEkC,MAAM,QAAQlC,EAAEkC,MAAM,QAAQlC,EAAEkC,MAAM,aAAalC,EAAEkC,OAAO,aAAajC,GAAG,SAASD,EAAEskB,gBAAgB,CACxa,SAASC,GAAGvkB,GAAG,IAAIC,EAAEgkB,KAAK/jB,EAAEF,EAAEwkB,YAAYhjB,EAAExB,EAAEykB,eAAe,GAAGxkB,IAAIC,GAAGA,GAAGA,EAAEyI,eAAemb,GAAG5jB,EAAEyI,cAAc+b,gBAAgBxkB,GAAG,CAAC,GAAG,OAAOsB,GAAG6iB,GAAGnkB,GAAG,GAAGD,EAAEuB,EAAEmjB,WAAc,KAAR3kB,EAAEwB,EAAEojB,OAAiB5kB,EAAEC,GAAG,mBAAmBC,EAAEA,EAAE2kB,eAAe5kB,EAAEC,EAAE4kB,aAAa/Q,KAAKgR,IAAI/kB,EAAEE,EAAEyH,MAAMvH,aAAa,IAAGJ,GAAGC,EAAEC,EAAEyI,eAAe7H,WAAWb,EAAE+kB,aAAankB,QAASokB,aAAa,CAACjlB,EAAEA,EAAEilB,eAAe,IAAIxjB,EAAEvB,EAAEwJ,YAAYtJ,OAAOsB,EAAEqS,KAAKgR,IAAIvjB,EAAEmjB,MAAMljB,GAAGD,OAAE,IAASA,EAAEojB,IAAIljB,EAAEqS,KAAKgR,IAAIvjB,EAAEojB,IAAInjB,IAAIzB,EAAEklB,QAAQxjB,EAAEF,IAAIC,EAAED,EAAEA,EAAEE,EAAEA,EAAED,GAAGA,EAAEiiB,GAAGxjB,EAAEwB,GAAG,IAAIC,EAAE+hB,GAAGxjB,EACvfsB,GAAGC,GAAGE,IAAI,IAAI3B,EAAEmlB,YAAYnlB,EAAEolB,aAAa3jB,EAAEkiB,MAAM3jB,EAAEqlB,eAAe5jB,EAAEmiB,QAAQ5jB,EAAEslB,YAAY3jB,EAAEgiB,MAAM3jB,EAAEulB,cAAc5jB,EAAEiiB,WAAU3jB,EAAEA,EAAEulB,eAAgBC,SAAShkB,EAAEkiB,KAAKliB,EAAEmiB,QAAQ5jB,EAAE0lB,kBAAkBhkB,EAAEF,GAAGxB,EAAE2lB,SAAS1lB,GAAGD,EAAEklB,OAAOvjB,EAAEgiB,KAAKhiB,EAAEiiB,UAAU3jB,EAAE2lB,OAAOjkB,EAAEgiB,KAAKhiB,EAAEiiB,QAAQ5jB,EAAE2lB,SAAS1lB,IAAI,CAAM,IAALA,EAAE,GAAOD,EAAEE,EAAEF,EAAEA,EAAE0P,YAAY,IAAI1P,EAAE0K,UAAUzK,EAAEkQ,KAAK,CAAC0V,QAAQ7lB,EAAE8lB,KAAK9lB,EAAE+lB,WAAWC,IAAIhmB,EAAEimB,YAAmD,IAAvC,oBAAoB/lB,EAAEgmB,OAAOhmB,EAAEgmB,QAAYhmB,EAAE,EAAEA,EAAED,EAAEG,OAAOF,KAAIF,EAAEC,EAAEC,IAAK2lB,QAAQE,WAAW/lB,EAAE8lB,KAAK9lB,EAAE6lB,QAAQI,UAAUjmB,EAAEgmB,GAAG,CAAC,CACzf,IAAIG,GAAGvlB,GAAI,iBAAiBE,UAAU,IAAIA,SAASyf,aAAa6F,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,IAAG,EAC3F,SAASC,GAAGxmB,EAAEC,EAAEC,GAAG,IAAIsB,EAAEtB,EAAEW,SAASX,EAAEA,EAAEY,SAAS,IAAIZ,EAAEwK,SAASxK,EAAEA,EAAEyI,cAAc4d,IAAI,MAAMH,IAAIA,KAAKxe,EAAGpG,KAAU,mBAALA,EAAE4kB,KAAyB/B,GAAG7iB,GAAGA,EAAE,CAACmjB,MAAMnjB,EAAEqjB,eAAeD,IAAIpjB,EAAEsjB,cAAuFtjB,EAAE,CAAC4jB,YAA3E5jB,GAAGA,EAAEmH,eAAenH,EAAEmH,cAAcqc,aAAankB,QAAQokB,gBAA+BG,WAAWC,aAAa7jB,EAAE6jB,aAAaC,UAAU9jB,EAAE8jB,UAAUC,YAAY/jB,EAAE+jB,aAAce,IAAI9C,GAAG8C,GAAG9kB,KAAK8kB,GAAG9kB,EAAsB,GAApBA,EAAEwgB,GAAGqE,GAAG,aAAgBjmB,SAASH,EAAE,IAAIua,GAAG,WAAW,SAAS,KAAKva,EAAEC,GAAGF,EAAEmQ,KAAK,CAAC8R,MAAMhiB,EAAEiiB,UAAU1gB,IAAIvB,EAAEsP,OAAO6W,KAAK,CACtf,SAASK,GAAGzmB,EAAEC,GAAG,IAAIC,EAAE,CAAC,EAAiF,OAA/EA,EAAEF,EAAEwC,eAAevC,EAAEuC,cAActC,EAAE,SAASF,GAAG,SAASC,EAAEC,EAAE,MAAMF,GAAG,MAAMC,EAASC,CAAC,CAAC,IAAIwmB,GAAG,CAACC,aAAaF,GAAG,YAAY,gBAAgBG,mBAAmBH,GAAG,YAAY,sBAAsBI,eAAeJ,GAAG,YAAY,kBAAkBK,cAAcL,GAAG,aAAa,kBAAkBM,GAAG,CAAC,EAAEC,GAAG,CAAC,EACpF,SAASC,GAAGjnB,GAAG,GAAG+mB,GAAG/mB,GAAG,OAAO+mB,GAAG/mB,GAAG,IAAI0mB,GAAG1mB,GAAG,OAAOA,EAAE,IAAYE,EAARD,EAAEymB,GAAG1mB,GAAK,IAAIE,KAAKD,EAAE,GAAGA,EAAEkB,eAAejB,IAAIA,KAAK8mB,GAAG,OAAOD,GAAG/mB,GAAGC,EAAEC,GAAG,OAAOF,CAAC,CAA/XY,IAAKomB,GAAGlmB,SAASC,cAAc,OAAO4M,MAAM,mBAAmB9M,gBAAgB6lB,GAAGC,aAAaO,iBAAiBR,GAAGE,mBAAmBM,iBAAiBR,GAAGG,eAAeK,WAAW,oBAAoBrmB,eAAe6lB,GAAGI,cAAc9O,YAAwJ,IAAImP,GAAGF,GAAG,gBAAgBG,GAAGH,GAAG,sBAAsBI,GAAGJ,GAAG,kBAAkBK,GAAGL,GAAG,iBAAiBM,GAAG,IAAIrR,IAAIsR,GAAG,smBAAsmBllB,MAAM,KAC/lC,SAASmlB,GAAGznB,EAAEC,GAAGsnB,GAAG9hB,IAAIzF,EAAEC,GAAGQ,EAAGR,EAAE,CAACD,GAAG,CAAC,IAAI,IAAI0nB,GAAG,EAAEA,GAAGF,GAAGpnB,OAAOsnB,KAAK,CAAC,IAAIC,GAAGH,GAAGE,IAA2DD,GAApDE,GAAGnlB,cAAuD,MAAtCmlB,GAAG,GAAGhlB,cAAcglB,GAAG9kB,MAAM,IAAiB,CAAC4kB,GAAGN,GAAG,kBAAkBM,GAAGL,GAAG,wBAAwBK,GAAGJ,GAAG,oBAAoBI,GAAG,WAAW,iBAAiBA,GAAG,UAAU,WAAWA,GAAG,WAAW,UAAUA,GAAGH,GAAG,mBAAmB5mB,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,eAAe,CAAC,WAAW,cAAcA,EAAG,iBAAiB,CAAC,aAAa,gBAC7cA,EAAG,iBAAiB,CAAC,aAAa,gBAAgBD,EAAG,WAAW,oEAAoE6B,MAAM,MAAM7B,EAAG,WAAW,uFAAuF6B,MAAM,MAAM7B,EAAG,gBAAgB,CAAC,iBAAiB,WAAW,YAAY,UAAUA,EAAG,mBAAmB,2DAA2D6B,MAAM,MAAM7B,EAAG,qBAAqB,6DAA6D6B,MAAM,MAC/f7B,EAAG,sBAAsB,8DAA8D6B,MAAM,MAAM,IAAIslB,GAAG,6NAA6NtlB,MAAM,KAAKulB,GAAG,IAAItnB,IAAI,0CAA0C+B,MAAM,KAAKwlB,OAAOF,KACzZ,SAASG,GAAG/nB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEkC,MAAM,gBAAgBlC,EAAEoZ,cAAclZ,EAlDjE,SAAYF,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAA4B,GAAzByL,GAAGR,MAAMnP,KAAKzB,WAAc+Q,GAAG,CAAC,IAAGA,GAAgC,MAAMjM,MAAMlF,EAAE,MAA1C,IAAI6F,EAAEuL,GAAGD,IAAG,EAAGC,GAAG,KAA8BC,KAAKA,IAAG,EAAGC,GAAGzL,EAAE,CAAC,CAkDpEoiB,CAAGxmB,EAAEvB,OAAE,EAAOD,GAAGA,EAAEoZ,cAAc,IAAI,CACxG,SAASkJ,GAAGtiB,EAAEC,GAAGA,EAAE,KAAO,EAAFA,GAAK,IAAI,IAAIC,EAAE,EAAEA,EAAEF,EAAEI,OAAOF,IAAI,CAAC,IAAIsB,EAAExB,EAAEE,GAAGuB,EAAED,EAAEygB,MAAMzgB,EAAEA,EAAE0gB,UAAUliB,EAAE,CAAC,IAAI0B,OAAE,EAAO,GAAGzB,EAAE,IAAI,IAAI0B,EAAEH,EAAEpB,OAAO,EAAE,GAAGuB,EAAEA,IAAI,CAAC,IAAIkE,EAAErE,EAAEG,GAAGmE,EAAED,EAAEoiB,SAASriB,EAAEC,EAAEuT,cAA2B,GAAbvT,EAAEA,EAAEqiB,SAAYpiB,IAAIpE,GAAGD,EAAE+X,uBAAuB,MAAMxZ,EAAE+nB,GAAGtmB,EAAEoE,EAAED,GAAGlE,EAAEoE,CAAC,MAAM,IAAInE,EAAE,EAAEA,EAAEH,EAAEpB,OAAOuB,IAAI,CAAoD,GAA5CmE,GAAPD,EAAErE,EAAEG,IAAOsmB,SAASriB,EAAEC,EAAEuT,cAAcvT,EAAEA,EAAEqiB,SAAYpiB,IAAIpE,GAAGD,EAAE+X,uBAAuB,MAAMxZ,EAAE+nB,GAAGtmB,EAAEoE,EAAED,GAAGlE,EAAEoE,CAAC,CAAC,CAAC,CAAC,GAAGsL,GAAG,MAAMpR,EAAEqR,GAAGD,IAAG,EAAGC,GAAG,KAAKrR,CAAE,CAC5a,SAASmoB,GAAEnoB,EAAEC,GAAG,IAAIC,EAAED,EAAEmoB,SAAI,IAASloB,IAAIA,EAAED,EAAEmoB,IAAI,IAAI7nB,KAAK,IAAIiB,EAAExB,EAAE,WAAWE,EAAEmoB,IAAI7mB,KAAK8mB,GAAGroB,EAAED,EAAE,GAAE,GAAIE,EAAES,IAAIa,GAAG,CAAC,SAAS+mB,GAAGvoB,EAAEC,EAAEC,GAAG,IAAIsB,EAAE,EAAEvB,IAAIuB,GAAG,GAAG8mB,GAAGpoB,EAAEF,EAAEwB,EAAEvB,EAAE,CAAC,IAAIuoB,GAAG,kBAAkBzU,KAAK0U,SAASve,SAAS,IAAIrH,MAAM,GAAG,SAAS6lB,GAAG1oB,GAAG,IAAIA,EAAEwoB,IAAI,CAACxoB,EAAEwoB,KAAI,EAAGloB,EAAGiC,SAAQ,SAAStC,GAAG,oBAAoBA,IAAI4nB,GAAGQ,IAAIpoB,IAAIsoB,GAAGtoB,GAAE,EAAGD,GAAGuoB,GAAGtoB,GAAE,EAAGD,GAAG,IAAG,IAAIC,EAAE,IAAID,EAAE0K,SAAS1K,EAAEA,EAAE2I,cAAc,OAAO1I,GAAGA,EAAEuoB,MAAMvoB,EAAEuoB,KAAI,EAAGD,GAAG,mBAAkB,EAAGtoB,GAAG,CAAC,CACjb,SAASqoB,GAAGtoB,EAAEC,EAAEC,EAAEsB,GAAG,OAAO+W,GAAGtY,IAAI,KAAK,EAAE,IAAIwB,EAAEsW,GAAG,MAAM,KAAK,EAAEtW,EAAEyW,GAAG,MAAM,QAAQzW,EAAEwW,GAAG/X,EAAEuB,EAAEknB,KAAK,KAAK1oB,EAAEC,EAAEF,GAAGyB,OAAE,GAAQiP,IAAI,eAAezQ,GAAG,cAAcA,GAAG,UAAUA,IAAIwB,GAAE,GAAID,OAAE,IAASC,EAAEzB,EAAE4Q,iBAAiB3Q,EAAEC,EAAE,CAAC0oB,SAAQ,EAAGC,QAAQpnB,IAAIzB,EAAE4Q,iBAAiB3Q,EAAEC,GAAE,QAAI,IAASuB,EAAEzB,EAAE4Q,iBAAiB3Q,EAAEC,EAAE,CAAC2oB,QAAQpnB,IAAIzB,EAAE4Q,iBAAiB3Q,EAAEC,GAAE,EAAG,CAClV,SAASiY,GAAGnY,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAEF,EAAE,GAAG,KAAO,EAAFvB,IAAM,KAAO,EAAFA,IAAM,OAAOuB,EAAExB,EAAE,OAAO,CAAC,GAAG,OAAOwB,EAAE,OAAO,IAAIG,EAAEH,EAAE2E,IAAI,GAAG,IAAIxE,GAAG,IAAIA,EAAE,CAAC,IAAIkE,EAAErE,EAAEwO,UAAUmH,cAAc,GAAGtR,IAAIpE,GAAG,IAAIoE,EAAE6E,UAAU7E,EAAE6J,aAAajO,EAAE,MAAM,GAAG,IAAIE,EAAE,IAAIA,EAAEH,EAAEkQ,OAAO,OAAO/P,GAAG,CAAC,IAAImE,EAAEnE,EAAEwE,IAAI,IAAG,IAAIL,GAAG,IAAIA,MAAKA,EAAEnE,EAAEqO,UAAUmH,iBAAkB1V,GAAG,IAAIqE,EAAE4E,UAAU5E,EAAE4J,aAAajO,GAAE,OAAOE,EAAEA,EAAE+P,MAAM,CAAC,KAAK,OAAO7L,GAAG,CAAS,GAAG,QAAXlE,EAAEqV,GAAGnR,IAAe,OAAe,GAAG,KAAXC,EAAEnE,EAAEwE,MAAc,IAAIL,EAAE,CAACtE,EAAEE,EAAEC,EAAE,SAAS3B,CAAC,CAAC6F,EAAEA,EAAE6J,UAAU,CAAC,CAAClO,EAAEA,EAAEkQ,MAAM,CAAClB,IAAG,WAAW,IAAIhP,EAAEE,EAAED,EAAE6N,GAAGpP,GAAGyB,EAAE,GACpf3B,EAAE,CAAC,IAAI6F,EAAE0hB,GAAGrgB,IAAIlH,GAAG,QAAG,IAAS6F,EAAE,CAAC,IAAIC,EAAE0U,GAAGsO,EAAE9oB,EAAE,OAAOA,GAAG,IAAK,WAAW,GAAG,IAAI4Y,GAAG1Y,GAAG,MAAMF,EAAE,IAAK,UAAU,IAAK,QAAQ8F,EAAE6Y,GAAG,MAAM,IAAK,UAAUmK,EAAE,QAAQhjB,EAAEsW,GAAG,MAAM,IAAK,WAAW0M,EAAE,OAAOhjB,EAAEsW,GAAG,MAAM,IAAK,aAAa,IAAK,YAAYtW,EAAEsW,GAAG,MAAM,IAAK,QAAQ,GAAG,IAAIlc,EAAEwb,OAAO,MAAM1b,EAAE,IAAK,WAAW,IAAK,WAAW,IAAK,YAAY,IAAK,YAAY,IAAK,UAAU,IAAK,WAAW,IAAK,YAAY,IAAK,cAAc8F,EAAEmW,GAAG,MAAM,IAAK,OAAO,IAAK,UAAU,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,WAAW,IAAK,YAAY,IAAK,OAAOnW,EAC1iBoW,GAAG,MAAM,IAAK,cAAc,IAAK,WAAW,IAAK,YAAY,IAAK,aAAapW,EAAEwZ,GAAG,MAAM,KAAK6H,GAAG,KAAKC,GAAG,KAAKC,GAAGvhB,EAAEuW,GAAG,MAAM,KAAKiL,GAAGxhB,EAAE4Z,GAAG,MAAM,IAAK,SAAS5Z,EAAE8U,GAAG,MAAM,IAAK,QAAQ9U,EAAEqa,GAAG,MAAM,IAAK,OAAO,IAAK,MAAM,IAAK,QAAQra,EAAE6W,GAAG,MAAM,IAAK,oBAAoB,IAAK,qBAAqB,IAAK,gBAAgB,IAAK,cAAc,IAAK,cAAc,IAAK,aAAa,IAAK,cAAc,IAAK,YAAY7W,EAAE8Y,GAAG,IAAImK,EAAE,KAAO,EAAF9oB,GAAK+oB,GAAGD,GAAG,WAAW/oB,EAAEipB,EAAEF,EAAE,OAAOljB,EAAEA,EAAE,UAAU,KAAKA,EAAEkjB,EAAE,GAAG,IAAI,IAAQG,EAAJC,EAAE3nB,EAAI,OAC/e2nB,GAAG,CAAK,IAAIC,GAARF,EAAEC,GAAUnZ,UAAsF,GAA5E,IAAIkZ,EAAE/iB,KAAK,OAAOijB,IAAIF,EAAEE,EAAE,OAAOH,IAAc,OAAVG,EAAE3Y,GAAG0Y,EAAEF,KAAYF,EAAE5Y,KAAKkZ,GAAGF,EAAEC,EAAEF,MAASF,EAAE,MAAMG,EAAEA,EAAEzX,MAAM,CAAC,EAAEqX,EAAE3oB,SAASyF,EAAE,IAAIC,EAAED,EAAEijB,EAAE,KAAK5oB,EAAEuB,GAAGE,EAAEwO,KAAK,CAAC8R,MAAMpc,EAAEqc,UAAU6G,IAAI,CAAC,CAAC,GAAG,KAAO,EAAF9oB,GAAK,CAA4E,GAAnC6F,EAAE,aAAa9F,GAAG,eAAeA,KAAtE6F,EAAE,cAAc7F,GAAG,gBAAgBA,IAA2CE,IAAImP,MAAKyZ,EAAE5oB,EAAE0b,eAAe1b,EAAE2b,eAAe7E,GAAG8R,KAAIA,EAAEQ,OAAgBxjB,GAAGD,KAAGA,EAAEpE,EAAEZ,SAASY,EAAEA,GAAGoE,EAAEpE,EAAEkH,eAAe9C,EAAEmf,aAAanf,EAAE0jB,aAAa1oB,OAAUiF,GAAqCA,EAAEtE,EAAiB,QAAfsnB,GAAnCA,EAAE5oB,EAAE0b,eAAe1b,EAAE4b,WAAkB9E,GAAG8R,GAAG,QAC9dA,KAARE,EAAExX,GAAGsX,KAAU,IAAIA,EAAE3iB,KAAK,IAAI2iB,EAAE3iB,OAAK2iB,EAAE,QAAUhjB,EAAE,KAAKgjB,EAAEtnB,GAAKsE,IAAIgjB,GAAE,CAAgU,GAA/TC,EAAE9M,GAAGmN,EAAE,eAAeH,EAAE,eAAeE,EAAE,QAAW,eAAenpB,GAAG,gBAAgBA,IAAE+oB,EAAEnK,GAAGwK,EAAE,iBAAiBH,EAAE,iBAAiBE,EAAE,WAAUH,EAAE,MAAMljB,EAAED,EAAE2c,GAAG1c,GAAGojB,EAAE,MAAMJ,EAAEjjB,EAAE2c,GAAGsG,IAAGjjB,EAAE,IAAIkjB,EAAEK,EAAED,EAAE,QAAQrjB,EAAE5F,EAAEuB,IAAK8N,OAAOyZ,EAAEnjB,EAAE+V,cAAcsN,EAAEE,EAAE,KAAKpS,GAAGvV,KAAKD,KAAIunB,EAAE,IAAIA,EAAEE,EAAEE,EAAE,QAAQL,EAAE5oB,EAAEuB,IAAK8N,OAAO2Z,EAAEH,EAAEnN,cAAcoN,EAAEI,EAAEL,GAAGC,EAAEI,EAAKtjB,GAAGgjB,EAAE7oB,EAAE,CAAa,IAARgpB,EAAEH,EAAEK,EAAE,EAAMD,EAAhBH,EAAEjjB,EAAkBojB,EAAEA,EAAEM,GAAGN,GAAGC,IAAQ,IAAJD,EAAE,EAAME,EAAEH,EAAEG,EAAEA,EAAEI,GAAGJ,GAAGF,IAAI,KAAK,EAAEC,EAAED,GAAGH,EAAES,GAAGT,GAAGI,IAAI,KAAK,EAAED,EAAEC,GAAGF,EACpfO,GAAGP,GAAGC,IAAI,KAAKC,KAAK,CAAC,GAAGJ,IAAIE,GAAG,OAAOA,GAAGF,IAAIE,EAAExX,UAAU,MAAMxR,EAAE8oB,EAAES,GAAGT,GAAGE,EAAEO,GAAGP,EAAE,CAACF,EAAE,IAAI,MAAMA,EAAE,KAAK,OAAOjjB,GAAG2jB,GAAG9nB,EAAEkE,EAAEC,EAAEijB,GAAE,GAAI,OAAOD,GAAG,OAAOE,GAAGS,GAAG9nB,EAAEqnB,EAAEF,EAAEC,GAAE,EAAG,CAA8D,GAAG,YAA1CjjB,GAAjBD,EAAErE,EAAEghB,GAAGhhB,GAAGX,QAAWgG,UAAUhB,EAAEgB,SAASrE,gBAA+B,UAAUsD,GAAG,SAASD,EAAE3D,KAAK,IAAIwnB,EAAGjH,QAAQ,GAAGX,GAAGjc,GAAG,GAAG6c,GAAGgH,EAAGpG,OAAO,CAACoG,EAAGtG,GAAG,IAAIuG,EAAGzG,EAAE,MAAMpd,EAAED,EAAEgB,WAAW,UAAUf,EAAEtD,gBAAgB,aAAaqD,EAAE3D,MAAM,UAAU2D,EAAE3D,QAAQwnB,EAAGrG,IACrV,OAD4VqG,IAAKA,EAAGA,EAAG1pB,EAAEwB,IAAKugB,GAAGpgB,EAAE+nB,EAAGxpB,EAAEuB,IAAWkoB,GAAIA,EAAG3pB,EAAE6F,EAAErE,GAAG,aAAaxB,IAAI2pB,EAAG9jB,EAAEqC,gBAClfyhB,EAAGrhB,YAAY,WAAWzC,EAAE3D,MAAMuG,GAAG5C,EAAE,SAASA,EAAE8B,QAAOgiB,EAAGnoB,EAAEghB,GAAGhhB,GAAGX,OAAcb,GAAG,IAAK,WAAa8hB,GAAG6H,IAAK,SAASA,EAAGrF,mBAAgB8B,GAAGuD,EAAGtD,GAAG7kB,EAAE8kB,GAAG,MAAK,MAAM,IAAK,WAAWA,GAAGD,GAAGD,GAAG,KAAK,MAAM,IAAK,YAAYG,IAAG,EAAG,MAAM,IAAK,cAAc,IAAK,UAAU,IAAK,UAAUA,IAAG,EAAGC,GAAG7kB,EAAEzB,EAAEuB,GAAG,MAAM,IAAK,kBAAkB,GAAG0kB,GAAG,MAAM,IAAK,UAAU,IAAK,QAAQK,GAAG7kB,EAAEzB,EAAEuB,GAAG,IAAImoB,EAAG,GAAGvJ,GAAGpgB,EAAE,CAAC,OAAOD,GAAG,IAAK,mBAAmB,IAAI6pB,EAAG,qBAAqB,MAAM5pB,EAAE,IAAK,iBAAiB4pB,EAAG,mBACpe,MAAM5pB,EAAE,IAAK,oBAAoB4pB,EAAG,sBAAsB,MAAM5pB,EAAE4pB,OAAG,CAAM,MAAM/I,GAAGF,GAAG5gB,EAAEE,KAAK2pB,EAAG,oBAAoB,YAAY7pB,GAAG,MAAME,EAAE2Y,UAAUgR,EAAG,sBAAsBA,IAAKpJ,IAAI,OAAOvgB,EAAEue,SAASqC,IAAI,uBAAuB+I,EAAG,qBAAqBA,GAAI/I,KAAK8I,EAAGjR,OAAYF,GAAG,UAARD,GAAG/W,GAAkB+W,GAAG7Q,MAAM6Q,GAAG9O,YAAYoX,IAAG,IAAiB,GAAZ6I,EAAG3H,GAAGxgB,EAAEqoB,IAASzpB,SAASypB,EAAG,IAAIjN,GAAGiN,EAAG7pB,EAAE,KAAKE,EAAEuB,GAAGE,EAAEwO,KAAK,CAAC8R,MAAM4H,EAAG3H,UAAUyH,IAAKC,EAAGC,EAAGhN,KAAK+M,EAAa,QAATA,EAAG/I,GAAG3gB,MAAe2pB,EAAGhN,KAAK+M,MAAUA,EAAGpJ,GA5BhM,SAAYxgB,EAAEC,GAAG,OAAOD,GAAG,IAAK,iBAAiB,OAAO6gB,GAAG5gB,GAAG,IAAK,WAAW,OAAG,KAAKA,EAAEye,MAAa,MAAKiC,IAAG,EAAUD,IAAG,IAAK,YAAY,OAAO1gB,EAAEC,EAAE4c,QAAS6D,IAAIC,GAAG,KAAK3gB,EAAE,QAAQ,OAAO,KAAK,CA4BE8pB,CAAG9pB,EAAEE,GA3Bzd,SAAYF,EAAEC,GAAG,GAAG6gB,GAAG,MAAM,mBAAmB9gB,IAAIqgB,IAAIO,GAAG5gB,EAAEC,IAAID,EAAE2Y,KAAKD,GAAGD,GAAGD,GAAG,KAAKsI,IAAG,EAAG9gB,GAAG,KAAK,OAAOA,GAAG,IAAK,QAAgQ,QAAQ,OAAO,KAA3P,IAAK,WAAW,KAAKC,EAAEmb,SAASnb,EAAEqb,QAAQrb,EAAEsb,UAAUtb,EAAEmb,SAASnb,EAAEqb,OAAO,CAAC,GAAGrb,EAAE8pB,MAAM,EAAE9pB,EAAE8pB,KAAK3pB,OAAO,OAAOH,EAAE8pB,KAAK,GAAG9pB,EAAEye,MAAM,OAAON,OAAOC,aAAape,EAAEye,MAAM,CAAC,OAAO,KAAK,IAAK,iBAAiB,OAAO+B,IAAI,OAAOxgB,EAAEwe,OAAO,KAAKxe,EAAE4c,KAAyB,CA2BqFmN,CAAGhqB,EAAEE,MACje,GADoesB,EAAEwgB,GAAGxgB,EAAE,kBACvepB,SAASqB,EAAE,IAAImb,GAAG,gBAAgB,cAAc,KAAK1c,EAAEuB,GAAGE,EAAEwO,KAAK,CAAC8R,MAAMxgB,EAAEygB,UAAU1gB,IAAIC,EAAEob,KAAK+M,GAAG,CAACtH,GAAG3gB,EAAE1B,EAAE,GAAE,CAAC,SAASopB,GAAGrpB,EAAEC,EAAEC,GAAG,MAAM,CAAC+nB,SAASjoB,EAAEkoB,SAASjoB,EAAEmZ,cAAclZ,EAAE,CAAC,SAAS8hB,GAAGhiB,EAAEC,GAAG,IAAI,IAAIC,EAAED,EAAE,UAAUuB,EAAE,GAAG,OAAOxB,GAAG,CAAC,IAAIyB,EAAEzB,EAAE0B,EAAED,EAAEuO,UAAU,IAAIvO,EAAE0E,KAAK,OAAOzE,IAAID,EAAEC,EAAY,OAAVA,EAAE+O,GAAGzQ,EAAEE,KAAYsB,EAAEyoB,QAAQZ,GAAGrpB,EAAE0B,EAAED,IAAc,OAAVC,EAAE+O,GAAGzQ,EAAEC,KAAYuB,EAAE2O,KAAKkZ,GAAGrpB,EAAE0B,EAAED,KAAKzB,EAAEA,EAAE0R,MAAM,CAAC,OAAOlQ,CAAC,CAAC,SAASgoB,GAAGxpB,GAAG,GAAG,OAAOA,EAAE,OAAO,KAAK,GAAGA,EAAEA,EAAE0R,aAAa1R,GAAG,IAAIA,EAAEmG,KAAK,OAAOnG,GAAI,IAAI,CACnd,SAASypB,GAAGzpB,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAI,IAAIC,EAAEzB,EAAEiZ,WAAWvX,EAAE,GAAG,OAAOzB,GAAGA,IAAIsB,GAAG,CAAC,IAAIqE,EAAE3F,EAAE4F,EAAED,EAAE4L,UAAU7L,EAAEC,EAAEmK,UAAU,GAAG,OAAOlK,GAAGA,IAAItE,EAAE,MAAM,IAAIqE,EAAEM,KAAK,OAAOP,IAAIC,EAAED,EAAEnE,EAAa,OAAVqE,EAAE2K,GAAGvQ,EAAEwB,KAAYC,EAAEsoB,QAAQZ,GAAGnpB,EAAE4F,EAAED,IAAKpE,GAAc,OAAVqE,EAAE2K,GAAGvQ,EAAEwB,KAAYC,EAAEwO,KAAKkZ,GAAGnpB,EAAE4F,EAAED,KAAM3F,EAAEA,EAAEwR,MAAM,CAAC,IAAI/P,EAAEvB,QAAQJ,EAAEmQ,KAAK,CAAC8R,MAAMhiB,EAAEiiB,UAAUvgB,GAAG,CAAC,IAAIuoB,GAAG,SAASC,GAAG,iBAAiB,SAASC,GAAGpqB,GAAG,OAAO,kBAAkBA,EAAEA,EAAE,GAAGA,GAAGuD,QAAQ2mB,GAAG,MAAM3mB,QAAQ4mB,GAAG,GAAG,CAAC,SAASE,GAAGrqB,EAAEC,EAAEC,GAAW,GAARD,EAAEmqB,GAAGnqB,GAAMmqB,GAAGpqB,KAAKC,GAAGC,EAAE,MAAM+E,MAAMlF,EAAE,KAAM,CAAC,SAASuqB,KAAK,CAC9e,IAAIC,GAAG,KAAKC,GAAG,KAAK,SAASC,GAAGzqB,EAAEC,GAAG,MAAM,aAAaD,GAAG,aAAaA,GAAG,kBAAkBC,EAAEqJ,UAAU,kBAAkBrJ,EAAEqJ,UAAU,kBAAkBrJ,EAAEoJ,yBAAyB,OAAOpJ,EAAEoJ,yBAAyB,MAAMpJ,EAAEoJ,wBAAwBqhB,MAAM,CAC5P,IAAIC,GAAG,oBAAoBC,WAAWA,gBAAW,EAAOC,GAAG,oBAAoBC,aAAaA,kBAAa,EAAOC,GAAG,oBAAoBC,QAAQA,aAAQ,EAAOC,GAAG,oBAAoBC,eAAeA,eAAe,qBAAqBH,GAAG,SAAS/qB,GAAG,OAAO+qB,GAAGI,QAAQ,MAAMC,KAAKprB,GAAGqrB,MAAMC,GAAG,EAAEX,GAAG,SAASW,GAAGtrB,GAAG4qB,YAAW,WAAW,MAAM5qB,CAAE,GAAE,CACpV,SAASurB,GAAGvrB,EAAEC,GAAG,IAAIC,EAAED,EAAEuB,EAAE,EAAE,EAAE,CAAC,IAAIC,EAAEvB,EAAE2jB,YAA6B,GAAjB7jB,EAAEoK,YAAYlK,GAAMuB,GAAG,IAAIA,EAAEiJ,SAAS,GAAY,QAATxK,EAAEuB,EAAEob,MAAc,CAAC,GAAG,IAAIrb,EAA0B,OAAvBxB,EAAEoK,YAAY3I,QAAGkW,GAAG1X,GAAUuB,GAAG,KAAK,MAAMtB,GAAG,OAAOA,GAAG,OAAOA,GAAGsB,IAAItB,EAAEuB,CAAC,OAAOvB,GAAGyX,GAAG1X,EAAE,CAAC,SAASurB,GAAGxrB,GAAG,KAAK,MAAMA,EAAEA,EAAEA,EAAE6jB,YAAY,CAAC,IAAI5jB,EAAED,EAAE0K,SAAS,GAAG,IAAIzK,GAAG,IAAIA,EAAE,MAAM,GAAG,IAAIA,EAAE,CAAU,GAAG,OAAZA,EAAED,EAAE6c,OAAiB,OAAO5c,GAAG,OAAOA,EAAE,MAAM,GAAG,OAAOA,EAAE,OAAO,IAAI,CAAC,CAAC,OAAOD,CAAC,CACjY,SAASyrB,GAAGzrB,GAAGA,EAAEA,EAAE0rB,gBAAgB,IAAI,IAAIzrB,EAAE,EAAED,GAAG,CAAC,GAAG,IAAIA,EAAE0K,SAAS,CAAC,IAAIxK,EAAEF,EAAE6c,KAAK,GAAG,MAAM3c,GAAG,OAAOA,GAAG,OAAOA,EAAE,CAAC,GAAG,IAAID,EAAE,OAAOD,EAAEC,GAAG,KAAK,OAAOC,GAAGD,GAAG,CAACD,EAAEA,EAAE0rB,eAAe,CAAC,OAAO,IAAI,CAAC,IAAIC,GAAG5X,KAAK0U,SAASve,SAAS,IAAIrH,MAAM,GAAG+oB,GAAG,gBAAgBD,GAAGE,GAAG,gBAAgBF,GAAGrC,GAAG,oBAAoBqC,GAAGvD,GAAG,iBAAiBuD,GAAGG,GAAG,oBAAoBH,GAAGI,GAAG,kBAAkBJ,GAClX,SAAS3U,GAAGhX,GAAG,IAAIC,EAAED,EAAE4rB,IAAI,GAAG3rB,EAAE,OAAOA,EAAE,IAAI,IAAIC,EAAEF,EAAE0P,WAAWxP,GAAG,CAAC,GAAGD,EAAEC,EAAEopB,KAAKppB,EAAE0rB,IAAI,CAAe,GAAd1rB,EAAED,EAAEwR,UAAa,OAAOxR,EAAEgS,OAAO,OAAO/R,GAAG,OAAOA,EAAE+R,MAAM,IAAIjS,EAAEyrB,GAAGzrB,GAAG,OAAOA,GAAG,CAAC,GAAGE,EAAEF,EAAE4rB,IAAI,OAAO1rB,EAAEF,EAAEyrB,GAAGzrB,EAAE,CAAC,OAAOC,CAAC,CAAKC,GAAJF,EAAEE,GAAMwP,UAAU,CAAC,OAAO,IAAI,CAAC,SAASK,GAAG/P,GAAkB,QAAfA,EAAEA,EAAE4rB,KAAK5rB,EAAEspB,MAAc,IAAItpB,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,KAAKnG,EAAEmG,KAAK,IAAInG,EAAEmG,IAAI,KAAKnG,CAAC,CAAC,SAASwiB,GAAGxiB,GAAG,GAAG,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,IAAI,OAAOnG,EAAEgQ,UAAU,MAAM/K,MAAMlF,EAAE,IAAK,CAAC,SAASkQ,GAAGjQ,GAAG,OAAOA,EAAE6rB,KAAK,IAAI,CAAC,IAAIG,GAAG,GAAGC,IAAI,EAAE,SAASC,GAAGlsB,GAAG,MAAM,CAACmS,QAAQnS,EAAE,CACve,SAASmsB,GAAEnsB,GAAG,EAAEisB,KAAKjsB,EAAEmS,QAAQ6Z,GAAGC,IAAID,GAAGC,IAAI,KAAKA,KAAK,CAAC,SAASG,GAAEpsB,EAAEC,GAAGgsB,KAAKD,GAAGC,IAAIjsB,EAAEmS,QAAQnS,EAAEmS,QAAQlS,CAAC,CAAC,IAAIosB,GAAG,CAAC,EAAEC,GAAEJ,GAAGG,IAAIE,GAAGL,IAAG,GAAIM,GAAGH,GAAG,SAASI,GAAGzsB,EAAEC,GAAG,IAAIC,EAAEF,EAAEkC,KAAKwqB,aAAa,IAAIxsB,EAAE,OAAOmsB,GAAG,IAAI7qB,EAAExB,EAAEgQ,UAAU,GAAGxO,GAAGA,EAAEmrB,8CAA8C1sB,EAAE,OAAOuB,EAAEorB,0CAA0C,IAASlrB,EAALD,EAAE,CAAC,EAAI,IAAIC,KAAKxB,EAAEuB,EAAEC,GAAGzB,EAAEyB,GAAoH,OAAjHF,KAAIxB,EAAEA,EAAEgQ,WAAY2c,4CAA4C1sB,EAAED,EAAE4sB,0CAA0CnrB,GAAUA,CAAC,CAC9d,SAASorB,GAAG7sB,GAAyB,OAAO,QAA7BA,EAAEA,EAAE8sB,yBAAmC,IAAS9sB,CAAC,CAAC,SAAS+sB,KAAKZ,GAAEI,IAAIJ,GAAEG,GAAE,CAAC,SAASU,GAAGhtB,EAAEC,EAAEC,GAAG,GAAGosB,GAAEna,UAAUka,GAAG,MAAMpnB,MAAMlF,EAAE,MAAMqsB,GAAEE,GAAErsB,GAAGmsB,GAAEG,GAAGrsB,EAAE,CAAC,SAAS+sB,GAAGjtB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEgQ,UAAgC,GAAtB/P,EAAEA,EAAE6sB,kBAAqB,oBAAoBtrB,EAAE0rB,gBAAgB,OAAOhtB,EAAwB,IAAI,IAAIuB,KAA9BD,EAAEA,EAAE0rB,kBAAiC,KAAKzrB,KAAKxB,GAAG,MAAMgF,MAAMlF,EAAE,IAAI2G,EAAG1G,IAAI,UAAUyB,IAAI,OAAOqD,EAAE,CAAC,EAAE5E,EAAEsB,EAAE,CACxX,SAAS2rB,GAAGntB,GAA2G,OAAxGA,GAAGA,EAAEA,EAAEgQ,YAAYhQ,EAAEotB,2CAA2Cf,GAAGG,GAAGF,GAAEna,QAAQia,GAAEE,GAAEtsB,GAAGosB,GAAEG,GAAGA,GAAGpa,UAAe,CAAE,CAAC,SAASkb,GAAGrtB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEgQ,UAAU,IAAIxO,EAAE,MAAMyD,MAAMlF,EAAE,MAAMG,GAAGF,EAAEitB,GAAGjtB,EAAEC,EAAEusB,IAAIhrB,EAAE4rB,0CAA0CptB,EAAEmsB,GAAEI,IAAIJ,GAAEG,IAAGF,GAAEE,GAAEtsB,IAAImsB,GAAEI,IAAIH,GAAEG,GAAGrsB,EAAE,CAAC,IAAIotB,GAAG,KAAKC,IAAG,EAAGC,IAAG,EAAG,SAASC,GAAGztB,GAAG,OAAOstB,GAAGA,GAAG,CAACttB,GAAGstB,GAAGnd,KAAKnQ,EAAE,CAChW,SAAS0tB,KAAK,IAAIF,IAAI,OAAOF,GAAG,CAACE,IAAG,EAAG,IAAIxtB,EAAE,EAAEC,EAAEoV,GAAE,IAAI,IAAInV,EAAEotB,GAAG,IAAIjY,GAAE,EAAErV,EAAEE,EAAEE,OAAOJ,IAAI,CAAC,IAAIwB,EAAEtB,EAAEF,GAAG,GAAGwB,EAAEA,GAAE,SAAU,OAAOA,EAAE,CAAC8rB,GAAG,KAAKC,IAAG,CAAE,CAAC,MAAM9rB,GAAG,MAAM,OAAO6rB,KAAKA,GAAGA,GAAGzqB,MAAM7C,EAAE,IAAIsS,GAAGY,GAAGwa,IAAIjsB,CAAE,CAAC,QAAQ4T,GAAEpV,EAAEutB,IAAG,CAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAIG,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,EAAEC,GAAG,GAAG,SAASC,GAAGpuB,EAAEC,GAAG0tB,GAAGC,MAAME,GAAGH,GAAGC,MAAMC,GAAGA,GAAG7tB,EAAE8tB,GAAG7tB,CAAC,CACjV,SAASouB,GAAGruB,EAAEC,EAAEC,GAAG6tB,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGA,GAAGjuB,EAAE,IAAIwB,EAAE0sB,GAAGluB,EAAEmuB,GAAG,IAAI1sB,EAAE,GAAGqS,GAAGtS,GAAG,EAAEA,KAAK,GAAGC,GAAGvB,GAAG,EAAE,IAAIwB,EAAE,GAAGoS,GAAG7T,GAAGwB,EAAE,GAAG,GAAGC,EAAE,CAAC,IAAIC,EAAEF,EAAEA,EAAE,EAAEC,GAAGF,GAAG,GAAGG,GAAG,GAAGuI,SAAS,IAAI1I,IAAIG,EAAEF,GAAGE,EAAEusB,GAAG,GAAG,GAAGpa,GAAG7T,GAAGwB,EAAEvB,GAAGuB,EAAED,EAAE2sB,GAAGzsB,EAAE1B,CAAC,MAAMkuB,GAAG,GAAGxsB,EAAExB,GAAGuB,EAAED,EAAE2sB,GAAGnuB,CAAC,CAAC,SAASsuB,GAAGtuB,GAAG,OAAOA,EAAE0R,SAAS0c,GAAGpuB,EAAE,GAAGquB,GAAGruB,EAAE,EAAE,GAAG,CAAC,SAASuuB,GAAGvuB,GAAG,KAAKA,IAAI6tB,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,KAAK,KAAK5tB,IAAIiuB,IAAIA,GAAGF,KAAKC,IAAID,GAAGC,IAAI,KAAKG,GAAGJ,KAAKC,IAAID,GAAGC,IAAI,KAAKE,GAAGH,KAAKC,IAAID,GAAGC,IAAI,IAAI,CAAC,IAAIQ,GAAG,KAAKC,GAAG,KAAKC,IAAE,EAAGC,GAAG,KACje,SAASC,GAAG5uB,EAAEC,GAAG,IAAIC,EAAE2uB,GAAG,EAAE,KAAK,KAAK,GAAG3uB,EAAE4uB,YAAY,UAAU5uB,EAAE8P,UAAU/P,EAAEC,EAAEwR,OAAO1R,EAAgB,QAAdC,EAAED,EAAE+uB,YAAoB/uB,EAAE+uB,UAAU,CAAC7uB,GAAGF,EAAE2R,OAAO,IAAI1R,EAAEkQ,KAAKjQ,EAAE,CACxJ,SAAS8uB,GAAGhvB,EAAEC,GAAG,OAAOD,EAAEmG,KAAK,KAAK,EAAE,IAAIjG,EAAEF,EAAEkC,KAAyE,OAAO,QAA3EjC,EAAE,IAAIA,EAAEyK,UAAUxK,EAAEsC,gBAAgBvC,EAAE4G,SAASrE,cAAc,KAAKvC,KAAmBD,EAAEgQ,UAAU/P,EAAEuuB,GAAGxuB,EAAEyuB,GAAGjD,GAAGvrB,EAAEkK,aAAY,GAAO,KAAK,EAAE,OAAoD,QAA7ClK,EAAE,KAAKD,EAAEivB,cAAc,IAAIhvB,EAAEyK,SAAS,KAAKzK,KAAYD,EAAEgQ,UAAU/P,EAAEuuB,GAAGxuB,EAAEyuB,GAAG,MAAK,GAAO,KAAK,GAAG,OAA+B,QAAxBxuB,EAAE,IAAIA,EAAEyK,SAAS,KAAKzK,KAAYC,EAAE,OAAO+tB,GAAG,CAAC7V,GAAG8V,GAAGgB,SAASf,IAAI,KAAKnuB,EAAE6R,cAAc,CAACC,WAAW7R,EAAEkvB,YAAYjvB,EAAEkvB,UAAU,aAAYlvB,EAAE2uB,GAAG,GAAG,KAAK,KAAK,IAAK7e,UAAU/P,EAAEC,EAAEwR,OAAO1R,EAAEA,EAAEiS,MAAM/R,EAAEsuB,GAAGxuB,EAAEyuB,GAClf,MAAK,GAAO,QAAQ,OAAM,EAAG,CAAC,SAASY,GAAGrvB,GAAG,OAAO,KAAY,EAAPA,EAAEsvB,OAAS,KAAa,IAARtvB,EAAE2R,MAAU,CAAC,SAAS4d,GAAGvvB,GAAG,GAAG0uB,GAAE,CAAC,IAAIzuB,EAAEwuB,GAAG,GAAGxuB,EAAE,CAAC,IAAIC,EAAED,EAAE,IAAI+uB,GAAGhvB,EAAEC,GAAG,CAAC,GAAGovB,GAAGrvB,GAAG,MAAMiF,MAAMlF,EAAE,MAAME,EAAEurB,GAAGtrB,EAAE2jB,aAAa,IAAIriB,EAAEgtB,GAAGvuB,GAAG+uB,GAAGhvB,EAAEC,GAAG2uB,GAAGptB,EAAEtB,IAAIF,EAAE2R,OAAe,KAAT3R,EAAE2R,MAAY,EAAE+c,IAAE,EAAGF,GAAGxuB,EAAE,CAAC,KAAK,CAAC,GAAGqvB,GAAGrvB,GAAG,MAAMiF,MAAMlF,EAAE,MAAMC,EAAE2R,OAAe,KAAT3R,EAAE2R,MAAY,EAAE+c,IAAE,EAAGF,GAAGxuB,CAAC,CAAC,CAAC,CAAC,SAASwvB,GAAGxvB,GAAG,IAAIA,EAAEA,EAAE0R,OAAO,OAAO1R,GAAG,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,KAAKnG,EAAEmG,KAAKnG,EAAEA,EAAE0R,OAAO8c,GAAGxuB,CAAC,CACha,SAASyvB,GAAGzvB,GAAG,GAAGA,IAAIwuB,GAAG,OAAM,EAAG,IAAIE,GAAE,OAAOc,GAAGxvB,GAAG0uB,IAAE,GAAG,EAAG,IAAIzuB,EAAkG,IAA/FA,EAAE,IAAID,EAAEmG,QAAQlG,EAAE,IAAID,EAAEmG,OAAgBlG,EAAE,UAAXA,EAAED,EAAEkC,OAAmB,SAASjC,IAAIwqB,GAAGzqB,EAAEkC,KAAKlC,EAAE0vB,gBAAmBzvB,IAAIA,EAAEwuB,IAAI,CAAC,GAAGY,GAAGrvB,GAAG,MAAM2vB,KAAK1qB,MAAMlF,EAAE,MAAM,KAAKE,GAAG2uB,GAAG5uB,EAAEC,GAAGA,EAAEurB,GAAGvrB,EAAE4jB,YAAY,CAAO,GAAN2L,GAAGxvB,GAAM,KAAKA,EAAEmG,IAAI,CAAgD,KAA7BnG,EAAE,QAApBA,EAAEA,EAAE6R,eAAyB7R,EAAE8R,WAAW,MAAW,MAAM7M,MAAMlF,EAAE,MAAMC,EAAE,CAAiB,IAAhBA,EAAEA,EAAE6jB,YAAgB5jB,EAAE,EAAED,GAAG,CAAC,GAAG,IAAIA,EAAE0K,SAAS,CAAC,IAAIxK,EAAEF,EAAE6c,KAAK,GAAG,OAAO3c,EAAE,CAAC,GAAG,IAAID,EAAE,CAACwuB,GAAGjD,GAAGxrB,EAAE6jB,aAAa,MAAM7jB,CAAC,CAACC,GAAG,KAAK,MAAMC,GAAG,OAAOA,GAAG,OAAOA,GAAGD,GAAG,CAACD,EAAEA,EAAE6jB,WAAW,CAAC4K,GACjgB,IAAI,CAAC,MAAMA,GAAGD,GAAGhD,GAAGxrB,EAAEgQ,UAAU6T,aAAa,KAAK,OAAM,CAAE,CAAC,SAAS8L,KAAK,IAAI,IAAI3vB,EAAEyuB,GAAGzuB,GAAGA,EAAEwrB,GAAGxrB,EAAE6jB,YAAY,CAAC,SAAS+L,KAAKnB,GAAGD,GAAG,KAAKE,IAAE,CAAE,CAAC,SAASmB,GAAG7vB,GAAG,OAAO2uB,GAAGA,GAAG,CAAC3uB,GAAG2uB,GAAGxe,KAAKnQ,EAAE,CAAC,IAAI8vB,GAAGrsB,EAAGoU,wBAChM,SAASkY,GAAG/vB,EAAEC,EAAEC,GAAW,GAAG,QAAXF,EAAEE,EAAE8vB,MAAiB,oBAAoBhwB,GAAG,kBAAkBA,EAAE,CAAC,GAAGE,EAAE+vB,OAAO,CAAY,GAAX/vB,EAAEA,EAAE+vB,OAAY,CAAC,GAAG,IAAI/vB,EAAEiG,IAAI,MAAMlB,MAAMlF,EAAE,MAAM,IAAIyB,EAAEtB,EAAE8P,SAAS,CAAC,IAAIxO,EAAE,MAAMyD,MAAMlF,EAAE,IAAIC,IAAI,IAAIyB,EAAED,EAAEE,EAAE,GAAG1B,EAAE,OAAG,OAAOC,GAAG,OAAOA,EAAE+vB,KAAK,oBAAoB/vB,EAAE+vB,KAAK/vB,EAAE+vB,IAAIE,aAAaxuB,EAASzB,EAAE+vB,KAAI/vB,EAAE,SAASD,GAAG,IAAIC,EAAEwB,EAAE0uB,KAAK,OAAOnwB,SAASC,EAAEyB,GAAGzB,EAAEyB,GAAG1B,CAAC,EAAEC,EAAEiwB,WAAWxuB,EAASzB,EAAC,CAAC,GAAG,kBAAkBD,EAAE,MAAMiF,MAAMlF,EAAE,MAAM,IAAIG,EAAE+vB,OAAO,MAAMhrB,MAAMlF,EAAE,IAAIC,GAAI,CAAC,OAAOA,CAAC,CAC/c,SAASowB,GAAGpwB,EAAEC,GAAuC,MAApCD,EAAEiB,OAAOC,UAAUgJ,SAASjH,KAAKhD,GAASgF,MAAMlF,EAAE,GAAG,oBAAoBC,EAAE,qBAAqBiB,OAAO6M,KAAK7N,GAAGowB,KAAK,MAAM,IAAIrwB,GAAI,CAAC,SAASswB,GAAGtwB,GAAiB,OAAOC,EAAfD,EAAEyG,OAAezG,EAAEwG,SAAS,CACrM,SAAS+pB,GAAGvwB,GAAG,SAASC,EAAEA,EAAEC,GAAG,GAAGF,EAAE,CAAC,IAAIwB,EAAEvB,EAAE8uB,UAAU,OAAOvtB,GAAGvB,EAAE8uB,UAAU,CAAC7uB,GAAGD,EAAE0R,OAAO,IAAInQ,EAAE2O,KAAKjQ,EAAE,CAAC,CAAC,SAASA,EAAEA,EAAEsB,GAAG,IAAIxB,EAAE,OAAO,KAAK,KAAK,OAAOwB,GAAGvB,EAAEC,EAAEsB,GAAGA,EAAEA,EAAE0Q,QAAQ,OAAO,IAAI,CAAC,SAAS1Q,EAAExB,EAAEC,GAAG,IAAID,EAAE,IAAIkW,IAAI,OAAOjW,GAAG,OAAOA,EAAEke,IAAIne,EAAEyF,IAAIxF,EAAEke,IAAIle,GAAGD,EAAEyF,IAAIxF,EAAEuwB,MAAMvwB,GAAGA,EAAEA,EAAEiS,QAAQ,OAAOlS,CAAC,CAAC,SAASyB,EAAEzB,EAAEC,GAAsC,OAAnCD,EAAEywB,GAAGzwB,EAAEC,IAAKuwB,MAAM,EAAExwB,EAAEkS,QAAQ,KAAYlS,CAAC,CAAC,SAAS0B,EAAEzB,EAAEC,EAAEsB,GAAa,OAAVvB,EAAEuwB,MAAMhvB,EAAMxB,EAA6C,QAAjBwB,EAAEvB,EAAEwR,YAA6BjQ,EAAEA,EAAEgvB,OAAQtwB,GAAGD,EAAE0R,OAAO,EAAEzR,GAAGsB,GAAEvB,EAAE0R,OAAO,EAASzR,IAArGD,EAAE0R,OAAO,QAAQzR,EAAqF,CAAC,SAASyB,EAAE1B,GACzd,OAD4dD,GAC7f,OAAOC,EAAEwR,YAAYxR,EAAE0R,OAAO,GAAU1R,CAAC,CAAC,SAAS4F,EAAE7F,EAAEC,EAAEC,EAAEsB,GAAG,OAAG,OAAOvB,GAAG,IAAIA,EAAEkG,MAAWlG,EAAEywB,GAAGxwB,EAAEF,EAAEsvB,KAAK9tB,IAAKkQ,OAAO1R,EAAEC,KAAEA,EAAEwB,EAAExB,EAAEC,IAAKwR,OAAO1R,EAASC,EAAC,CAAC,SAAS6F,EAAE9F,EAAEC,EAAEC,EAAEsB,GAAG,IAAIE,EAAExB,EAAEgC,KAAK,OAAGR,IAAIqC,EAAUiN,EAAEhR,EAAEC,EAAEC,EAAEywB,MAAMrnB,SAAS9H,EAAEtB,EAAEie,KAAQ,OAAOle,IAAIA,EAAE6uB,cAAcptB,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAE4E,WAAW9B,GAAI8rB,GAAG5uB,KAAKzB,EAAEiC,QAAaV,EAAEC,EAAExB,EAAEC,EAAEywB,QAASX,IAAID,GAAG/vB,EAAEC,EAAEC,GAAGsB,EAAEkQ,OAAO1R,EAAEwB,KAAEA,EAAEovB,GAAG1wB,EAAEgC,KAAKhC,EAAEie,IAAIje,EAAEywB,MAAM,KAAK3wB,EAAEsvB,KAAK9tB,IAAKwuB,IAAID,GAAG/vB,EAAEC,EAAEC,GAAGsB,EAAEkQ,OAAO1R,EAASwB,EAAC,CAAC,SAASoE,EAAE5F,EAAEC,EAAEC,EAAEsB,GAAG,OAAG,OAAOvB,GAAG,IAAIA,EAAEkG,KACjflG,EAAE+P,UAAUmH,gBAAgBjX,EAAEiX,eAAelX,EAAE+P,UAAU6gB,iBAAiB3wB,EAAE2wB,iBAAsB5wB,EAAE6wB,GAAG5wB,EAAEF,EAAEsvB,KAAK9tB,IAAKkQ,OAAO1R,EAAEC,KAAEA,EAAEwB,EAAExB,EAAEC,EAAEoJ,UAAU,KAAMoI,OAAO1R,EAASC,EAAC,CAAC,SAAS+Q,EAAEhR,EAAEC,EAAEC,EAAEsB,EAAEE,GAAG,OAAG,OAAOzB,GAAG,IAAIA,EAAEkG,MAAWlG,EAAE8wB,GAAG7wB,EAAEF,EAAEsvB,KAAK9tB,EAAEE,IAAKgQ,OAAO1R,EAAEC,KAAEA,EAAEwB,EAAExB,EAAEC,IAAKwR,OAAO1R,EAASC,EAAC,CAAC,SAAS+wB,EAAEhxB,EAAEC,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAOA,EAAEywB,GAAG,GAAGzwB,EAAED,EAAEsvB,KAAKpvB,IAAKwR,OAAO1R,EAAEC,EAAE,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEqG,UAAU,KAAK3C,EAAG,OAAOzD,EAAE0wB,GAAG3wB,EAAEiC,KAAKjC,EAAEke,IAAIle,EAAE0wB,MAAM,KAAK3wB,EAAEsvB,KAAKpvB,IACjf8vB,IAAID,GAAG/vB,EAAE,KAAKC,GAAGC,EAAEwR,OAAO1R,EAAEE,EAAE,KAAK4D,EAAG,OAAO7D,EAAE6wB,GAAG7wB,EAAED,EAAEsvB,KAAKpvB,IAAKwR,OAAO1R,EAAEC,EAAE,KAAKuE,EAAiB,OAAOwsB,EAAEhxB,GAAEwB,EAAnBvB,EAAEwG,OAAmBxG,EAAEuG,UAAUtG,GAAG,GAAG0I,GAAG3I,IAAI2E,EAAG3E,GAAG,OAAOA,EAAE8wB,GAAG9wB,EAAED,EAAEsvB,KAAKpvB,EAAE,OAAQwR,OAAO1R,EAAEC,EAAEmwB,GAAGpwB,EAAEC,EAAE,CAAC,OAAO,IAAI,CAAC,SAASgxB,EAAEjxB,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE,OAAOxB,EAAEA,EAAEke,IAAI,KAAK,GAAG,kBAAkBje,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAO,OAAOuB,EAAE,KAAKoE,EAAE7F,EAAEC,EAAE,GAAGC,EAAEsB,GAAG,GAAG,kBAAkBtB,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAEoG,UAAU,KAAK3C,EAAG,OAAOzD,EAAEie,MAAM1c,EAAEqE,EAAE9F,EAAEC,EAAEC,EAAEsB,GAAG,KAAK,KAAKsC,EAAG,OAAO5D,EAAEie,MAAM1c,EAAEmE,EAAE5F,EAAEC,EAAEC,EAAEsB,GAAG,KAAK,KAAKgD,EAAG,OAAiBysB,EAAEjxB,EACpfC,GADwewB,EAAEvB,EAAEuG,OACxevG,EAAEsG,UAAUhF,GAAG,GAAGoH,GAAG1I,IAAI0E,EAAG1E,GAAG,OAAO,OAAOuB,EAAE,KAAKuP,EAAEhR,EAAEC,EAAEC,EAAEsB,EAAE,MAAM4uB,GAAGpwB,EAAEE,EAAE,CAAC,OAAO,IAAI,CAAC,SAASgxB,EAAElxB,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,KAAKA,GAAG,kBAAkBA,EAAE,OAAwBqE,EAAE5F,EAAnBD,EAAEA,EAAEkH,IAAIhH,IAAI,KAAW,GAAGsB,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAE8E,UAAU,KAAK3C,EAAG,OAA2CmC,EAAE7F,EAAtCD,EAAEA,EAAEkH,IAAI,OAAO1F,EAAE2c,IAAIje,EAAEsB,EAAE2c,MAAM,KAAW3c,EAAEC,GAAG,KAAKqC,EAAG,OAA2C8B,EAAE3F,EAAtCD,EAAEA,EAAEkH,IAAI,OAAO1F,EAAE2c,IAAIje,EAAEsB,EAAE2c,MAAM,KAAW3c,EAAEC,GAAG,KAAK+C,EAAiB,OAAO0sB,EAAElxB,EAAEC,EAAEC,GAAEwB,EAAvBF,EAAEiF,OAAuBjF,EAAEgF,UAAU/E,GAAG,GAAGmH,GAAGpH,IAAIoD,EAAGpD,GAAG,OAAwBwP,EAAE/Q,EAAnBD,EAAEA,EAAEkH,IAAIhH,IAAI,KAAWsB,EAAEC,EAAE,MAAM2uB,GAAGnwB,EAAEuB,EAAE,CAAC,OAAO,IAAI,CAC9f,SAASsnB,EAAErnB,EAAEE,EAAEkE,EAAEC,GAAG,IAAI,IAAIF,EAAE,KAAKoL,EAAE,KAAKkY,EAAEvnB,EAAEwnB,EAAExnB,EAAE,EAAEsnB,EAAE,KAAK,OAAOC,GAAGC,EAAEtjB,EAAEzF,OAAO+oB,IAAI,CAACD,EAAEsH,MAAMrH,GAAGF,EAAEC,EAAEA,EAAE,MAAMD,EAAEC,EAAEhX,QAAQ,IAAI4W,EAAEmI,EAAExvB,EAAEynB,EAAErjB,EAAEsjB,GAAGrjB,GAAG,GAAG,OAAOgjB,EAAE,CAAC,OAAOI,IAAIA,EAAED,GAAG,KAAK,CAACjpB,GAAGkpB,GAAG,OAAOJ,EAAErX,WAAWxR,EAAEwB,EAAEynB,GAAGvnB,EAAED,EAAEonB,EAAEnnB,EAAEwnB,GAAG,OAAOnY,EAAEpL,EAAEkjB,EAAE9X,EAAEkB,QAAQ4W,EAAE9X,EAAE8X,EAAEI,EAAED,CAAC,CAAC,GAAGE,IAAItjB,EAAEzF,OAAO,OAAOF,EAAEuB,EAAEynB,GAAGwF,IAAGN,GAAG3sB,EAAE0nB,GAAGvjB,EAAE,GAAG,OAAOsjB,EAAE,CAAC,KAAKC,EAAEtjB,EAAEzF,OAAO+oB,IAAkB,QAAdD,EAAE8H,EAAEvvB,EAAEoE,EAAEsjB,GAAGrjB,MAAcnE,EAAED,EAAEwnB,EAAEvnB,EAAEwnB,GAAG,OAAOnY,EAAEpL,EAAEsjB,EAAElY,EAAEkB,QAAQgX,EAAElY,EAAEkY,GAAc,OAAXwF,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAAC,IAAIsjB,EAAE1nB,EAAEC,EAAEynB,GAAGC,EAAEtjB,EAAEzF,OAAO+oB,IAAsB,QAAlBF,EAAEiI,EAAEhI,EAAEznB,EAAE0nB,EAAEtjB,EAAEsjB,GAAGrjB,MAAc9F,GAAG,OAAOipB,EAAExX,WAAWyX,EAAE3S,OAAO,OACvf0S,EAAE9K,IAAIgL,EAAEF,EAAE9K,KAAKxc,EAAED,EAAEunB,EAAEtnB,EAAEwnB,GAAG,OAAOnY,EAAEpL,EAAEqjB,EAAEjY,EAAEkB,QAAQ+W,EAAEjY,EAAEiY,GAAuD,OAApDjpB,GAAGkpB,EAAE3mB,SAAQ,SAASvC,GAAG,OAAOC,EAAEwB,EAAEzB,EAAE,IAAG0uB,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAAC,SAASmjB,EAAEtnB,EAAEE,EAAEkE,EAAEC,GAAG,IAAIF,EAAEhB,EAAGiB,GAAG,GAAG,oBAAoBD,EAAE,MAAMX,MAAMlF,EAAE,MAAkB,GAAG,OAAf8F,EAAED,EAAE3C,KAAK4C,IAAc,MAAMZ,MAAMlF,EAAE,MAAM,IAAI,IAAImpB,EAAEtjB,EAAE,KAAKoL,EAAErP,EAAEwnB,EAAExnB,EAAE,EAAEsnB,EAAE,KAAKH,EAAEjjB,EAAEsrB,OAAO,OAAOngB,IAAI8X,EAAEsI,KAAKjI,IAAIL,EAAEjjB,EAAEsrB,OAAO,CAACngB,EAAEwf,MAAMrH,GAAGF,EAAEjY,EAAEA,EAAE,MAAMiY,EAAEjY,EAAEkB,QAAQ,IAAI6W,EAAEkI,EAAExvB,EAAEuP,EAAE8X,EAAEnhB,MAAM7B,GAAG,GAAG,OAAOijB,EAAE,CAAC,OAAO/X,IAAIA,EAAEiY,GAAG,KAAK,CAACjpB,GAAGgR,GAAG,OAAO+X,EAAEtX,WAAWxR,EAAEwB,EAAEuP,GAAGrP,EAAED,EAAEqnB,EAAEpnB,EAAEwnB,GAAG,OAAOD,EAAEtjB,EAAEmjB,EAAEG,EAAEhX,QAAQ6W,EAAEG,EAAEH,EAAE/X,EAAEiY,CAAC,CAAC,GAAGH,EAAEsI,KAAK,OAAOlxB,EAAEuB,EACzfuP,GAAG0d,IAAGN,GAAG3sB,EAAE0nB,GAAGvjB,EAAE,GAAG,OAAOoL,EAAE,CAAC,MAAM8X,EAAEsI,KAAKjI,IAAIL,EAAEjjB,EAAEsrB,OAAwB,QAAjBrI,EAAEkI,EAAEvvB,EAAEqnB,EAAEnhB,MAAM7B,MAAcnE,EAAED,EAAEonB,EAAEnnB,EAAEwnB,GAAG,OAAOD,EAAEtjB,EAAEkjB,EAAEI,EAAEhX,QAAQ4W,EAAEI,EAAEJ,GAAc,OAAX4F,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAAC,IAAIoL,EAAExP,EAAEC,EAAEuP,IAAI8X,EAAEsI,KAAKjI,IAAIL,EAAEjjB,EAAEsrB,OAA4B,QAArBrI,EAAEoI,EAAElgB,EAAEvP,EAAE0nB,EAAEL,EAAEnhB,MAAM7B,MAAc9F,GAAG,OAAO8oB,EAAErX,WAAWT,EAAEuF,OAAO,OAAOuS,EAAE3K,IAAIgL,EAAEL,EAAE3K,KAAKxc,EAAED,EAAEonB,EAAEnnB,EAAEwnB,GAAG,OAAOD,EAAEtjB,EAAEkjB,EAAEI,EAAEhX,QAAQ4W,EAAEI,EAAEJ,GAAuD,OAApD9oB,GAAGgR,EAAEzO,SAAQ,SAASvC,GAAG,OAAOC,EAAEwB,EAAEzB,EAAE,IAAG0uB,IAAGN,GAAG3sB,EAAE0nB,GAAUvjB,CAAC,CAG3T,OAH4T,SAASojB,EAAEhpB,EAAEwB,EAAEE,EAAEmE,GAAkF,GAA/E,kBAAkBnE,GAAG,OAAOA,GAAGA,EAAEQ,OAAO6B,GAAI,OAAOrC,EAAEyc,MAAMzc,EAAEA,EAAEivB,MAAMrnB,UAAa,kBAAkB5H,GAAG,OAAOA,EAAE,CAAC,OAAOA,EAAE4E,UAAU,KAAK3C,EAAG3D,EAAE,CAAC,IAAI,IAAI8F,EAC7hBpE,EAAEyc,IAAIvY,EAAEpE,EAAE,OAAOoE,GAAG,CAAC,GAAGA,EAAEuY,MAAMrY,EAAE,CAAU,IAATA,EAAEpE,EAAEQ,QAAY6B,GAAI,GAAG,IAAI6B,EAAEO,IAAI,CAACjG,EAAEF,EAAE4F,EAAEsM,UAAS1Q,EAAEC,EAAEmE,EAAElE,EAAEivB,MAAMrnB,WAAYoI,OAAO1R,EAAEA,EAAEwB,EAAE,MAAMxB,CAAC,OAAO,GAAG4F,EAAEkpB,cAAchpB,GAAG,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEQ,WAAW9B,GAAI8rB,GAAGxqB,KAAKF,EAAE1D,KAAK,CAAChC,EAAEF,EAAE4F,EAAEsM,UAAS1Q,EAAEC,EAAEmE,EAAElE,EAAEivB,QAASX,IAAID,GAAG/vB,EAAE4F,EAAElE,GAAGF,EAAEkQ,OAAO1R,EAAEA,EAAEwB,EAAE,MAAMxB,CAAC,CAACE,EAAEF,EAAE4F,GAAG,KAAK,CAAM3F,EAAED,EAAE4F,GAAGA,EAAEA,EAAEsM,OAAO,CAACxQ,EAAEQ,OAAO6B,IAAIvC,EAAEuvB,GAAGrvB,EAAEivB,MAAMrnB,SAAStJ,EAAEsvB,KAAKzpB,EAAEnE,EAAEyc,MAAOzM,OAAO1R,EAAEA,EAAEwB,KAAIqE,EAAE+qB,GAAGlvB,EAAEQ,KAAKR,EAAEyc,IAAIzc,EAAEivB,MAAM,KAAK3wB,EAAEsvB,KAAKzpB,IAAKmqB,IAAID,GAAG/vB,EAAEwB,EAAEE,GAAGmE,EAAE6L,OAAO1R,EAAEA,EAAE6F,EAAE,CAAC,OAAOlE,EAAE3B,GAAG,KAAK8D,EAAG9D,EAAE,CAAC,IAAI4F,EAAElE,EAAEyc,IAAI,OACzf3c,GAAG,CAAC,GAAGA,EAAE2c,MAAMvY,EAAC,CAAC,GAAG,IAAIpE,EAAE2E,KAAK3E,EAAEwO,UAAUmH,gBAAgBzV,EAAEyV,eAAe3V,EAAEwO,UAAU6gB,iBAAiBnvB,EAAEmvB,eAAe,CAAC3wB,EAAEF,EAAEwB,EAAE0Q,UAAS1Q,EAAEC,EAAED,EAAEE,EAAE4H,UAAU,KAAMoI,OAAO1R,EAAEA,EAAEwB,EAAE,MAAMxB,CAAC,CAAME,EAAEF,EAAEwB,GAAG,KAAM,CAAKvB,EAAED,EAAEwB,GAAGA,EAAEA,EAAE0Q,OAAO,EAAC1Q,EAAEsvB,GAAGpvB,EAAE1B,EAAEsvB,KAAKzpB,IAAK6L,OAAO1R,EAAEA,EAAEwB,CAAC,CAAC,OAAOG,EAAE3B,GAAG,KAAKwE,EAAG,OAAiBwkB,EAAEhpB,EAAEwB,GAAdoE,EAAElE,EAAE+E,OAAc/E,EAAE8E,UAAUX,GAAG,GAAG+C,GAAGlH,GAAG,OAAOonB,EAAE9oB,EAAEwB,EAAEE,EAAEmE,GAAG,GAAGjB,EAAGlD,GAAG,OAAOqnB,EAAE/oB,EAAEwB,EAAEE,EAAEmE,GAAGuqB,GAAGpwB,EAAE0B,EAAE,CAAC,MAAM,kBAAkBA,GAAG,KAAKA,GAAG,kBAAkBA,GAAGA,EAAE,GAAGA,EAAE,OAAOF,GAAG,IAAIA,EAAE2E,KAAKjG,EAAEF,EAAEwB,EAAE0Q,UAAS1Q,EAAEC,EAAED,EAAEE,IAAKgQ,OAAO1R,EAAEA,EAAEwB,IACnftB,EAAEF,EAAEwB,IAAGA,EAAEkvB,GAAGhvB,EAAE1B,EAAEsvB,KAAKzpB,IAAK6L,OAAO1R,EAAEA,EAAEwB,GAAGG,EAAE3B,IAAIE,EAAEF,EAAEwB,EAAE,CAAS,CAAC,IAAI6vB,GAAGd,IAAG,GAAIe,GAAGf,IAAG,GAAIgB,GAAGrF,GAAG,MAAMsF,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAK,SAASC,KAAKD,GAAGD,GAAGD,GAAG,IAAI,CAAC,SAASI,GAAG5xB,GAAG,IAAIC,EAAEsxB,GAAGpf,QAAQga,GAAEoF,IAAIvxB,EAAE6xB,cAAc5xB,CAAC,CAAC,SAAS6xB,GAAG9xB,EAAEC,EAAEC,GAAG,KAAK,OAAOF,GAAG,CAAC,IAAIwB,EAAExB,EAAEyR,UAA+H,IAApHzR,EAAE+xB,WAAW9xB,KAAKA,GAAGD,EAAE+xB,YAAY9xB,EAAE,OAAOuB,IAAIA,EAAEuwB,YAAY9xB,IAAI,OAAOuB,IAAIA,EAAEuwB,WAAW9xB,KAAKA,IAAIuB,EAAEuwB,YAAY9xB,GAAMD,IAAIE,EAAE,MAAMF,EAAEA,EAAE0R,MAAM,CAAC,CACnZ,SAASsgB,GAAGhyB,EAAEC,GAAGuxB,GAAGxxB,EAAE0xB,GAAGD,GAAG,KAAsB,QAAjBzxB,EAAEA,EAAEiyB,eAAuB,OAAOjyB,EAAEkyB,eAAe,KAAKlyB,EAAEmyB,MAAMlyB,KAAKmyB,IAAG,GAAIpyB,EAAEkyB,aAAa,KAAK,CAAC,SAASG,GAAGryB,GAAG,IAAIC,EAAED,EAAE6xB,cAAc,GAAGH,KAAK1xB,EAAE,GAAGA,EAAE,CAACsyB,QAAQtyB,EAAEuyB,cAActyB,EAAEkxB,KAAK,MAAM,OAAOM,GAAG,CAAC,GAAG,OAAOD,GAAG,MAAMvsB,MAAMlF,EAAE,MAAM0xB,GAAGzxB,EAAEwxB,GAAGS,aAAa,CAACE,MAAM,EAAED,aAAalyB,EAAE,MAAMyxB,GAAGA,GAAGN,KAAKnxB,EAAE,OAAOC,CAAC,CAAC,IAAIuyB,GAAG,KAAK,SAASC,GAAGzyB,GAAG,OAAOwyB,GAAGA,GAAG,CAACxyB,GAAGwyB,GAAGriB,KAAKnQ,EAAE,CACvY,SAAS0yB,GAAG1yB,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAExB,EAAE0yB,YAA+E,OAAnE,OAAOlxB,GAAGvB,EAAEixB,KAAKjxB,EAAEuyB,GAAGxyB,KAAKC,EAAEixB,KAAK1vB,EAAE0vB,KAAK1vB,EAAE0vB,KAAKjxB,GAAGD,EAAE0yB,YAAYzyB,EAAS0yB,GAAG5yB,EAAEwB,EAAE,CAAC,SAASoxB,GAAG5yB,EAAEC,GAAGD,EAAEmyB,OAAOlyB,EAAE,IAAIC,EAAEF,EAAEyR,UAAqC,IAA3B,OAAOvR,IAAIA,EAAEiyB,OAAOlyB,GAAGC,EAAEF,EAAMA,EAAEA,EAAE0R,OAAO,OAAO1R,GAAGA,EAAE+xB,YAAY9xB,EAAgB,QAAdC,EAAEF,EAAEyR,aAAqBvR,EAAE6xB,YAAY9xB,GAAGC,EAAEF,EAAEA,EAAEA,EAAE0R,OAAO,OAAO,IAAIxR,EAAEiG,IAAIjG,EAAE8P,UAAU,IAAI,CAAC,IAAI6iB,IAAG,EAAG,SAASC,GAAG9yB,GAAGA,EAAE+yB,YAAY,CAACC,UAAUhzB,EAAE6R,cAAcohB,gBAAgB,KAAKC,eAAe,KAAKC,OAAO,CAACC,QAAQ,KAAKT,YAAY,KAAKR,MAAM,GAAGkB,QAAQ,KAAK,CAC/e,SAASC,GAAGtzB,EAAEC,GAAGD,EAAEA,EAAE+yB,YAAY9yB,EAAE8yB,cAAc/yB,IAAIC,EAAE8yB,YAAY,CAACC,UAAUhzB,EAAEgzB,UAAUC,gBAAgBjzB,EAAEizB,gBAAgBC,eAAelzB,EAAEkzB,eAAeC,OAAOnzB,EAAEmzB,OAAOE,QAAQrzB,EAAEqzB,SAAS,CAAC,SAASE,GAAGvzB,EAAEC,GAAG,MAAM,CAACuzB,UAAUxzB,EAAEyzB,KAAKxzB,EAAEkG,IAAI,EAAEutB,QAAQ,KAAKC,SAAS,KAAKxC,KAAK,KAAK,CACtR,SAASyC,GAAG5zB,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAE+yB,YAAY,GAAG,OAAOvxB,EAAE,OAAO,KAAgB,GAAXA,EAAEA,EAAE2xB,OAAU,KAAO,EAAFU,IAAK,CAAC,IAAIpyB,EAAED,EAAE4xB,QAA+D,OAAvD,OAAO3xB,EAAExB,EAAEkxB,KAAKlxB,GAAGA,EAAEkxB,KAAK1vB,EAAE0vB,KAAK1vB,EAAE0vB,KAAKlxB,GAAGuB,EAAE4xB,QAAQnzB,EAAS2yB,GAAG5yB,EAAEE,EAAE,CAAoF,OAAnE,QAAhBuB,EAAED,EAAEmxB,cAAsB1yB,EAAEkxB,KAAKlxB,EAAEwyB,GAAGjxB,KAAKvB,EAAEkxB,KAAK1vB,EAAE0vB,KAAK1vB,EAAE0vB,KAAKlxB,GAAGuB,EAAEmxB,YAAY1yB,EAAS2yB,GAAG5yB,EAAEE,EAAE,CAAC,SAAS4zB,GAAG9zB,EAAEC,EAAEC,GAAmB,GAAG,QAAnBD,EAAEA,EAAE8yB,eAA0B9yB,EAAEA,EAAEkzB,OAAO,KAAO,QAAFjzB,IAAY,CAAC,IAAIsB,EAAEvB,EAAEkyB,MAAwBjyB,GAAlBsB,GAAGxB,EAAEyU,aAAkBxU,EAAEkyB,MAAMjyB,EAAEkV,GAAGpV,EAAEE,EAAE,CAAC,CACrZ,SAAS6zB,GAAG/zB,EAAEC,GAAG,IAAIC,EAAEF,EAAE+yB,YAAYvxB,EAAExB,EAAEyR,UAAU,GAAG,OAAOjQ,GAAoBtB,KAAhBsB,EAAEA,EAAEuxB,aAAmB,CAAC,IAAItxB,EAAE,KAAKC,EAAE,KAAyB,GAAG,QAAvBxB,EAAEA,EAAE+yB,iBAA4B,CAAC,EAAE,CAAC,IAAItxB,EAAE,CAAC6xB,UAAUtzB,EAAEszB,UAAUC,KAAKvzB,EAAEuzB,KAAKttB,IAAIjG,EAAEiG,IAAIutB,QAAQxzB,EAAEwzB,QAAQC,SAASzzB,EAAEyzB,SAASxC,KAAK,MAAM,OAAOzvB,EAAED,EAAEC,EAAEC,EAAED,EAAEA,EAAEyvB,KAAKxvB,EAAEzB,EAAEA,EAAEixB,IAAI,OAAO,OAAOjxB,GAAG,OAAOwB,EAAED,EAAEC,EAAEzB,EAAEyB,EAAEA,EAAEyvB,KAAKlxB,CAAC,MAAMwB,EAAEC,EAAEzB,EAAiH,OAA/GC,EAAE,CAAC8yB,UAAUxxB,EAAEwxB,UAAUC,gBAAgBxxB,EAAEyxB,eAAexxB,EAAEyxB,OAAO3xB,EAAE2xB,OAAOE,QAAQ7xB,EAAE6xB,cAASrzB,EAAE+yB,YAAY7yB,EAAQ,CAAoB,QAAnBF,EAAEE,EAAEgzB,gBAAwBhzB,EAAE+yB,gBAAgBhzB,EAAED,EAAEmxB,KACnflxB,EAAEC,EAAEgzB,eAAejzB,CAAC,CACpB,SAAS+zB,GAAGh0B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEzB,EAAE+yB,YAAYF,IAAG,EAAG,IAAInxB,EAAED,EAAEwxB,gBAAgBtxB,EAAEF,EAAEyxB,eAAertB,EAAEpE,EAAE0xB,OAAOC,QAAQ,GAAG,OAAOvtB,EAAE,CAACpE,EAAE0xB,OAAOC,QAAQ,KAAK,IAAIttB,EAAED,EAAED,EAAEE,EAAEqrB,KAAKrrB,EAAEqrB,KAAK,KAAK,OAAOxvB,EAAED,EAAEkE,EAAEjE,EAAEwvB,KAAKvrB,EAAEjE,EAAEmE,EAAE,IAAIkL,EAAEhR,EAAEyR,UAAU,OAAOT,KAAoBnL,GAAhBmL,EAAEA,EAAE+hB,aAAgBG,kBAAmBvxB,IAAI,OAAOkE,EAAEmL,EAAEiiB,gBAAgBrtB,EAAEC,EAAEsrB,KAAKvrB,EAAEoL,EAAEkiB,eAAeptB,GAAG,CAAC,GAAG,OAAOpE,EAAE,CAAC,IAAIsvB,EAAEvvB,EAAEuxB,UAA6B,IAAnBrxB,EAAE,EAAEqP,EAAEpL,EAAEE,EAAE,KAAKD,EAAEnE,IAAI,CAAC,IAAIuvB,EAAEprB,EAAE4tB,KAAKvC,EAAErrB,EAAE2tB,UAAU,IAAIhyB,EAAEyvB,KAAKA,EAAE,CAAC,OAAOjgB,IAAIA,EAAEA,EAAEmgB,KAAK,CAACqC,UAAUtC,EAAEuC,KAAK,EAAEttB,IAAIN,EAAEM,IAAIutB,QAAQ7tB,EAAE6tB,QAAQC,SAAS9tB,EAAE8tB,SACvfxC,KAAK,OAAOnxB,EAAE,CAAC,IAAI8oB,EAAE9oB,EAAE+oB,EAAEljB,EAAU,OAARorB,EAAEhxB,EAAEixB,EAAEhxB,EAAS6oB,EAAE5iB,KAAK,KAAK,EAAc,GAAG,oBAAf2iB,EAAEC,EAAE2K,SAAiC,CAAC1C,EAAElI,EAAE7lB,KAAKiuB,EAAEF,EAAEC,GAAG,MAAMjxB,CAAC,CAACgxB,EAAElI,EAAE,MAAM9oB,EAAE,KAAK,EAAE8oB,EAAEnX,OAAe,MAATmX,EAAEnX,MAAa,IAAI,KAAK,EAAsD,GAAG,QAA3Csf,EAAE,oBAAdnI,EAAEC,EAAE2K,SAAgC5K,EAAE7lB,KAAKiuB,EAAEF,EAAEC,GAAGnI,SAAe,IAASmI,EAAE,MAAMjxB,EAAEgxB,EAAElsB,EAAE,CAAC,EAAEksB,EAAEC,GAAG,MAAMjxB,EAAE,KAAK,EAAE6yB,IAAG,EAAG,CAAC,OAAOhtB,EAAE8tB,UAAU,IAAI9tB,EAAE4tB,OAAOzzB,EAAE2R,OAAO,GAAe,QAAZsf,EAAExvB,EAAE4xB,SAAiB5xB,EAAE4xB,QAAQ,CAACxtB,GAAGorB,EAAE9gB,KAAKtK,GAAG,MAAMqrB,EAAE,CAACsC,UAAUtC,EAAEuC,KAAKxC,EAAE9qB,IAAIN,EAAEM,IAAIutB,QAAQ7tB,EAAE6tB,QAAQC,SAAS9tB,EAAE8tB,SAASxC,KAAK,MAAM,OAAOngB,GAAGpL,EAAEoL,EAAEkgB,EAAEprB,EAAEkrB,GAAGhgB,EAAEA,EAAEmgB,KAAKD,EAAEvvB,GAAGsvB,EAC3e,GAAG,QAAZprB,EAAEA,EAAEsrB,MAAiB,IAAsB,QAAnBtrB,EAAEpE,EAAE0xB,OAAOC,SAAiB,MAAevtB,GAAJorB,EAAEprB,GAAMsrB,KAAKF,EAAEE,KAAK,KAAK1vB,EAAEyxB,eAAejC,EAAExvB,EAAE0xB,OAAOC,QAAQ,IAAI,EAAsG,GAA5F,OAAOpiB,IAAIlL,EAAEkrB,GAAGvvB,EAAEuxB,UAAUltB,EAAErE,EAAEwxB,gBAAgBrtB,EAAEnE,EAAEyxB,eAAeliB,EAA4B,QAA1B/Q,EAAEwB,EAAE0xB,OAAOR,aAAwB,CAAClxB,EAAExB,EAAE,GAAG0B,GAAGF,EAAEgyB,KAAKhyB,EAAEA,EAAE0vB,WAAW1vB,IAAIxB,EAAE,MAAM,OAAOyB,IAAID,EAAE0xB,OAAOhB,MAAM,GAAG8B,IAAItyB,EAAE3B,EAAEmyB,MAAMxwB,EAAE3B,EAAE6R,cAAcmf,CAAC,CAAC,CAC9V,SAASkD,GAAGl0B,EAAEC,EAAEC,GAA8B,GAA3BF,EAAEC,EAAEozB,QAAQpzB,EAAEozB,QAAQ,KAAQ,OAAOrzB,EAAE,IAAIC,EAAE,EAAEA,EAAED,EAAEI,OAAOH,IAAI,CAAC,IAAIuB,EAAExB,EAAEC,GAAGwB,EAAED,EAAEmyB,SAAS,GAAG,OAAOlyB,EAAE,CAAqB,GAApBD,EAAEmyB,SAAS,KAAKnyB,EAAEtB,EAAK,oBAAoBuB,EAAE,MAAMwD,MAAMlF,EAAE,IAAI0B,IAAIA,EAAEwB,KAAKzB,EAAE,CAAC,CAAC,CAAC,IAAI2yB,GAAG,CAAC,EAAEC,GAAGlI,GAAGiI,IAAIE,GAAGnI,GAAGiI,IAAIG,GAAGpI,GAAGiI,IAAI,SAASI,GAAGv0B,GAAG,GAAGA,IAAIm0B,GAAG,MAAMlvB,MAAMlF,EAAE,MAAM,OAAOC,CAAC,CACnS,SAASw0B,GAAGx0B,EAAEC,GAAyC,OAAtCmsB,GAAEkI,GAAGr0B,GAAGmsB,GAAEiI,GAAGr0B,GAAGosB,GAAEgI,GAAGD,IAAIn0B,EAAEC,EAAEyK,UAAmB,KAAK,EAAE,KAAK,GAAGzK,GAAGA,EAAEA,EAAEykB,iBAAiBzkB,EAAE8J,aAAaH,GAAG,KAAK,IAAI,MAAM,QAAkE3J,EAAE2J,GAArC3J,GAAvBD,EAAE,IAAIA,EAAEC,EAAEyP,WAAWzP,GAAM8J,cAAc,KAAK/J,EAAEA,EAAEy0B,SAAkBtI,GAAEiI,IAAIhI,GAAEgI,GAAGn0B,EAAE,CAAC,SAASy0B,KAAKvI,GAAEiI,IAAIjI,GAAEkI,IAAIlI,GAAEmI,GAAG,CAAC,SAASK,GAAG30B,GAAGu0B,GAAGD,GAAGniB,SAAS,IAAIlS,EAAEs0B,GAAGH,GAAGjiB,SAAajS,EAAE0J,GAAG3J,EAAED,EAAEkC,MAAMjC,IAAIC,IAAIksB,GAAEiI,GAAGr0B,GAAGosB,GAAEgI,GAAGl0B,GAAG,CAAC,SAAS00B,GAAG50B,GAAGq0B,GAAGliB,UAAUnS,IAAImsB,GAAEiI,IAAIjI,GAAEkI,IAAI,CAAC,IAAIQ,GAAE3I,GAAG,GACxZ,SAAS4I,GAAG90B,GAAG,IAAI,IAAIC,EAAED,EAAE,OAAOC,GAAG,CAAC,GAAG,KAAKA,EAAEkG,IAAI,CAAC,IAAIjG,EAAED,EAAE4R,cAAc,GAAG,OAAO3R,IAAmB,QAAfA,EAAEA,EAAE4R,aAAqB,OAAO5R,EAAE2c,MAAM,OAAO3c,EAAE2c,MAAM,OAAO5c,CAAC,MAAM,GAAG,KAAKA,EAAEkG,UAAK,IAASlG,EAAEyvB,cAAcqF,aAAa,GAAG,KAAa,IAAR90B,EAAE0R,OAAW,OAAO1R,OAAO,GAAG,OAAOA,EAAEgS,MAAM,CAAChS,EAAEgS,MAAMP,OAAOzR,EAAEA,EAAEA,EAAEgS,MAAM,QAAQ,CAAC,GAAGhS,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAEiS,SAAS,CAAC,GAAG,OAAOjS,EAAEyR,QAAQzR,EAAEyR,SAAS1R,EAAE,OAAO,KAAKC,EAAEA,EAAEyR,MAAM,CAACzR,EAAEiS,QAAQR,OAAOzR,EAAEyR,OAAOzR,EAAEA,EAAEiS,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI8iB,GAAG,GACrc,SAASC,KAAK,IAAI,IAAIj1B,EAAE,EAAEA,EAAEg1B,GAAG50B,OAAOJ,IAAIg1B,GAAGh1B,GAAGk1B,8BAA8B,KAAKF,GAAG50B,OAAO,CAAC,CAAC,IAAI+0B,GAAG1xB,EAAG2xB,uBAAuBC,GAAG5xB,EAAGoU,wBAAwByd,GAAG,EAAEC,GAAE,KAAKC,GAAE,KAAKC,GAAE,KAAKC,IAAG,EAAGC,IAAG,EAAGC,GAAG,EAAEC,GAAG,EAAE,SAASC,KAAI,MAAM7wB,MAAMlF,EAAE,KAAM,CAAC,SAASg2B,GAAG/1B,EAAEC,GAAG,GAAG,OAAOA,EAAE,OAAM,EAAG,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEG,QAAQF,EAAEF,EAAEI,OAAOF,IAAI,IAAIqjB,GAAGvjB,EAAEE,GAAGD,EAAEC,IAAI,OAAM,EAAG,OAAM,CAAE,CAChW,SAAS81B,GAAGh2B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAyH,GAAtH4zB,GAAG5zB,EAAE6zB,GAAEt1B,EAAEA,EAAE4R,cAAc,KAAK5R,EAAE8yB,YAAY,KAAK9yB,EAAEkyB,MAAM,EAAEgD,GAAGhjB,QAAQ,OAAOnS,GAAG,OAAOA,EAAE6R,cAAcokB,GAAGC,GAAGl2B,EAAEE,EAAEsB,EAAEC,GAAMk0B,GAAG,CAACj0B,EAAE,EAAE,EAAE,CAAY,GAAXi0B,IAAG,EAAGC,GAAG,EAAK,IAAIl0B,EAAE,MAAMuD,MAAMlF,EAAE,MAAM2B,GAAG,EAAE+zB,GAAED,GAAE,KAAKv1B,EAAE8yB,YAAY,KAAKoC,GAAGhjB,QAAQgkB,GAAGn2B,EAAEE,EAAEsB,EAAEC,EAAE,OAAOk0B,GAAG,CAA+D,GAA9DR,GAAGhjB,QAAQikB,GAAGn2B,EAAE,OAAOu1B,IAAG,OAAOA,GAAErE,KAAKmE,GAAG,EAAEG,GAAED,GAAED,GAAE,KAAKG,IAAG,EAAMz1B,EAAE,MAAMgF,MAAMlF,EAAE,MAAM,OAAOC,CAAC,CAAC,SAASq2B,KAAK,IAAIr2B,EAAE,IAAI41B,GAAQ,OAALA,GAAG,EAAS51B,CAAC,CAC/Y,SAASs2B,KAAK,IAAIt2B,EAAE,CAAC6R,cAAc,KAAKmhB,UAAU,KAAKuD,UAAU,KAAKC,MAAM,KAAKrF,KAAK,MAA8C,OAAxC,OAAOsE,GAAEF,GAAE1jB,cAAc4jB,GAAEz1B,EAAEy1B,GAAEA,GAAEtE,KAAKnxB,EAASy1B,EAAC,CAAC,SAASgB,KAAK,GAAG,OAAOjB,GAAE,CAAC,IAAIx1B,EAAEu1B,GAAE9jB,UAAUzR,EAAE,OAAOA,EAAEA,EAAE6R,cAAc,IAAI,MAAM7R,EAAEw1B,GAAErE,KAAK,IAAIlxB,EAAE,OAAOw1B,GAAEF,GAAE1jB,cAAc4jB,GAAEtE,KAAK,GAAG,OAAOlxB,EAAEw1B,GAAEx1B,EAAEu1B,GAAEx1B,MAAM,CAAC,GAAG,OAAOA,EAAE,MAAMiF,MAAMlF,EAAE,MAAUC,EAAE,CAAC6R,eAAP2jB,GAAEx1B,GAAqB6R,cAAcmhB,UAAUwC,GAAExC,UAAUuD,UAAUf,GAAEe,UAAUC,MAAMhB,GAAEgB,MAAMrF,KAAK,MAAM,OAAOsE,GAAEF,GAAE1jB,cAAc4jB,GAAEz1B,EAAEy1B,GAAEA,GAAEtE,KAAKnxB,CAAC,CAAC,OAAOy1B,EAAC,CACje,SAASiB,GAAG12B,EAAEC,GAAG,MAAM,oBAAoBA,EAAEA,EAAED,GAAGC,CAAC,CACnD,SAAS02B,GAAG32B,GAAG,IAAIC,EAAEw2B,KAAKv2B,EAAED,EAAEu2B,MAAM,GAAG,OAAOt2B,EAAE,MAAM+E,MAAMlF,EAAE,MAAMG,EAAE02B,oBAAoB52B,EAAE,IAAIwB,EAAEg0B,GAAE/zB,EAAED,EAAE+0B,UAAU70B,EAAExB,EAAEkzB,QAAQ,GAAG,OAAO1xB,EAAE,CAAC,GAAG,OAAOD,EAAE,CAAC,IAAIE,EAAEF,EAAE0vB,KAAK1vB,EAAE0vB,KAAKzvB,EAAEyvB,KAAKzvB,EAAEyvB,KAAKxvB,CAAC,CAACH,EAAE+0B,UAAU90B,EAAEC,EAAExB,EAAEkzB,QAAQ,IAAI,CAAC,GAAG,OAAO3xB,EAAE,CAACC,EAAED,EAAE0vB,KAAK3vB,EAAEA,EAAEwxB,UAAU,IAAIntB,EAAElE,EAAE,KAAKmE,EAAE,KAAKF,EAAElE,EAAE,EAAE,CAAC,IAAIsP,EAAEpL,EAAE6tB,KAAK,IAAI6B,GAAGtkB,KAAKA,EAAE,OAAOlL,IAAIA,EAAEA,EAAEqrB,KAAK,CAACsC,KAAK,EAAEoD,OAAOjxB,EAAEixB,OAAOC,cAAclxB,EAAEkxB,cAAcC,WAAWnxB,EAAEmxB,WAAW5F,KAAK,OAAO3vB,EAAEoE,EAAEkxB,cAAclxB,EAAEmxB,WAAW/2B,EAAEwB,EAAEoE,EAAEixB,YAAY,CAAC,IAAI7F,EAAE,CAACyC,KAAKziB,EAAE6lB,OAAOjxB,EAAEixB,OAAOC,cAAclxB,EAAEkxB,cACngBC,WAAWnxB,EAAEmxB,WAAW5F,KAAK,MAAM,OAAOrrB,GAAGD,EAAEC,EAAEkrB,EAAErvB,EAAEH,GAAGsE,EAAEA,EAAEqrB,KAAKH,EAAEuE,GAAEpD,OAAOnhB,EAAEijB,IAAIjjB,CAAC,CAACpL,EAAEA,EAAEurB,IAAI,OAAO,OAAOvrB,GAAGA,IAAIlE,GAAG,OAAOoE,EAAEnE,EAAEH,EAAEsE,EAAEqrB,KAAKtrB,EAAE0d,GAAG/hB,EAAEvB,EAAE4R,iBAAiBugB,IAAG,GAAInyB,EAAE4R,cAAcrQ,EAAEvB,EAAE+yB,UAAUrxB,EAAE1B,EAAEs2B,UAAUzwB,EAAE5F,EAAE82B,kBAAkBx1B,CAAC,CAAiB,GAAG,QAAnBxB,EAAEE,EAAEyyB,aAAwB,CAAClxB,EAAEzB,EAAE,GAAG0B,EAAED,EAAEgyB,KAAK8B,GAAEpD,OAAOzwB,EAAEuyB,IAAIvyB,EAAED,EAAEA,EAAE0vB,WAAW1vB,IAAIzB,EAAE,MAAM,OAAOyB,IAAIvB,EAAEiyB,MAAM,GAAG,MAAM,CAAClyB,EAAE4R,cAAc3R,EAAE+2B,SAAS,CAC9X,SAASC,GAAGl3B,GAAG,IAAIC,EAAEw2B,KAAKv2B,EAAED,EAAEu2B,MAAM,GAAG,OAAOt2B,EAAE,MAAM+E,MAAMlF,EAAE,MAAMG,EAAE02B,oBAAoB52B,EAAE,IAAIwB,EAAEtB,EAAE+2B,SAASx1B,EAAEvB,EAAEkzB,QAAQ1xB,EAAEzB,EAAE4R,cAAc,GAAG,OAAOpQ,EAAE,CAACvB,EAAEkzB,QAAQ,KAAK,IAAIzxB,EAAEF,EAAEA,EAAE0vB,KAAK,GAAGzvB,EAAE1B,EAAE0B,EAAEC,EAAEk1B,QAAQl1B,EAAEA,EAAEwvB,WAAWxvB,IAAIF,GAAG8hB,GAAG7hB,EAAEzB,EAAE4R,iBAAiBugB,IAAG,GAAInyB,EAAE4R,cAAcnQ,EAAE,OAAOzB,EAAEs2B,YAAYt2B,EAAE+yB,UAAUtxB,GAAGxB,EAAE82B,kBAAkBt1B,CAAC,CAAC,MAAM,CAACA,EAAEF,EAAE,CAAC,SAAS21B,KAAK,CACpW,SAASC,GAAGp3B,EAAEC,GAAG,IAAIC,EAAEq1B,GAAE/zB,EAAEi1B,KAAKh1B,EAAExB,IAAIyB,GAAG6hB,GAAG/hB,EAAEqQ,cAAcpQ,GAAsE,GAAnEC,IAAIF,EAAEqQ,cAAcpQ,EAAE2wB,IAAG,GAAI5wB,EAAEA,EAAEg1B,MAAMa,GAAGC,GAAG3O,KAAK,KAAKzoB,EAAEsB,EAAExB,GAAG,CAACA,IAAOwB,EAAE+1B,cAAct3B,GAAGyB,GAAG,OAAO+zB,IAAuB,EAApBA,GAAE5jB,cAAc1L,IAAM,CAAuD,GAAtDjG,EAAEyR,OAAO,KAAK6lB,GAAG,EAAEC,GAAG9O,KAAK,KAAKzoB,EAAEsB,EAAEC,EAAExB,QAAG,EAAO,MAAS,OAAOy3B,GAAE,MAAMzyB,MAAMlF,EAAE,MAAM,KAAQ,GAAHu1B,KAAQqC,GAAGz3B,EAAED,EAAEwB,EAAE,CAAC,OAAOA,CAAC,CAAC,SAASk2B,GAAG33B,EAAEC,EAAEC,GAAGF,EAAE2R,OAAO,MAAM3R,EAAE,CAACu3B,YAAYt3B,EAAE0H,MAAMzH,GAAmB,QAAhBD,EAAEs1B,GAAExC,cAAsB9yB,EAAE,CAAC23B,WAAW,KAAKC,OAAO,MAAMtC,GAAExC,YAAY9yB,EAAEA,EAAE43B,OAAO,CAAC73B,IAAgB,QAAXE,EAAED,EAAE43B,QAAgB53B,EAAE43B,OAAO,CAAC73B,GAAGE,EAAEiQ,KAAKnQ,EAAG,CAClf,SAASy3B,GAAGz3B,EAAEC,EAAEC,EAAEsB,GAAGvB,EAAE0H,MAAMzH,EAAED,EAAEs3B,YAAY/1B,EAAEs2B,GAAG73B,IAAI83B,GAAG/3B,EAAE,CAAC,SAASs3B,GAAGt3B,EAAEC,EAAEC,GAAG,OAAOA,GAAE,WAAW43B,GAAG73B,IAAI83B,GAAG/3B,EAAE,GAAE,CAAC,SAAS83B,GAAG93B,GAAG,IAAIC,EAAED,EAAEu3B,YAAYv3B,EAAEA,EAAE2H,MAAM,IAAI,IAAIzH,EAAED,IAAI,OAAOsjB,GAAGvjB,EAAEE,EAAE,CAAC,MAAMsB,GAAG,OAAM,CAAE,CAAC,CAAC,SAASu2B,GAAG/3B,GAAG,IAAIC,EAAE2yB,GAAG5yB,EAAE,GAAG,OAAOC,GAAG+3B,GAAG/3B,EAAED,EAAE,GAAG,EAAE,CAClQ,SAASi4B,GAAGj4B,GAAG,IAAIC,EAAEq2B,KAA8M,MAAzM,oBAAoBt2B,IAAIA,EAAEA,KAAKC,EAAE4R,cAAc5R,EAAE+yB,UAAUhzB,EAAEA,EAAE,CAACozB,QAAQ,KAAKT,YAAY,KAAKR,MAAM,EAAE8E,SAAS,KAAKL,oBAAoBF,GAAGM,kBAAkBh3B,GAAGC,EAAEu2B,MAAMx2B,EAAEA,EAAEA,EAAEi3B,SAASiB,GAAGvP,KAAK,KAAK4M,GAAEv1B,GAAS,CAACC,EAAE4R,cAAc7R,EAAE,CAC5P,SAASw3B,GAAGx3B,EAAEC,EAAEC,EAAEsB,GAA8O,OAA3OxB,EAAE,CAACmG,IAAInG,EAAEm4B,OAAOl4B,EAAEm4B,QAAQl4B,EAAEm4B,KAAK72B,EAAE2vB,KAAK,MAAsB,QAAhBlxB,EAAEs1B,GAAExC,cAAsB9yB,EAAE,CAAC23B,WAAW,KAAKC,OAAO,MAAMtC,GAAExC,YAAY9yB,EAAEA,EAAE23B,WAAW53B,EAAEmxB,KAAKnxB,GAAmB,QAAfE,EAAED,EAAE23B,YAAoB33B,EAAE23B,WAAW53B,EAAEmxB,KAAKnxB,GAAGwB,EAAEtB,EAAEixB,KAAKjxB,EAAEixB,KAAKnxB,EAAEA,EAAEmxB,KAAK3vB,EAAEvB,EAAE23B,WAAW53B,GAAWA,CAAC,CAAC,SAASs4B,KAAK,OAAO7B,KAAK5kB,aAAa,CAAC,SAAS0mB,GAAGv4B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAE60B,KAAKf,GAAE5jB,OAAO3R,EAAEyB,EAAEoQ,cAAc2lB,GAAG,EAAEv3B,EAAEC,OAAE,OAAO,IAASsB,EAAE,KAAKA,EAAE,CAC9Y,SAASg3B,GAAGx4B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEg1B,KAAKj1B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIE,OAAE,EAAO,GAAG,OAAO8zB,GAAE,CAAC,IAAI7zB,EAAE6zB,GAAE3jB,cAA0B,GAAZnQ,EAAEC,EAAEy2B,QAAW,OAAO52B,GAAGu0B,GAAGv0B,EAAEG,EAAE02B,MAAmC,YAA5B52B,EAAEoQ,cAAc2lB,GAAGv3B,EAAEC,EAAEwB,EAAEF,GAAU,CAAC+zB,GAAE5jB,OAAO3R,EAAEyB,EAAEoQ,cAAc2lB,GAAG,EAAEv3B,EAAEC,EAAEwB,EAAEF,EAAE,CAAC,SAASi3B,GAAGz4B,EAAEC,GAAG,OAAOs4B,GAAG,QAAQ,EAAEv4B,EAAEC,EAAE,CAAC,SAASo3B,GAAGr3B,EAAEC,GAAG,OAAOu4B,GAAG,KAAK,EAAEx4B,EAAEC,EAAE,CAAC,SAASy4B,GAAG14B,EAAEC,GAAG,OAAOu4B,GAAG,EAAE,EAAEx4B,EAAEC,EAAE,CAAC,SAAS04B,GAAG34B,EAAEC,GAAG,OAAOu4B,GAAG,EAAE,EAAEx4B,EAAEC,EAAE,CAChX,SAAS24B,GAAG54B,EAAEC,GAAG,MAAG,oBAAoBA,GAASD,EAAEA,IAAIC,EAAED,GAAG,WAAWC,EAAE,KAAK,GAAK,OAAOA,QAAG,IAASA,GAASD,EAAEA,IAAIC,EAAEkS,QAAQnS,EAAE,WAAWC,EAAEkS,QAAQ,IAAI,QAA1E,CAA2E,CAAC,SAAS0mB,GAAG74B,EAAEC,EAAEC,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAE4nB,OAAO,CAAC9nB,IAAI,KAAYw4B,GAAG,EAAE,EAAEI,GAAGjQ,KAAK,KAAK1oB,EAAED,GAAGE,EAAE,CAAC,SAAS44B,KAAK,CAAC,SAASC,GAAG/4B,EAAEC,GAAG,IAAIC,EAAEu2B,KAAKx2B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIuB,EAAEtB,EAAE2R,cAAc,OAAG,OAAOrQ,GAAG,OAAOvB,GAAG81B,GAAG91B,EAAEuB,EAAE,IAAWA,EAAE,IAAGtB,EAAE2R,cAAc,CAAC7R,EAAEC,GAAUD,EAAC,CAC7Z,SAASg5B,GAAGh5B,EAAEC,GAAG,IAAIC,EAAEu2B,KAAKx2B,OAAE,IAASA,EAAE,KAAKA,EAAE,IAAIuB,EAAEtB,EAAE2R,cAAc,OAAG,OAAOrQ,GAAG,OAAOvB,GAAG81B,GAAG91B,EAAEuB,EAAE,IAAWA,EAAE,IAAGxB,EAAEA,IAAIE,EAAE2R,cAAc,CAAC7R,EAAEC,GAAUD,EAAC,CAAC,SAASi5B,GAAGj5B,EAAEC,EAAEC,GAAG,OAAG,KAAQ,GAAHo1B,KAAct1B,EAAEgzB,YAAYhzB,EAAEgzB,WAAU,EAAGZ,IAAG,GAAIpyB,EAAE6R,cAAc3R,IAAEqjB,GAAGrjB,EAAED,KAAKC,EAAE8U,KAAKugB,GAAEpD,OAAOjyB,EAAE+zB,IAAI/zB,EAAEF,EAAEgzB,WAAU,GAAW/yB,EAAC,CAAC,SAASi5B,GAAGl5B,EAAEC,GAAG,IAAIC,EAAEmV,GAAEA,GAAE,IAAInV,GAAG,EAAEA,EAAEA,EAAE,EAAEF,GAAE,GAAI,IAAIwB,EAAE6zB,GAAGrd,WAAWqd,GAAGrd,WAAW,CAAC,EAAE,IAAIhY,GAAE,GAAIC,GAAG,CAAC,QAAQoV,GAAEnV,EAAEm1B,GAAGrd,WAAWxW,CAAC,CAAC,CAAC,SAAS23B,KAAK,OAAO1C,KAAK5kB,aAAa,CAC1d,SAASunB,GAAGp5B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE63B,GAAGr5B,GAAkE,GAA/DE,EAAE,CAACuzB,KAAKjyB,EAAEq1B,OAAO32B,EAAE42B,eAAc,EAAGC,WAAW,KAAK5F,KAAK,MAASmI,GAAGt5B,GAAGu5B,GAAGt5B,EAAEC,QAAQ,GAAiB,QAAdA,EAAEwyB,GAAG1yB,EAAEC,EAAEC,EAAEsB,IAAY,CAAWw2B,GAAG93B,EAAEF,EAAEwB,EAAXg4B,MAAgBC,GAAGv5B,EAAED,EAAEuB,EAAE,CAAC,CAC/K,SAAS02B,GAAGl4B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE63B,GAAGr5B,GAAGyB,EAAE,CAACgyB,KAAKjyB,EAAEq1B,OAAO32B,EAAE42B,eAAc,EAAGC,WAAW,KAAK5F,KAAK,MAAM,GAAGmI,GAAGt5B,GAAGu5B,GAAGt5B,EAAEwB,OAAO,CAAC,IAAIC,EAAE1B,EAAEyR,UAAU,GAAG,IAAIzR,EAAEmyB,QAAQ,OAAOzwB,GAAG,IAAIA,EAAEywB,QAAiC,QAAxBzwB,EAAEzB,EAAE22B,qBAA8B,IAAI,IAAIj1B,EAAE1B,EAAE+2B,kBAAkBnxB,EAAEnE,EAAEC,EAAEzB,GAAqC,GAAlCuB,EAAEq1B,eAAc,EAAGr1B,EAAEs1B,WAAWlxB,EAAK0d,GAAG1d,EAAElE,GAAG,CAAC,IAAImE,EAAE7F,EAAE0yB,YAA+E,OAAnE,OAAO7sB,GAAGrE,EAAE0vB,KAAK1vB,EAAEgxB,GAAGxyB,KAAKwB,EAAE0vB,KAAKrrB,EAAEqrB,KAAKrrB,EAAEqrB,KAAK1vB,QAAGxB,EAAE0yB,YAAYlxB,EAAQ,CAAC,CAAC,MAAMmE,GAAG,CAAwB,QAAd1F,EAAEwyB,GAAG1yB,EAAEC,EAAEwB,EAAED,MAAoBw2B,GAAG93B,EAAEF,EAAEwB,EAAbC,EAAE+3B,MAAgBC,GAAGv5B,EAAED,EAAEuB,GAAG,CAAC,CAC/c,SAAS83B,GAAGt5B,GAAG,IAAIC,EAAED,EAAEyR,UAAU,OAAOzR,IAAIu1B,IAAG,OAAOt1B,GAAGA,IAAIs1B,EAAC,CAAC,SAASgE,GAAGv5B,EAAEC,GAAG01B,GAAGD,IAAG,EAAG,IAAIx1B,EAAEF,EAAEozB,QAAQ,OAAOlzB,EAAED,EAAEkxB,KAAKlxB,GAAGA,EAAEkxB,KAAKjxB,EAAEixB,KAAKjxB,EAAEixB,KAAKlxB,GAAGD,EAAEozB,QAAQnzB,CAAC,CAAC,SAASw5B,GAAGz5B,EAAEC,EAAEC,GAAG,GAAG,KAAO,QAAFA,GAAW,CAAC,IAAIsB,EAAEvB,EAAEkyB,MAAwBjyB,GAAlBsB,GAAGxB,EAAEyU,aAAkBxU,EAAEkyB,MAAMjyB,EAAEkV,GAAGpV,EAAEE,EAAE,CAAC,CAC9P,IAAIk2B,GAAG,CAACsD,YAAYrH,GAAGsH,YAAY7D,GAAE8D,WAAW9D,GAAE+D,UAAU/D,GAAEgE,oBAAoBhE,GAAEiE,mBAAmBjE,GAAEkE,gBAAgBlE,GAAEmE,QAAQnE,GAAEoE,WAAWpE,GAAEqE,OAAOrE,GAAEsE,SAAStE,GAAEuE,cAAcvE,GAAEwE,iBAAiBxE,GAAEyE,cAAczE,GAAE0E,iBAAiB1E,GAAE2E,qBAAqB3E,GAAE4E,MAAM5E,GAAE6E,0BAAyB,GAAI1E,GAAG,CAACyD,YAAYrH,GAAGsH,YAAY,SAAS35B,EAAEC,GAA4C,OAAzCq2B,KAAKzkB,cAAc,CAAC7R,OAAE,IAASC,EAAE,KAAKA,GAAUD,CAAC,EAAE45B,WAAWvH,GAAGwH,UAAUpB,GAAGqB,oBAAoB,SAAS95B,EAAEC,EAAEC,GAA6C,OAA1CA,EAAE,OAAOA,QAAG,IAASA,EAAEA,EAAE4nB,OAAO,CAAC9nB,IAAI,KAAYu4B,GAAG,QAC3f,EAAEK,GAAGjQ,KAAK,KAAK1oB,EAAED,GAAGE,EAAE,EAAE85B,gBAAgB,SAASh6B,EAAEC,GAAG,OAAOs4B,GAAG,QAAQ,EAAEv4B,EAAEC,EAAE,EAAE85B,mBAAmB,SAAS/5B,EAAEC,GAAG,OAAOs4B,GAAG,EAAE,EAAEv4B,EAAEC,EAAE,EAAEg6B,QAAQ,SAASj6B,EAAEC,GAAG,IAAIC,EAAEo2B,KAAqD,OAAhDr2B,OAAE,IAASA,EAAE,KAAKA,EAAED,EAAEA,IAAIE,EAAE2R,cAAc,CAAC7R,EAAEC,GAAUD,CAAC,EAAEk6B,WAAW,SAASl6B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE80B,KAAkM,OAA7Lr2B,OAAE,IAASC,EAAEA,EAAED,GAAGA,EAAEuB,EAAEqQ,cAAcrQ,EAAEwxB,UAAU/yB,EAAED,EAAE,CAACozB,QAAQ,KAAKT,YAAY,KAAKR,MAAM,EAAE8E,SAAS,KAAKL,oBAAoB52B,EAAEg3B,kBAAkB/2B,GAAGuB,EAAEg1B,MAAMx2B,EAAEA,EAAEA,EAAEi3B,SAASmC,GAAGzQ,KAAK,KAAK4M,GAAEv1B,GAAS,CAACwB,EAAEqQ,cAAc7R,EAAE,EAAEm6B,OAAO,SAASn6B,GAC3d,OAAdA,EAAE,CAACmS,QAAQnS,GAAhBs2B,KAA4BzkB,cAAc7R,CAAC,EAAEo6B,SAASnC,GAAGoC,cAAcvB,GAAGwB,iBAAiB,SAASt6B,GAAG,OAAOs2B,KAAKzkB,cAAc7R,CAAC,EAAEu6B,cAAc,WAAW,IAAIv6B,EAAEi4B,IAAG,GAAIh4B,EAAED,EAAE,GAA6C,OAA1CA,EAAEk5B,GAAGvQ,KAAK,KAAK3oB,EAAE,IAAIs2B,KAAKzkB,cAAc7R,EAAQ,CAACC,EAAED,EAAE,EAAEw6B,iBAAiB,WAAW,EAAEC,qBAAqB,SAASz6B,EAAEC,EAAEC,GAAG,IAAIsB,EAAE+zB,GAAE9zB,EAAE60B,KAAK,GAAG5H,GAAE,CAAC,QAAG,IAASxuB,EAAE,MAAM+E,MAAMlF,EAAE,MAAMG,EAAEA,GAAG,KAAK,CAAO,GAANA,EAAED,IAAO,OAAOy3B,GAAE,MAAMzyB,MAAMlF,EAAE,MAAM,KAAQ,GAAHu1B,KAAQqC,GAAGn2B,EAAEvB,EAAEC,EAAE,CAACuB,EAAEoQ,cAAc3R,EAAE,IAAIwB,EAAE,CAACiG,MAAMzH,EAAEq3B,YAAYt3B,GACvZ,OAD0ZwB,EAAE+0B,MAAM90B,EAAE+2B,GAAGnB,GAAG3O,KAAK,KAAKnnB,EACpfE,EAAE1B,GAAG,CAACA,IAAIwB,EAAEmQ,OAAO,KAAK6lB,GAAG,EAAEC,GAAG9O,KAAK,KAAKnnB,EAAEE,EAAExB,EAAED,QAAG,EAAO,MAAaC,CAAC,EAAEw6B,MAAM,WAAW,IAAI16B,EAAEs2B,KAAKr2B,EAAEy3B,GAAEkD,iBAAiB,GAAGlM,GAAE,CAAC,IAAIxuB,EAAEiuB,GAAkDluB,EAAE,IAAIA,EAAE,KAA9CC,GAAHguB,KAAU,GAAG,GAAGpa,GAAhBoa,IAAsB,IAAIhkB,SAAS,IAAIhK,GAAuB,GAAPA,EAAE01B,QAAW31B,GAAG,IAAIC,EAAEgK,SAAS,KAAKjK,GAAG,GAAG,MAAaA,EAAE,IAAIA,EAAE,KAAfC,EAAE21B,MAAmB3rB,SAAS,IAAI,IAAI,OAAOlK,EAAE6R,cAAc5R,CAAC,EAAE06B,0BAAyB,GAAIzE,GAAG,CAACwD,YAAYrH,GAAGsH,YAAYZ,GAAGa,WAAWvH,GAAGwH,UAAUxC,GAAGyC,oBAAoBjB,GAAGkB,mBAAmBrB,GAAGsB,gBAAgBrB,GAAGsB,QAAQjB,GAAGkB,WAAWvD,GAAGwD,OAAO7B,GAAG8B,SAAS,WAAW,OAAOzD,GAAGD,GAAG,EACrhB2D,cAAcvB,GAAGwB,iBAAiB,SAASt6B,GAAc,OAAOi5B,GAAZxC,KAAiBjB,GAAE3jB,cAAc7R,EAAE,EAAEu6B,cAAc,WAAgD,MAAM,CAArC5D,GAAGD,IAAI,GAAKD,KAAK5kB,cAAyB,EAAE2oB,iBAAiBrD,GAAGsD,qBAAqBrD,GAAGsD,MAAMvB,GAAGwB,0BAAyB,GAAIxE,GAAG,CAACuD,YAAYrH,GAAGsH,YAAYZ,GAAGa,WAAWvH,GAAGwH,UAAUxC,GAAGyC,oBAAoBjB,GAAGkB,mBAAmBrB,GAAGsB,gBAAgBrB,GAAGsB,QAAQjB,GAAGkB,WAAWhD,GAAGiD,OAAO7B,GAAG8B,SAAS,WAAW,OAAOlD,GAAGR,GAAG,EAAE2D,cAAcvB,GAAGwB,iBAAiB,SAASt6B,GAAG,IAAIC,EAAEw2B,KAAK,OAAO,OACzfjB,GAAEv1B,EAAE4R,cAAc7R,EAAEi5B,GAAGh5B,EAAEu1B,GAAE3jB,cAAc7R,EAAE,EAAEu6B,cAAc,WAAgD,MAAM,CAArCrD,GAAGR,IAAI,GAAKD,KAAK5kB,cAAyB,EAAE2oB,iBAAiBrD,GAAGsD,qBAAqBrD,GAAGsD,MAAMvB,GAAGwB,0BAAyB,GAAI,SAASE,GAAG76B,EAAEC,GAAG,GAAGD,GAAGA,EAAE86B,aAAa,CAA4B,IAAI,IAAI56B,KAAnCD,EAAE6E,EAAE,CAAC,EAAE7E,GAAGD,EAAEA,EAAE86B,kBAA4B,IAAS76B,EAAEC,KAAKD,EAAEC,GAAGF,EAAEE,IAAI,OAAOD,CAAC,CAAC,OAAOA,CAAC,CAAC,SAAS86B,GAAG/6B,EAAEC,EAAEC,EAAEsB,GAA8BtB,EAAE,QAAXA,EAAEA,EAAEsB,EAAtBvB,EAAED,EAAE6R,sBAAmC,IAAS3R,EAAED,EAAE6E,EAAE,CAAC,EAAE7E,EAAEC,GAAGF,EAAE6R,cAAc3R,EAAE,IAAIF,EAAEmyB,QAAQnyB,EAAE+yB,YAAYC,UAAU9yB,EAAE,CACrd,IAAI86B,GAAG,CAACC,UAAU,SAASj7B,GAAG,SAAOA,EAAEA,EAAEk7B,kBAAiB1pB,GAAGxR,KAAKA,CAAI,EAAEm7B,gBAAgB,SAASn7B,EAAEC,EAAEC,GAAGF,EAAEA,EAAEk7B,gBAAgB,IAAI15B,EAAEg4B,KAAI/3B,EAAE43B,GAAGr5B,GAAG0B,EAAE6xB,GAAG/xB,EAAEC,GAAGC,EAAEgyB,QAAQzzB,OAAE,IAASC,GAAG,OAAOA,IAAIwB,EAAEiyB,SAASzzB,GAAe,QAAZD,EAAE2zB,GAAG5zB,EAAE0B,EAAED,MAAcu2B,GAAG/3B,EAAED,EAAEyB,EAAED,GAAGsyB,GAAG7zB,EAAED,EAAEyB,GAAG,EAAE25B,oBAAoB,SAASp7B,EAAEC,EAAEC,GAAGF,EAAEA,EAAEk7B,gBAAgB,IAAI15B,EAAEg4B,KAAI/3B,EAAE43B,GAAGr5B,GAAG0B,EAAE6xB,GAAG/xB,EAAEC,GAAGC,EAAEyE,IAAI,EAAEzE,EAAEgyB,QAAQzzB,OAAE,IAASC,GAAG,OAAOA,IAAIwB,EAAEiyB,SAASzzB,GAAe,QAAZD,EAAE2zB,GAAG5zB,EAAE0B,EAAED,MAAcu2B,GAAG/3B,EAAED,EAAEyB,EAAED,GAAGsyB,GAAG7zB,EAAED,EAAEyB,GAAG,EAAE45B,mBAAmB,SAASr7B,EAAEC,GAAGD,EAAEA,EAAEk7B,gBAAgB,IAAIh7B,EAAEs5B,KAAIh4B,EACnf63B,GAAGr5B,GAAGyB,EAAE8xB,GAAGrzB,EAAEsB,GAAGC,EAAE0E,IAAI,OAAE,IAASlG,GAAG,OAAOA,IAAIwB,EAAEkyB,SAAS1zB,GAAe,QAAZA,EAAE2zB,GAAG5zB,EAAEyB,EAAED,MAAcw2B,GAAG/3B,EAAED,EAAEwB,EAAEtB,GAAG4zB,GAAG7zB,EAAED,EAAEwB,GAAG,GAAG,SAAS85B,GAAGt7B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,GAAiB,MAAM,oBAApB3B,EAAEA,EAAEgQ,WAAsCurB,sBAAsBv7B,EAAEu7B,sBAAsB/5B,EAAEE,EAAEC,IAAG1B,EAAEiB,YAAWjB,EAAEiB,UAAUs6B,wBAAsBhY,GAAGtjB,EAAEsB,KAAKgiB,GAAG/hB,EAAEC,GAAK,CAC1S,SAAS+5B,GAAGz7B,EAAEC,EAAEC,GAAG,IAAIsB,GAAE,EAAGC,EAAE4qB,GAAO3qB,EAAEzB,EAAEy7B,YAA2W,MAA/V,kBAAkBh6B,GAAG,OAAOA,EAAEA,EAAE2wB,GAAG3wB,IAAID,EAAEorB,GAAG5sB,GAAGusB,GAAGF,GAAEna,QAAyBzQ,GAAGF,EAAE,QAAtBA,EAAEvB,EAAEysB,oBAA4B,IAASlrB,GAAGirB,GAAGzsB,EAAEyB,GAAG4qB,IAAIpsB,EAAE,IAAIA,EAAEC,EAAEwB,GAAG1B,EAAE6R,cAAc,OAAO5R,EAAE07B,YAAO,IAAS17B,EAAE07B,MAAM17B,EAAE07B,MAAM,KAAK17B,EAAE27B,QAAQZ,GAAGh7B,EAAEgQ,UAAU/P,EAAEA,EAAEi7B,gBAAgBl7B,EAAEwB,KAAIxB,EAAEA,EAAEgQ,WAAY2c,4CAA4ClrB,EAAEzB,EAAE4sB,0CAA0ClrB,GAAUzB,CAAC,CAC5Z,SAAS47B,GAAG77B,EAAEC,EAAEC,EAAEsB,GAAGxB,EAAEC,EAAE07B,MAAM,oBAAoB17B,EAAE67B,2BAA2B77B,EAAE67B,0BAA0B57B,EAAEsB,GAAG,oBAAoBvB,EAAE87B,kCAAkC97B,EAAE87B,iCAAiC77B,EAAEsB,GAAGvB,EAAE07B,QAAQ37B,GAAGg7B,GAAGI,oBAAoBn7B,EAAEA,EAAE07B,MAAM,KAAK,CACpQ,SAASK,GAAGh8B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEzB,EAAEgQ,UAAUvO,EAAEkvB,MAAMzwB,EAAEuB,EAAEk6B,MAAM37B,EAAE6R,cAAcpQ,EAAE0uB,KAAK,CAAC,EAAE2C,GAAG9yB,GAAG,IAAI0B,EAAEzB,EAAEy7B,YAAY,kBAAkBh6B,GAAG,OAAOA,EAAED,EAAE6wB,QAAQD,GAAG3wB,IAAIA,EAAEmrB,GAAG5sB,GAAGusB,GAAGF,GAAEna,QAAQ1Q,EAAE6wB,QAAQ7F,GAAGzsB,EAAE0B,IAAID,EAAEk6B,MAAM37B,EAAE6R,cAA2C,oBAA7BnQ,EAAEzB,EAAEg8B,4BAAiDlB,GAAG/6B,EAAEC,EAAEyB,EAAExB,GAAGuB,EAAEk6B,MAAM37B,EAAE6R,eAAe,oBAAoB5R,EAAEg8B,0BAA0B,oBAAoBx6B,EAAEy6B,yBAAyB,oBAAoBz6B,EAAE06B,2BAA2B,oBAAoB16B,EAAE26B,qBAAqBn8B,EAAEwB,EAAEk6B,MACrf,oBAAoBl6B,EAAE26B,oBAAoB36B,EAAE26B,qBAAqB,oBAAoB36B,EAAE06B,2BAA2B16B,EAAE06B,4BAA4Bl8B,IAAIwB,EAAEk6B,OAAOX,GAAGI,oBAAoB35B,EAAEA,EAAEk6B,MAAM,MAAM3H,GAAGh0B,EAAEE,EAAEuB,EAAED,GAAGC,EAAEk6B,MAAM37B,EAAE6R,eAAe,oBAAoBpQ,EAAE46B,oBAAoBr8B,EAAE2R,OAAO,QAAQ,CAAC,SAAS2qB,GAAGt8B,EAAEC,GAAG,IAAI,IAAIC,EAAE,GAAGsB,EAAEvB,EAAE,GAAGC,GAAGgG,EAAG1E,GAAGA,EAAEA,EAAEkQ,aAAalQ,GAAG,IAAIC,EAAEvB,CAAC,CAAC,MAAMwB,GAAGD,EAAE,6BAA6BC,EAAE66B,QAAQ,KAAK76B,EAAEwD,KAAK,CAAC,MAAM,CAACyC,MAAM3H,EAAE+O,OAAO9O,EAAEiF,MAAMzD,EAAE+6B,OAAO,KAAK,CAC1d,SAASC,GAAGz8B,EAAEC,EAAEC,GAAG,MAAM,CAACyH,MAAM3H,EAAE+O,OAAO,KAAK7J,MAAM,MAAMhF,EAAEA,EAAE,KAAKs8B,OAAO,MAAMv8B,EAAEA,EAAE,KAAK,CAAC,SAASy8B,GAAG18B,EAAEC,GAAG,IAAI08B,QAAQC,MAAM38B,EAAE0H,MAAM,CAAC,MAAMzH,GAAG0qB,YAAW,WAAW,MAAM1qB,CAAE,GAAE,CAAC,CAAC,IAAI28B,GAAG,oBAAoBC,QAAQA,QAAQ5mB,IAAI,SAAS6mB,GAAG/8B,EAAEC,EAAEC,IAAGA,EAAEqzB,IAAI,EAAErzB,IAAKiG,IAAI,EAAEjG,EAAEwzB,QAAQ,CAAC7N,QAAQ,MAAM,IAAIrkB,EAAEvB,EAAE0H,MAAsD,OAAhDzH,EAAEyzB,SAAS,WAAWqJ,KAAKA,IAAG,EAAGC,GAAGz7B,GAAGk7B,GAAG18B,EAAEC,EAAE,EAASC,CAAC,CACrW,SAASg9B,GAAGl9B,EAAEC,EAAEC,IAAGA,EAAEqzB,IAAI,EAAErzB,IAAKiG,IAAI,EAAE,IAAI3E,EAAExB,EAAEkC,KAAKi7B,yBAAyB,GAAG,oBAAoB37B,EAAE,CAAC,IAAIC,EAAExB,EAAE0H,MAAMzH,EAAEwzB,QAAQ,WAAW,OAAOlyB,EAAEC,EAAE,EAAEvB,EAAEyzB,SAAS,WAAW+I,GAAG18B,EAAEC,EAAE,CAAC,CAAC,IAAIyB,EAAE1B,EAAEgQ,UAA8O,OAApO,OAAOtO,GAAG,oBAAoBA,EAAE07B,oBAAoBl9B,EAAEyzB,SAAS,WAAW+I,GAAG18B,EAAEC,GAAG,oBAAoBuB,IAAI,OAAO67B,GAAGA,GAAG,IAAI98B,IAAI,CAACqB,OAAOy7B,GAAG18B,IAAIiB,OAAO,IAAI1B,EAAED,EAAEiF,MAAMtD,KAAKw7B,kBAAkBn9B,EAAE0H,MAAM,CAAC21B,eAAe,OAAOp9B,EAAEA,EAAE,IAAI,GAAUA,CAAC,CACnb,SAASq9B,GAAGv9B,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEw9B,UAAU,GAAG,OAAOh8B,EAAE,CAACA,EAAExB,EAAEw9B,UAAU,IAAIX,GAAG,IAAIp7B,EAAE,IAAIlB,IAAIiB,EAAEiE,IAAIxF,EAAEwB,EAAE,WAAiB,KAAXA,EAAED,EAAE0F,IAAIjH,MAAgBwB,EAAE,IAAIlB,IAAIiB,EAAEiE,IAAIxF,EAAEwB,IAAIA,EAAE4mB,IAAInoB,KAAKuB,EAAEd,IAAIT,GAAGF,EAAEy9B,GAAG9U,KAAK,KAAK3oB,EAAEC,EAAEC,GAAGD,EAAEmrB,KAAKprB,EAAEA,GAAG,CAAC,SAAS09B,GAAG19B,GAAG,EAAE,CAAC,IAAIC,EAA4E,IAAvEA,EAAE,KAAKD,EAAEmG,OAAsBlG,EAAE,QAApBA,EAAED,EAAE6R,gBAAyB,OAAO5R,EAAE6R,YAAuB7R,EAAE,OAAOD,EAAEA,EAAEA,EAAE0R,MAAM,OAAO,OAAO1R,GAAG,OAAO,IAAI,CAChW,SAAS29B,GAAG39B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,OAAG,KAAY,EAAPzB,EAAEsvB,OAAetvB,IAAIC,EAAED,EAAE2R,OAAO,OAAO3R,EAAE2R,OAAO,IAAIzR,EAAEyR,OAAO,OAAOzR,EAAEyR,QAAQ,MAAM,IAAIzR,EAAEiG,MAAM,OAAOjG,EAAEuR,UAAUvR,EAAEiG,IAAI,KAAIlG,EAAEszB,IAAI,EAAE,IAAKptB,IAAI,EAAEytB,GAAG1zB,EAAED,EAAE,KAAKC,EAAEiyB,OAAO,GAAGnyB,IAAEA,EAAE2R,OAAO,MAAM3R,EAAEmyB,MAAM1wB,EAASzB,EAAC,CAAC,IAAI49B,GAAGn6B,EAAGo6B,kBAAkBzL,IAAG,EAAG,SAAS0L,GAAG99B,EAAEC,EAAEC,EAAEsB,GAAGvB,EAAEgS,MAAM,OAAOjS,EAAEsxB,GAAGrxB,EAAE,KAAKC,EAAEsB,GAAG6vB,GAAGpxB,EAAED,EAAEiS,MAAM/R,EAAEsB,EAAE,CACnV,SAASu8B,GAAG/9B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAGvB,EAAEA,EAAEkG,OAAO,IAAI1E,EAAEzB,EAAE+vB,IAAqC,OAAjCgC,GAAG/xB,EAAEwB,GAAGD,EAAEw0B,GAAGh2B,EAAEC,EAAEC,EAAEsB,EAAEE,EAAED,GAAGvB,EAAEm2B,KAAQ,OAAOr2B,GAAIoyB,IAA2E1D,IAAGxuB,GAAGouB,GAAGruB,GAAGA,EAAE0R,OAAO,EAAEmsB,GAAG99B,EAAEC,EAAEuB,EAAEC,GAAUxB,EAAEgS,QAA7GhS,EAAE8yB,YAAY/yB,EAAE+yB,YAAY9yB,EAAE0R,QAAQ,KAAK3R,EAAEmyB,QAAQ1wB,EAAEu8B,GAAGh+B,EAAEC,EAAEwB,GAAoD,CACzN,SAASw8B,GAAGj+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAG,OAAOzB,EAAE,CAAC,IAAI0B,EAAExB,EAAEgC,KAAK,MAAG,oBAAoBR,GAAIw8B,GAAGx8B,SAAI,IAASA,EAAEo5B,cAAc,OAAO56B,EAAEi+B,cAAS,IAASj+B,EAAE46B,eAAoD96B,EAAE4wB,GAAG1wB,EAAEgC,KAAK,KAAKV,EAAEvB,EAAEA,EAAEqvB,KAAK7tB,IAAKuuB,IAAI/vB,EAAE+vB,IAAIhwB,EAAE0R,OAAOzR,EAASA,EAAEgS,MAAMjS,IAArGC,EAAEkG,IAAI,GAAGlG,EAAEiC,KAAKR,EAAE08B,GAAGp+B,EAAEC,EAAEyB,EAAEF,EAAEC,GAAyE,CAAW,GAAVC,EAAE1B,EAAEiS,MAAS,KAAKjS,EAAEmyB,MAAM1wB,GAAG,CAAC,IAAIE,EAAED,EAAEguB,cAA0C,IAAhBxvB,EAAE,QAAdA,EAAEA,EAAEi+B,SAAmBj+B,EAAEsjB,IAAQ7hB,EAAEH,IAAIxB,EAAEgwB,MAAM/vB,EAAE+vB,IAAI,OAAOgO,GAAGh+B,EAAEC,EAAEwB,EAAE,CAA6C,OAA5CxB,EAAE0R,OAAO,GAAE3R,EAAEywB,GAAG/uB,EAAEF,IAAKwuB,IAAI/vB,EAAE+vB,IAAIhwB,EAAE0R,OAAOzR,EAASA,EAAEgS,MAAMjS,CAAC,CAC1b,SAASo+B,GAAGp+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAG,OAAOzB,EAAE,CAAC,IAAI0B,EAAE1B,EAAE0vB,cAAc,GAAGlM,GAAG9hB,EAAEF,IAAIxB,EAAEgwB,MAAM/vB,EAAE+vB,IAAI,IAAGoC,IAAG,EAAGnyB,EAAEgvB,aAAaztB,EAAEE,EAAE,KAAK1B,EAAEmyB,MAAM1wB,GAAsC,OAAOxB,EAAEkyB,MAAMnyB,EAAEmyB,MAAM6L,GAAGh+B,EAAEC,EAAEwB,GAAjE,KAAa,OAARzB,EAAE2R,SAAgBygB,IAAG,EAAyC,EAAC,OAAOiM,GAAGr+B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAE,CACxN,SAAS68B,GAAGt+B,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEgvB,aAAaxtB,EAAED,EAAE8H,SAAS5H,EAAE,OAAO1B,EAAEA,EAAE6R,cAAc,KAAK,GAAG,WAAWrQ,EAAE8tB,KAAK,GAAG,KAAY,EAAPrvB,EAAEqvB,MAAQrvB,EAAE4R,cAAc,CAAC0sB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAMrS,GAAEsS,GAAGC,IAAIA,IAAIz+B,MAAM,CAAC,GAAG,KAAO,WAAFA,GAAc,OAAOF,EAAE,OAAO0B,EAAEA,EAAE68B,UAAUr+B,EAAEA,EAAED,EAAEkyB,MAAMlyB,EAAE8xB,WAAW,WAAW9xB,EAAE4R,cAAc,CAAC0sB,UAAUv+B,EAAEw+B,UAAU,KAAKC,YAAY,MAAMx+B,EAAE8yB,YAAY,KAAK3G,GAAEsS,GAAGC,IAAIA,IAAI3+B,EAAE,KAAKC,EAAE4R,cAAc,CAAC0sB,UAAU,EAAEC,UAAU,KAAKC,YAAY,MAAMj9B,EAAE,OAAOE,EAAEA,EAAE68B,UAAUr+B,EAAEksB,GAAEsS,GAAGC,IAAIA,IAAIn9B,CAAC,MAAM,OACtfE,GAAGF,EAAEE,EAAE68B,UAAUr+B,EAAED,EAAE4R,cAAc,MAAMrQ,EAAEtB,EAAEksB,GAAEsS,GAAGC,IAAIA,IAAIn9B,EAAc,OAAZs8B,GAAG99B,EAAEC,EAAEwB,EAAEvB,GAAUD,EAAEgS,KAAK,CAAC,SAAS2sB,GAAG5+B,EAAEC,GAAG,IAAIC,EAAED,EAAE+vB,KAAO,OAAOhwB,GAAG,OAAOE,GAAG,OAAOF,GAAGA,EAAEgwB,MAAM9vB,KAAED,EAAE0R,OAAO,IAAI1R,EAAE0R,OAAO,QAAO,CAAC,SAAS0sB,GAAGr+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAEmrB,GAAG3sB,GAAGssB,GAAGF,GAAEna,QAAmD,OAA3CzQ,EAAE+qB,GAAGxsB,EAAEyB,GAAGswB,GAAG/xB,EAAEwB,GAAGvB,EAAE81B,GAAGh2B,EAAEC,EAAEC,EAAEsB,EAAEE,EAAED,GAAGD,EAAE60B,KAAQ,OAAOr2B,GAAIoyB,IAA2E1D,IAAGltB,GAAG8sB,GAAGruB,GAAGA,EAAE0R,OAAO,EAAEmsB,GAAG99B,EAAEC,EAAEC,EAAEuB,GAAUxB,EAAEgS,QAA7GhS,EAAE8yB,YAAY/yB,EAAE+yB,YAAY9yB,EAAE0R,QAAQ,KAAK3R,EAAEmyB,QAAQ1wB,EAAEu8B,GAAGh+B,EAAEC,EAAEwB,GAAoD,CACla,SAASo9B,GAAG7+B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAGorB,GAAG3sB,GAAG,CAAC,IAAIwB,GAAE,EAAGyrB,GAAGltB,EAAE,MAAMyB,GAAE,EAAW,GAARswB,GAAG/xB,EAAEwB,GAAM,OAAOxB,EAAE+P,UAAU8uB,GAAG9+B,EAAEC,GAAGw7B,GAAGx7B,EAAEC,EAAEsB,GAAGw6B,GAAG/7B,EAAEC,EAAEsB,EAAEC,GAAGD,GAAE,OAAQ,GAAG,OAAOxB,EAAE,CAAC,IAAI2B,EAAE1B,EAAE+P,UAAUnK,EAAE5F,EAAEyvB,cAAc/tB,EAAEgvB,MAAM9qB,EAAE,IAAIC,EAAEnE,EAAE2wB,QAAQ1sB,EAAE1F,EAAEw7B,YAAY,kBAAkB91B,GAAG,OAAOA,EAAEA,EAAEysB,GAAGzsB,GAAyBA,EAAE6mB,GAAGxsB,EAA1B2F,EAAEinB,GAAG3sB,GAAGssB,GAAGF,GAAEna,SAAmB,IAAInB,EAAE9Q,EAAE+7B,yBAAyBjL,EAAE,oBAAoBhgB,GAAG,oBAAoBrP,EAAEu6B,wBAAwBlL,GAAG,oBAAoBrvB,EAAEo6B,kCAAkC,oBAAoBp6B,EAAEm6B,4BAC1dj2B,IAAIrE,GAAGsE,IAAIF,IAAIi2B,GAAG57B,EAAE0B,EAAEH,EAAEoE,GAAGitB,IAAG,EAAG,IAAI5B,EAAEhxB,EAAE4R,cAAclQ,EAAEg6B,MAAM1K,EAAE+C,GAAG/zB,EAAEuB,EAAEG,EAAEF,GAAGqE,EAAE7F,EAAE4R,cAAchM,IAAIrE,GAAGyvB,IAAInrB,GAAGymB,GAAGpa,SAAS0gB,IAAI,oBAAoB7hB,IAAI+pB,GAAG96B,EAAEC,EAAE8Q,EAAExP,GAAGsE,EAAE7F,EAAE4R,gBAAgBhM,EAAEgtB,IAAIyI,GAAGr7B,EAAEC,EAAE2F,EAAErE,EAAEyvB,EAAEnrB,EAAEF,KAAKorB,GAAG,oBAAoBrvB,EAAEw6B,2BAA2B,oBAAoBx6B,EAAEy6B,qBAAqB,oBAAoBz6B,EAAEy6B,oBAAoBz6B,EAAEy6B,qBAAqB,oBAAoBz6B,EAAEw6B,2BAA2Bx6B,EAAEw6B,6BAA6B,oBAAoBx6B,EAAE06B,oBAAoBp8B,EAAE0R,OAAO,WAClf,oBAAoBhQ,EAAE06B,oBAAoBp8B,EAAE0R,OAAO,SAAS1R,EAAEyvB,cAAcluB,EAAEvB,EAAE4R,cAAc/L,GAAGnE,EAAEgvB,MAAMnvB,EAAEG,EAAEg6B,MAAM71B,EAAEnE,EAAE2wB,QAAQ1sB,EAAEpE,EAAEqE,IAAI,oBAAoBlE,EAAE06B,oBAAoBp8B,EAAE0R,OAAO,SAASnQ,GAAE,EAAG,KAAK,CAACG,EAAE1B,EAAE+P,UAAUsjB,GAAGtzB,EAAEC,GAAG4F,EAAE5F,EAAEyvB,cAAc9pB,EAAE3F,EAAEiC,OAAOjC,EAAE6uB,YAAYjpB,EAAEg1B,GAAG56B,EAAEiC,KAAK2D,GAAGlE,EAAEgvB,MAAM/qB,EAAEorB,EAAE/wB,EAAEgvB,aAAagC,EAAEtvB,EAAE2wB,QAAwB,kBAAhBxsB,EAAE5F,EAAEw7B,cAAiC,OAAO51B,EAAEA,EAAEusB,GAAGvsB,GAAyBA,EAAE2mB,GAAGxsB,EAA1B6F,EAAE+mB,GAAG3sB,GAAGssB,GAAGF,GAAEna,SAAmB,IAAI+e,EAAEhxB,EAAE+7B,0BAA0BjrB,EAAE,oBAAoBkgB,GAAG,oBAAoBvvB,EAAEu6B,0BAC9e,oBAAoBv6B,EAAEo6B,kCAAkC,oBAAoBp6B,EAAEm6B,4BAA4Bj2B,IAAImrB,GAAGC,IAAInrB,IAAI+1B,GAAG57B,EAAE0B,EAAEH,EAAEsE,GAAG+sB,IAAG,EAAG5B,EAAEhxB,EAAE4R,cAAclQ,EAAEg6B,MAAM1K,EAAE+C,GAAG/zB,EAAEuB,EAAEG,EAAEF,GAAG,IAAIqnB,EAAE7oB,EAAE4R,cAAchM,IAAImrB,GAAGC,IAAInI,GAAGyD,GAAGpa,SAAS0gB,IAAI,oBAAoB3B,IAAI6J,GAAG96B,EAAEC,EAAEgxB,EAAE1vB,GAAGsnB,EAAE7oB,EAAE4R,gBAAgBjM,EAAEitB,IAAIyI,GAAGr7B,EAAEC,EAAE0F,EAAEpE,EAAEyvB,EAAEnI,EAAEhjB,KAAI,IAAKkL,GAAG,oBAAoBrP,EAAEo9B,4BAA4B,oBAAoBp9B,EAAEq9B,sBAAsB,oBAAoBr9B,EAAEq9B,qBAAqBr9B,EAAEq9B,oBAAoBx9B,EAAEsnB,EAAEhjB,GAAG,oBAAoBnE,EAAEo9B,4BAC5fp9B,EAAEo9B,2BAA2Bv9B,EAAEsnB,EAAEhjB,IAAI,oBAAoBnE,EAAEs9B,qBAAqBh/B,EAAE0R,OAAO,GAAG,oBAAoBhQ,EAAEu6B,0BAA0Bj8B,EAAE0R,OAAO,QAAQ,oBAAoBhQ,EAAEs9B,oBAAoBp5B,IAAI7F,EAAE0vB,eAAeuB,IAAIjxB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,GAAG,oBAAoBhQ,EAAEu6B,yBAAyBr2B,IAAI7F,EAAE0vB,eAAeuB,IAAIjxB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,MAAM1R,EAAEyvB,cAAcluB,EAAEvB,EAAE4R,cAAciX,GAAGnnB,EAAEgvB,MAAMnvB,EAAEG,EAAEg6B,MAAM7S,EAAEnnB,EAAE2wB,QAAQxsB,EAAEtE,EAAEoE,IAAI,oBAAoBjE,EAAEs9B,oBAAoBp5B,IAAI7F,EAAE0vB,eAAeuB,IACjfjxB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,GAAG,oBAAoBhQ,EAAEu6B,yBAAyBr2B,IAAI7F,EAAE0vB,eAAeuB,IAAIjxB,EAAE6R,gBAAgB5R,EAAE0R,OAAO,MAAMnQ,GAAE,EAAG,CAAC,OAAO09B,GAAGl/B,EAAEC,EAAEC,EAAEsB,EAAEE,EAAED,EAAE,CACnK,SAASy9B,GAAGl/B,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAGk9B,GAAG5+B,EAAEC,GAAG,IAAI0B,EAAE,KAAa,IAAR1B,EAAE0R,OAAW,IAAInQ,IAAIG,EAAE,OAAOF,GAAG4rB,GAAGptB,EAAEC,GAAE,GAAI89B,GAAGh+B,EAAEC,EAAEyB,GAAGF,EAAEvB,EAAE+P,UAAU4tB,GAAGzrB,QAAQlS,EAAE,IAAI4F,EAAElE,GAAG,oBAAoBzB,EAAEi9B,yBAAyB,KAAK37B,EAAE4E,SAAwI,OAA/HnG,EAAE0R,OAAO,EAAE,OAAO3R,GAAG2B,GAAG1B,EAAEgS,MAAMof,GAAGpxB,EAAED,EAAEiS,MAAM,KAAKvQ,GAAGzB,EAAEgS,MAAMof,GAAGpxB,EAAE,KAAK4F,EAAEnE,IAAIo8B,GAAG99B,EAAEC,EAAE4F,EAAEnE,GAAGzB,EAAE4R,cAAcrQ,EAAEm6B,MAAMl6B,GAAG4rB,GAAGptB,EAAEC,GAAE,GAAWD,EAAEgS,KAAK,CAAC,SAASktB,GAAGn/B,GAAG,IAAIC,EAAED,EAAEgQ,UAAU/P,EAAEm/B,eAAepS,GAAGhtB,EAAEC,EAAEm/B,eAAen/B,EAAEm/B,iBAAiBn/B,EAAEqyB,SAASryB,EAAEqyB,SAAStF,GAAGhtB,EAAEC,EAAEqyB,SAAQ,GAAIkC,GAAGx0B,EAAEC,EAAEkX,cAAc,CAC5e,SAASkoB,GAAGr/B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAuC,OAApCmuB,KAAKC,GAAGpuB,GAAGxB,EAAE0R,OAAO,IAAImsB,GAAG99B,EAAEC,EAAEC,EAAEsB,GAAUvB,EAAEgS,KAAK,CAAC,IAaqLqtB,GAAGC,GAAGC,GAAGC,GAb1LC,GAAG,CAAC5tB,WAAW,KAAKqd,YAAY,KAAKC,UAAU,GAAG,SAASuQ,GAAG3/B,GAAG,MAAM,CAACu+B,UAAUv+B,EAAEw+B,UAAU,KAAKC,YAAY,KAAK,CAClM,SAASmB,GAAG5/B,EAAEC,EAAEC,GAAG,IAA0D2F,EAAtDrE,EAAEvB,EAAEgvB,aAAaxtB,EAAEozB,GAAE1iB,QAAQzQ,GAAE,EAAGC,EAAE,KAAa,IAAR1B,EAAE0R,OAAqJ,IAAvI9L,EAAElE,KAAKkE,GAAE,OAAO7F,GAAG,OAAOA,EAAE6R,gBAAiB,KAAO,EAAFpQ,IAASoE,GAAEnE,GAAE,EAAGzB,EAAE0R,QAAQ,KAAY,OAAO3R,GAAG,OAAOA,EAAE6R,gBAAcpQ,GAAG,GAAE2qB,GAAEyI,GAAI,EAAFpzB,GAAQ,OAAOzB,EAA2B,OAAxBuvB,GAAGtvB,GAAwB,QAArBD,EAAEC,EAAE4R,gBAA2C,QAAf7R,EAAEA,EAAE8R,aAA4B,KAAY,EAAP7R,EAAEqvB,MAAQrvB,EAAEkyB,MAAM,EAAE,OAAOnyB,EAAE6c,KAAK5c,EAAEkyB,MAAM,EAAElyB,EAAEkyB,MAAM,WAAW,OAAKxwB,EAAEH,EAAE8H,SAAStJ,EAAEwB,EAAEq+B,SAAgBn+B,GAAGF,EAAEvB,EAAEqvB,KAAK5tB,EAAEzB,EAAEgS,MAAMtQ,EAAE,CAAC2tB,KAAK,SAAShmB,SAAS3H,GAAG,KAAO,EAAFH,IAAM,OAAOE,GAAGA,EAAEqwB,WAAW,EAAErwB,EAAEutB,aAC7ettB,GAAGD,EAAEo+B,GAAGn+B,EAAEH,EAAE,EAAE,MAAMxB,EAAE+wB,GAAG/wB,EAAEwB,EAAEtB,EAAE,MAAMwB,EAAEgQ,OAAOzR,EAAED,EAAE0R,OAAOzR,EAAEyB,EAAEwQ,QAAQlS,EAAEC,EAAEgS,MAAMvQ,EAAEzB,EAAEgS,MAAMJ,cAAc8tB,GAAGz/B,GAAGD,EAAE4R,cAAc6tB,GAAG1/B,GAAG+/B,GAAG9/B,EAAE0B,IAAqB,GAAG,QAArBF,EAAEzB,EAAE6R,gBAA2C,QAAfhM,EAAEpE,EAAEqQ,YAAqB,OAGpM,SAAY9R,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,GAAG,GAAGzB,EAAG,OAAW,IAARD,EAAE0R,OAAiB1R,EAAE0R,QAAQ,IAAwBquB,GAAGhgC,EAAEC,EAAE0B,EAA3BH,EAAEi7B,GAAGx3B,MAAMlF,EAAE,SAAsB,OAAOE,EAAE4R,eAAqB5R,EAAEgS,MAAMjS,EAAEiS,MAAMhS,EAAE0R,OAAO,IAAI,OAAKjQ,EAAEF,EAAEq+B,SAASp+B,EAAExB,EAAEqvB,KAAK9tB,EAAEs+B,GAAG,CAACxQ,KAAK,UAAUhmB,SAAS9H,EAAE8H,UAAU7H,EAAE,EAAE,OAAMC,EAAEqvB,GAAGrvB,EAAED,EAAEE,EAAE,OAAQgQ,OAAO,EAAEnQ,EAAEkQ,OAAOzR,EAAEyB,EAAEgQ,OAAOzR,EAAEuB,EAAE0Q,QAAQxQ,EAAEzB,EAAEgS,MAAMzQ,EAAE,KAAY,EAAPvB,EAAEqvB,OAAS+B,GAAGpxB,EAAED,EAAEiS,MAAM,KAAKtQ,GAAG1B,EAAEgS,MAAMJ,cAAc8tB,GAAGh+B,GAAG1B,EAAE4R,cAAc6tB,GAAUh+B,GAAE,GAAG,KAAY,EAAPzB,EAAEqvB,MAAQ,OAAO0Q,GAAGhgC,EAAEC,EAAE0B,EAAE,MAAM,GAAG,OAAOF,EAAEob,KAAK,CAChd,GADidrb,EAAEC,EAAEoiB,aAAapiB,EAAEoiB,YAAYoc,QAC3e,IAAIp6B,EAAErE,EAAE0+B,KAA0C,OAArC1+B,EAAEqE,EAA0Cm6B,GAAGhgC,EAAEC,EAAE0B,EAA/BH,EAAEi7B,GAAlB/6B,EAAEuD,MAAMlF,EAAE,MAAayB,OAAE,GAA0B,CAAwB,GAAvBqE,EAAE,KAAKlE,EAAE3B,EAAE+xB,YAAeK,IAAIvsB,EAAE,CAAK,GAAG,QAAPrE,EAAEk2B,IAAc,CAAC,OAAO/1B,GAAGA,GAAG,KAAK,EAAEF,EAAE,EAAE,MAAM,KAAK,GAAGA,EAAE,EAAE,MAAM,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAASA,EAAE,GAAG,MAAM,KAAK,UAAUA,EAAE,UAAU,MAAM,QAAQA,EAAE,EAChd,KADkdA,EAAE,KAAKA,GAAGD,EAAEkT,eAAe/S,IAAI,EAAEF,IAC5eA,IAAIC,EAAE0tB,YAAY1tB,EAAE0tB,UAAU3tB,EAAEmxB,GAAG5yB,EAAEyB,GAAGu2B,GAAGx2B,EAAExB,EAAEyB,GAAG,GAAG,CAA0B,OAAzB0+B,KAAgCH,GAAGhgC,EAAEC,EAAE0B,EAAlCH,EAAEi7B,GAAGx3B,MAAMlF,EAAE,OAAyB,CAAC,MAAG,OAAO0B,EAAEob,MAAY5c,EAAE0R,OAAO,IAAI1R,EAAEgS,MAAMjS,EAAEiS,MAAMhS,EAAEmgC,GAAGzX,KAAK,KAAK3oB,GAAGyB,EAAE4+B,YAAYpgC,EAAE,OAAKD,EAAE0B,EAAEytB,YAAYV,GAAGjD,GAAG/pB,EAAEoiB,aAAa2K,GAAGvuB,EAAEyuB,IAAE,EAAGC,GAAG,KAAK,OAAO3uB,IAAI+tB,GAAGC,MAAME,GAAGH,GAAGC,MAAMG,GAAGJ,GAAGC,MAAMC,GAAGC,GAAGluB,EAAEoY,GAAG+V,GAAGnuB,EAAEkvB,SAASjB,GAAGhuB,GAAGA,EAAE8/B,GAAG9/B,EAAEuB,EAAE8H,UAAUrJ,EAAE0R,OAAO,KAAY1R,EAAC,CALrKqgC,CAAGtgC,EAAEC,EAAE0B,EAAEH,EAAEqE,EAAEpE,EAAEvB,GAAG,GAAGwB,EAAE,CAACA,EAAEF,EAAEq+B,SAASl+B,EAAE1B,EAAEqvB,KAAezpB,GAAVpE,EAAEzB,EAAEiS,OAAUC,QAAQ,IAAIpM,EAAE,CAACwpB,KAAK,SAAShmB,SAAS9H,EAAE8H,UAChF,OAD0F,KAAO,EAAF3H,IAAM1B,EAAEgS,QAAQxQ,IAAGD,EAAEvB,EAAEgS,OAAQ8f,WAAW,EAAEvwB,EAAEytB,aAAanpB,EAAE7F,EAAE8uB,UAAU,OAAOvtB,EAAEivB,GAAGhvB,EAAEqE,IAAKy6B,aAA4B,SAAf9+B,EAAE8+B,aAAuB,OAAO16B,EAAEnE,EAAE+uB,GAAG5qB,EAAEnE,IAAIA,EAAEqvB,GAAGrvB,EAAEC,EAAEzB,EAAE,OAAQyR,OAAO,EAAGjQ,EAAEgQ,OACnfzR,EAAEuB,EAAEkQ,OAAOzR,EAAEuB,EAAE0Q,QAAQxQ,EAAEzB,EAAEgS,MAAMzQ,EAAEA,EAAEE,EAAEA,EAAEzB,EAAEgS,MAA8BtQ,EAAE,QAA1BA,EAAE3B,EAAEiS,MAAMJ,eAAyB8tB,GAAGz/B,GAAG,CAACq+B,UAAU58B,EAAE48B,UAAUr+B,EAAEs+B,UAAU,KAAKC,YAAY98B,EAAE88B,aAAa/8B,EAAEmQ,cAAclQ,EAAED,EAAEqwB,WAAW/xB,EAAE+xB,YAAY7xB,EAAED,EAAE4R,cAAc6tB,GAAUl+B,CAAC,CAAoO,OAAzNxB,GAAV0B,EAAE1B,EAAEiS,OAAUC,QAAQ1Q,EAAEivB,GAAG/uB,EAAE,CAAC4tB,KAAK,UAAUhmB,SAAS9H,EAAE8H,WAAW,KAAY,EAAPrJ,EAAEqvB,QAAU9tB,EAAE2wB,MAAMjyB,GAAGsB,EAAEkQ,OAAOzR,EAAEuB,EAAE0Q,QAAQ,KAAK,OAAOlS,IAAkB,QAAdE,EAAED,EAAE8uB,YAAoB9uB,EAAE8uB,UAAU,CAAC/uB,GAAGC,EAAE0R,OAAO,IAAIzR,EAAEiQ,KAAKnQ,IAAIC,EAAEgS,MAAMzQ,EAAEvB,EAAE4R,cAAc,KAAYrQ,CAAC,CACnd,SAASu+B,GAAG//B,EAAEC,GAA8D,OAA3DA,EAAE6/B,GAAG,CAACxQ,KAAK,UAAUhmB,SAASrJ,GAAGD,EAAEsvB,KAAK,EAAE,OAAQ5d,OAAO1R,EAASA,EAAEiS,MAAMhS,CAAC,CAAC,SAAS+/B,GAAGhgC,EAAEC,EAAEC,EAAEsB,GAAwG,OAArG,OAAOA,GAAGquB,GAAGruB,GAAG6vB,GAAGpxB,EAAED,EAAEiS,MAAM,KAAK/R,IAAGF,EAAE+/B,GAAG9/B,EAAEA,EAAEgvB,aAAa3lB,WAAYqI,OAAO,EAAE1R,EAAE4R,cAAc,KAAY7R,CAAC,CAGkJ,SAASwgC,GAAGxgC,EAAEC,EAAEC,GAAGF,EAAEmyB,OAAOlyB,EAAE,IAAIuB,EAAExB,EAAEyR,UAAU,OAAOjQ,IAAIA,EAAE2wB,OAAOlyB,GAAG6xB,GAAG9xB,EAAE0R,OAAOzR,EAAEC,EAAE,CACxc,SAASugC,GAAGzgC,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAE1B,EAAE6R,cAAc,OAAOnQ,EAAE1B,EAAE6R,cAAc,CAAC6uB,YAAYzgC,EAAE0gC,UAAU,KAAKC,mBAAmB,EAAEC,KAAKr/B,EAAEs/B,KAAK5gC,EAAE6gC,SAASt/B,IAAIC,EAAEg/B,YAAYzgC,EAAEyB,EAAEi/B,UAAU,KAAKj/B,EAAEk/B,mBAAmB,EAAEl/B,EAAEm/B,KAAKr/B,EAAEE,EAAEo/B,KAAK5gC,EAAEwB,EAAEq/B,SAASt/B,EAAE,CAC3O,SAASu/B,GAAGhhC,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEgvB,aAAaxtB,EAAED,EAAEuzB,YAAYrzB,EAAEF,EAAEs/B,KAAsC,GAAjChD,GAAG99B,EAAEC,EAAEuB,EAAE8H,SAASpJ,GAAkB,KAAO,GAAtBsB,EAAEqzB,GAAE1iB,UAAqB3Q,EAAI,EAAFA,EAAI,EAAEvB,EAAE0R,OAAO,QAAQ,CAAC,GAAG,OAAO3R,GAAG,KAAa,IAARA,EAAE2R,OAAW3R,EAAE,IAAIA,EAAEC,EAAEgS,MAAM,OAAOjS,GAAG,CAAC,GAAG,KAAKA,EAAEmG,IAAI,OAAOnG,EAAE6R,eAAe2uB,GAAGxgC,EAAEE,EAAED,QAAQ,GAAG,KAAKD,EAAEmG,IAAIq6B,GAAGxgC,EAAEE,EAAED,QAAQ,GAAG,OAAOD,EAAEiS,MAAM,CAACjS,EAAEiS,MAAMP,OAAO1R,EAAEA,EAAEA,EAAEiS,MAAM,QAAQ,CAAC,GAAGjS,IAAIC,EAAE,MAAMD,EAAE,KAAK,OAAOA,EAAEkS,SAAS,CAAC,GAAG,OAAOlS,EAAE0R,QAAQ1R,EAAE0R,SAASzR,EAAE,MAAMD,EAAEA,EAAEA,EAAE0R,MAAM,CAAC1R,EAAEkS,QAAQR,OAAO1R,EAAE0R,OAAO1R,EAAEA,EAAEkS,OAAO,CAAC1Q,GAAG,CAAC,CAAQ,GAAP4qB,GAAEyI,GAAErzB,GAAM,KAAY,EAAPvB,EAAEqvB,MAAQrvB,EAAE4R,cAC/e,UAAU,OAAOpQ,GAAG,IAAK,WAAqB,IAAVvB,EAAED,EAAEgS,MAAUxQ,EAAE,KAAK,OAAOvB,GAAiB,QAAdF,EAAEE,EAAEuR,YAAoB,OAAOqjB,GAAG90B,KAAKyB,EAAEvB,GAAGA,EAAEA,EAAEgS,QAAY,QAAJhS,EAAEuB,IAAYA,EAAExB,EAAEgS,MAAMhS,EAAEgS,MAAM,OAAOxQ,EAAEvB,EAAEgS,QAAQhS,EAAEgS,QAAQ,MAAMuuB,GAAGxgC,GAAE,EAAGwB,EAAEvB,EAAEwB,GAAG,MAAM,IAAK,YAA6B,IAAjBxB,EAAE,KAAKuB,EAAExB,EAAEgS,MAAUhS,EAAEgS,MAAM,KAAK,OAAOxQ,GAAG,CAAe,GAAG,QAAjBzB,EAAEyB,EAAEgQ,YAAuB,OAAOqjB,GAAG90B,GAAG,CAACC,EAAEgS,MAAMxQ,EAAE,KAAK,CAACzB,EAAEyB,EAAEyQ,QAAQzQ,EAAEyQ,QAAQhS,EAAEA,EAAEuB,EAAEA,EAAEzB,CAAC,CAACygC,GAAGxgC,GAAE,EAAGC,EAAE,KAAKwB,GAAG,MAAM,IAAK,WAAW++B,GAAGxgC,GAAE,EAAG,KAAK,UAAK,GAAQ,MAAM,QAAQA,EAAE4R,cAAc,KAAK,OAAO5R,EAAEgS,KAAK,CAC7d,SAAS6sB,GAAG9+B,EAAEC,GAAG,KAAY,EAAPA,EAAEqvB,OAAS,OAAOtvB,IAAIA,EAAEyR,UAAU,KAAKxR,EAAEwR,UAAU,KAAKxR,EAAE0R,OAAO,EAAE,CAAC,SAASqsB,GAAGh+B,EAAEC,EAAEC,GAAyD,GAAtD,OAAOF,IAAIC,EAAEgyB,aAAajyB,EAAEiyB,cAAcgC,IAAIh0B,EAAEkyB,MAAS,KAAKjyB,EAAED,EAAE8xB,YAAY,OAAO,KAAK,GAAG,OAAO/xB,GAAGC,EAAEgS,QAAQjS,EAAEiS,MAAM,MAAMhN,MAAMlF,EAAE,MAAM,GAAG,OAAOE,EAAEgS,MAAM,CAA4C,IAAjC/R,EAAEuwB,GAAZzwB,EAAEC,EAAEgS,MAAajS,EAAEivB,cAAchvB,EAAEgS,MAAM/R,EAAMA,EAAEwR,OAAOzR,EAAE,OAAOD,EAAEkS,SAASlS,EAAEA,EAAEkS,SAAQhS,EAAEA,EAAEgS,QAAQue,GAAGzwB,EAAEA,EAAEivB,eAAgBvd,OAAOzR,EAAEC,EAAEgS,QAAQ,IAAI,CAAC,OAAOjS,EAAEgS,KAAK,CAO9a,SAASgvB,GAAGjhC,EAAEC,GAAG,IAAIyuB,GAAE,OAAO1uB,EAAE+gC,UAAU,IAAK,SAAS9gC,EAAED,EAAE8gC,KAAK,IAAI,IAAI5gC,EAAE,KAAK,OAAOD,GAAG,OAAOA,EAAEwR,YAAYvR,EAAED,GAAGA,EAAEA,EAAEiS,QAAQ,OAAOhS,EAAEF,EAAE8gC,KAAK,KAAK5gC,EAAEgS,QAAQ,KAAK,MAAM,IAAK,YAAYhS,EAAEF,EAAE8gC,KAAK,IAAI,IAAIt/B,EAAE,KAAK,OAAOtB,GAAG,OAAOA,EAAEuR,YAAYjQ,EAAEtB,GAAGA,EAAEA,EAAEgS,QAAQ,OAAO1Q,EAAEvB,GAAG,OAAOD,EAAE8gC,KAAK9gC,EAAE8gC,KAAK,KAAK9gC,EAAE8gC,KAAK5uB,QAAQ,KAAK1Q,EAAE0Q,QAAQ,KAAK,CAC5U,SAASgvB,GAAElhC,GAAG,IAAIC,EAAE,OAAOD,EAAEyR,WAAWzR,EAAEyR,UAAUQ,QAAQjS,EAAEiS,MAAM/R,EAAE,EAAEsB,EAAE,EAAE,GAAGvB,EAAE,IAAI,IAAIwB,EAAEzB,EAAEiS,MAAM,OAAOxQ,GAAGvB,GAAGuB,EAAE0wB,MAAM1wB,EAAEswB,WAAWvwB,GAAkB,SAAfC,EAAE8+B,aAAsB/+B,GAAW,SAARC,EAAEkQ,MAAelQ,EAAEiQ,OAAO1R,EAAEyB,EAAEA,EAAEyQ,aAAa,IAAIzQ,EAAEzB,EAAEiS,MAAM,OAAOxQ,GAAGvB,GAAGuB,EAAE0wB,MAAM1wB,EAAEswB,WAAWvwB,GAAGC,EAAE8+B,aAAa/+B,GAAGC,EAAEkQ,MAAMlQ,EAAEiQ,OAAO1R,EAAEyB,EAAEA,EAAEyQ,QAAyC,OAAjClS,EAAEugC,cAAc/+B,EAAExB,EAAE+xB,WAAW7xB,EAASD,CAAC,CAC7V,SAASkhC,GAAGnhC,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAEgvB,aAAmB,OAANV,GAAGtuB,GAAUA,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,OAAO+6B,GAAEjhC,GAAG,KAAK,KAAK,EAUtD,KAAK,GAAG,OAAO4sB,GAAG5sB,EAAEiC,OAAO6qB,KAAKmU,GAAEjhC,GAAG,KAVqD,KAAK,EAA2Q,OAAzQuB,EAAEvB,EAAE+P,UAAU0kB,KAAKvI,GAAEI,IAAIJ,GAAEG,IAAG2I,KAAKzzB,EAAE49B,iBAAiB59B,EAAE8wB,QAAQ9wB,EAAE49B,eAAe59B,EAAE49B,eAAe,MAAS,OAAOp/B,GAAG,OAAOA,EAAEiS,QAAMwd,GAAGxvB,GAAGA,EAAE0R,OAAO,EAAE,OAAO3R,GAAGA,EAAE6R,cAAcqF,cAAc,KAAa,IAARjX,EAAE0R,SAAa1R,EAAE0R,OAAO,KAAK,OAAOgd,KAAKyS,GAAGzS,IAAIA,GAAG,QAAO4Q,GAAGv/B,EAAEC,GAAGihC,GAAEjhC,GAAU,KAAK,KAAK,EAAE20B,GAAG30B,GAAG,IAAIwB,EAAE8yB,GAAGD,GAAGniB,SAC7e,GAATjS,EAAED,EAAEiC,KAAQ,OAAOlC,GAAG,MAAMC,EAAE+P,UAAUwvB,GAAGx/B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAGzB,EAAEgwB,MAAM/vB,EAAE+vB,MAAM/vB,EAAE0R,OAAO,IAAI1R,EAAE0R,OAAO,aAAa,CAAC,IAAInQ,EAAE,CAAC,GAAG,OAAOvB,EAAE+P,UAAU,MAAM/K,MAAMlF,EAAE,MAAW,OAALmhC,GAAEjhC,GAAU,IAAI,CAAkB,GAAjBD,EAAEu0B,GAAGH,GAAGjiB,SAAYsd,GAAGxvB,GAAG,CAACuB,EAAEvB,EAAE+P,UAAU9P,EAAED,EAAEiC,KAAK,IAAIR,EAAEzB,EAAEyvB,cAA+C,OAAjCluB,EAAEoqB,IAAI3rB,EAAEuB,EAAEqqB,IAAInqB,EAAE1B,EAAE,KAAY,EAAPC,EAAEqvB,MAAepvB,GAAG,IAAK,SAASioB,GAAE,SAAS3mB,GAAG2mB,GAAE,QAAQ3mB,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQ2mB,GAAE,OAAO3mB,GAAG,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIC,EAAE,EAAEA,EAAEmmB,GAAGxnB,OAAOqB,IAAI0mB,GAAEP,GAAGnmB,GAAGD,GAAG,MAAM,IAAK,SAAS2mB,GAAE,QAAQ3mB,GAAG,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAO2mB,GAAE,QACnhB3mB,GAAG2mB,GAAE,OAAO3mB,GAAG,MAAM,IAAK,UAAU2mB,GAAE,SAAS3mB,GAAG,MAAM,IAAK,QAAQ4G,EAAG5G,EAAEE,GAAGymB,GAAE,UAAU3mB,GAAG,MAAM,IAAK,SAASA,EAAE0G,cAAc,CAACm5B,cAAc3/B,EAAE4/B,UAAUnZ,GAAE,UAAU3mB,GAAG,MAAM,IAAK,WAAW+H,GAAG/H,EAAEE,GAAGymB,GAAE,UAAU3mB,GAAkB,IAAI,IAAIG,KAAvBuN,GAAGhP,EAAEwB,GAAGD,EAAE,KAAkBC,EAAE,GAAGA,EAAEP,eAAeQ,GAAG,CAAC,IAAIkE,EAAEnE,EAAEC,GAAG,aAAaA,EAAE,kBAAkBkE,EAAErE,EAAEkI,cAAc7D,KAAI,IAAKnE,EAAE6/B,0BAA0BlX,GAAG7oB,EAAEkI,YAAY7D,EAAE7F,GAAGyB,EAAE,CAAC,WAAWoE,IAAI,kBAAkBA,GAAGrE,EAAEkI,cAAc,GAAG7D,KAAI,IAAKnE,EAAE6/B,0BAA0BlX,GAAG7oB,EAAEkI,YAC1e7D,EAAE7F,GAAGyB,EAAE,CAAC,WAAW,GAAGoE,IAAIrF,EAAGW,eAAeQ,IAAI,MAAMkE,GAAG,aAAalE,GAAGwmB,GAAE,SAAS3mB,EAAE,CAAC,OAAOtB,GAAG,IAAK,QAAQ4G,EAAGtF,GAAGkH,EAAGlH,EAAEE,GAAE,GAAI,MAAM,IAAK,WAAWoF,EAAGtF,GAAGiI,GAAGjI,GAAG,MAAM,IAAK,SAAS,IAAK,SAAS,MAAM,QAAQ,oBAAoBE,EAAE8/B,UAAUhgC,EAAEigC,QAAQnX,IAAI9oB,EAAEC,EAAExB,EAAE8yB,YAAYvxB,EAAE,OAAOA,IAAIvB,EAAE0R,OAAO,EAAE,KAAK,CAAChQ,EAAE,IAAIF,EAAEiJ,SAASjJ,EAAEA,EAAEkH,cAAc,iCAAiC3I,IAAIA,EAAE2J,GAAGzJ,IAAI,iCAAiCF,EAAE,WAAWE,IAAGF,EAAE2B,EAAEZ,cAAc,QAASiJ,UAAU,qBAAuBhK,EAAEA,EAAEoK,YAAYpK,EAAEmK,aAC/f,kBAAkB3I,EAAE4N,GAAGpP,EAAE2B,EAAEZ,cAAcb,EAAE,CAACkP,GAAG5N,EAAE4N,MAAMpP,EAAE2B,EAAEZ,cAAcb,GAAG,WAAWA,IAAIyB,EAAE3B,EAAEwB,EAAE8/B,SAAS3/B,EAAE2/B,UAAS,EAAG9/B,EAAEkgC,OAAO//B,EAAE+/B,KAAKlgC,EAAEkgC,QAAQ1hC,EAAE2B,EAAEggC,gBAAgB3hC,EAAEE,GAAGF,EAAE4rB,IAAI3rB,EAAED,EAAE6rB,IAAIrqB,EAAE89B,GAAGt/B,EAAEC,GAAE,GAAG,GAAIA,EAAE+P,UAAUhQ,EAAEA,EAAE,CAAW,OAAV2B,EAAEwN,GAAGjP,EAAEsB,GAAUtB,GAAG,IAAK,SAASioB,GAAE,SAASnoB,GAAGmoB,GAAE,QAAQnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,SAAS,IAAK,SAAS,IAAK,QAAQ2mB,GAAE,OAAOnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,QAAQ,IAAK,QAAQ,IAAIC,EAAE,EAAEA,EAAEmmB,GAAGxnB,OAAOqB,IAAI0mB,GAAEP,GAAGnmB,GAAGzB,GAAGyB,EAAED,EAAE,MAAM,IAAK,SAAS2mB,GAAE,QAAQnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,MAAM,IAAK,QAAQ,IAAK,OAAO2mB,GAAE,QAClfnoB,GAAGmoB,GAAE,OAAOnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,UAAU2mB,GAAE,SAASnoB,GAAGyB,EAAED,EAAE,MAAM,IAAK,QAAQ4G,EAAGpI,EAAEwB,GAAGC,EAAEsG,EAAG/H,EAAEwB,GAAG2mB,GAAE,UAAUnoB,GAAG,MAAM,IAAK,SAAiL,QAAQyB,EAAED,QAAxK,IAAK,SAASxB,EAAEkI,cAAc,CAACm5B,cAAc7/B,EAAE8/B,UAAU7/B,EAAEqD,EAAE,CAAC,EAAEtD,EAAE,CAACmG,WAAM,IAASwgB,GAAE,UAAUnoB,GAAG,MAAM,IAAK,WAAWuJ,GAAGvJ,EAAEwB,GAAGC,EAAE2H,GAAGpJ,EAAEwB,GAAG2mB,GAAE,UAAUnoB,GAAiC,IAAI0B,KAAhBwN,GAAGhP,EAAEuB,GAAGoE,EAAEpE,EAAa,GAAGoE,EAAE1E,eAAeO,GAAG,CAAC,IAAIoE,EAAED,EAAEnE,GAAG,UAAUA,EAAEgM,GAAG1N,EAAE8F,GAAG,4BAA4BpE,EAAuB,OAApBoE,EAAEA,EAAEA,EAAE4kB,YAAO,IAAgB5gB,GAAG9J,EAAE8F,GAAI,aAAapE,EAAE,kBAAkBoE,GAAG,aAC7e5F,GAAG,KAAK4F,IAAI0E,GAAGxK,EAAE8F,GAAG,kBAAkBA,GAAG0E,GAAGxK,EAAE,GAAG8F,GAAG,mCAAmCpE,GAAG,6BAA6BA,GAAG,cAAcA,IAAIlB,EAAGW,eAAeO,GAAG,MAAMoE,GAAG,aAAapE,GAAGymB,GAAE,SAASnoB,GAAG,MAAM8F,GAAGlD,EAAG5C,EAAE0B,EAAEoE,EAAEnE,GAAG,CAAC,OAAOzB,GAAG,IAAK,QAAQ4G,EAAG9G,GAAG0I,EAAG1I,EAAEwB,GAAE,GAAI,MAAM,IAAK,WAAWsF,EAAG9G,GAAGyJ,GAAGzJ,GAAG,MAAM,IAAK,SAAS,MAAMwB,EAAEmG,OAAO3H,EAAEqD,aAAa,QAAQ,GAAGsD,EAAGnF,EAAEmG,QAAQ,MAAM,IAAK,SAAS3H,EAAEshC,WAAW9/B,EAAE8/B,SAAmB,OAAV5/B,EAAEF,EAAEmG,OAAcoB,GAAG/I,IAAIwB,EAAE8/B,SAAS5/B,GAAE,GAAI,MAAMF,EAAEyG,cAAcc,GAAG/I,IAAIwB,EAAE8/B,SAAS9/B,EAAEyG,cAClf,GAAI,MAAM,QAAQ,oBAAoBxG,EAAE+/B,UAAUxhC,EAAEyhC,QAAQnX,IAAI,OAAOpqB,GAAG,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAWsB,IAAIA,EAAEogC,UAAU,MAAM5hC,EAAE,IAAK,MAAMwB,GAAE,EAAG,MAAMxB,EAAE,QAAQwB,GAAE,EAAG,CAACA,IAAIvB,EAAE0R,OAAO,EAAE,CAAC,OAAO1R,EAAE+vB,MAAM/vB,EAAE0R,OAAO,IAAI1R,EAAE0R,OAAO,QAAQ,CAAM,OAALuvB,GAAEjhC,GAAU,KAAK,KAAK,EAAE,GAAGD,GAAG,MAAMC,EAAE+P,UAAUyvB,GAAGz/B,EAAEC,EAAED,EAAE0vB,cAAcluB,OAAO,CAAC,GAAG,kBAAkBA,GAAG,OAAOvB,EAAE+P,UAAU,MAAM/K,MAAMlF,EAAE,MAAsC,GAAhCG,EAAEq0B,GAAGD,GAAGniB,SAASoiB,GAAGH,GAAGjiB,SAAYsd,GAAGxvB,GAAG,CAAyC,GAAxCuB,EAAEvB,EAAE+P,UAAU9P,EAAED,EAAEyvB,cAAcluB,EAAEoqB,IAAI3rB,GAAKyB,EAAEF,EAAEmJ,YAAYzK,IAC/e,QADofF,EACvfwuB,IAAY,OAAOxuB,EAAEmG,KAAK,KAAK,EAAEkkB,GAAG7oB,EAAEmJ,UAAUzK,EAAE,KAAY,EAAPF,EAAEsvB,OAAS,MAAM,KAAK,GAAE,IAAKtvB,EAAE0vB,cAAc6R,0BAA0BlX,GAAG7oB,EAAEmJ,UAAUzK,EAAE,KAAY,EAAPF,EAAEsvB,OAAS5tB,IAAIzB,EAAE0R,OAAO,EAAE,MAAMnQ,GAAG,IAAItB,EAAEwK,SAASxK,EAAEA,EAAEyI,eAAek5B,eAAergC,IAAKoqB,IAAI3rB,EAAEA,EAAE+P,UAAUxO,CAAC,CAAM,OAAL0/B,GAAEjhC,GAAU,KAAK,KAAK,GAA0B,GAAvBksB,GAAE0I,IAAGrzB,EAAEvB,EAAE4R,cAAiB,OAAO7R,GAAG,OAAOA,EAAE6R,eAAe,OAAO7R,EAAE6R,cAAcC,WAAW,CAAC,GAAG4c,IAAG,OAAOD,IAAI,KAAY,EAAPxuB,EAAEqvB,OAAS,KAAa,IAARrvB,EAAE0R,OAAWge,KAAKC,KAAK3vB,EAAE0R,OAAO,MAAMjQ,GAAE,OAAQ,GAAGA,EAAE+tB,GAAGxvB,GAAG,OAAOuB,GAAG,OAAOA,EAAEsQ,WAAW,CAAC,GAAG,OAC5f9R,EAAE,CAAC,IAAI0B,EAAE,MAAMuD,MAAMlF,EAAE,MAAqD,KAA7B2B,EAAE,QAApBA,EAAEzB,EAAE4R,eAAyBnQ,EAAEoQ,WAAW,MAAW,MAAM7M,MAAMlF,EAAE,MAAM2B,EAAEkqB,IAAI3rB,CAAC,MAAM2vB,KAAK,KAAa,IAAR3vB,EAAE0R,SAAa1R,EAAE4R,cAAc,MAAM5R,EAAE0R,OAAO,EAAEuvB,GAAEjhC,GAAGyB,GAAE,CAAE,MAAM,OAAOitB,KAAKyS,GAAGzS,IAAIA,GAAG,MAAMjtB,GAAE,EAAG,IAAIA,EAAE,OAAe,MAARzB,EAAE0R,MAAY1R,EAAE,IAAI,CAAC,OAAG,KAAa,IAARA,EAAE0R,QAAkB1R,EAAEkyB,MAAMjyB,EAAED,KAAEuB,EAAE,OAAOA,MAAO,OAAOxB,GAAG,OAAOA,EAAE6R,gBAAgBrQ,IAAIvB,EAAEgS,MAAMN,OAAO,KAAK,KAAY,EAAP1R,EAAEqvB,QAAU,OAAOtvB,GAAG,KAAe,EAAV60B,GAAE1iB,SAAW,IAAI2vB,KAAIA,GAAE,GAAG3B,OAAO,OAAOlgC,EAAE8yB,cAAc9yB,EAAE0R,OAAO,GAAGuvB,GAAEjhC,GAAU,MAAK,KAAK,EAAE,OAAOy0B,KACrf6K,GAAGv/B,EAAEC,GAAG,OAAOD,GAAG0oB,GAAGzoB,EAAE+P,UAAUmH,eAAe+pB,GAAEjhC,GAAG,KAAK,KAAK,GAAG,OAAO2xB,GAAG3xB,EAAEiC,KAAKqE,UAAU26B,GAAEjhC,GAAG,KAA+C,KAAK,GAA0B,GAAvBksB,GAAE0I,IAAwB,QAArBnzB,EAAEzB,EAAE4R,eAA0B,OAAOqvB,GAAEjhC,GAAG,KAAuC,GAAlCuB,EAAE,KAAa,IAARvB,EAAE0R,OAA4B,QAAjBhQ,EAAED,EAAEi/B,WAAsB,GAAGn/B,EAAEy/B,GAAGv/B,GAAE,OAAQ,CAAC,GAAG,IAAIogC,IAAG,OAAO9hC,GAAG,KAAa,IAARA,EAAE2R,OAAW,IAAI3R,EAAEC,EAAEgS,MAAM,OAAOjS,GAAG,CAAS,GAAG,QAAX2B,EAAEmzB,GAAG90B,IAAe,CAAmG,IAAlGC,EAAE0R,OAAO,IAAIsvB,GAAGv/B,GAAE,GAAoB,QAAhBF,EAAEG,EAAEoxB,eAAuB9yB,EAAE8yB,YAAYvxB,EAAEvB,EAAE0R,OAAO,GAAG1R,EAAEsgC,aAAa,EAAE/+B,EAAEtB,EAAMA,EAAED,EAAEgS,MAAM,OAAO/R,GAAOF,EAAEwB,GAANE,EAAExB,GAAQyR,OAAO,SAC/d,QAAdhQ,EAAED,EAAE+P,YAAoB/P,EAAEqwB,WAAW,EAAErwB,EAAEywB,MAAMnyB,EAAE0B,EAAEuQ,MAAM,KAAKvQ,EAAE6+B,aAAa,EAAE7+B,EAAEguB,cAAc,KAAKhuB,EAAEmQ,cAAc,KAAKnQ,EAAEqxB,YAAY,KAAKrxB,EAAEuwB,aAAa,KAAKvwB,EAAEsO,UAAU,OAAOtO,EAAEqwB,WAAWpwB,EAAEowB,WAAWrwB,EAAEywB,MAAMxwB,EAAEwwB,MAAMzwB,EAAEuQ,MAAMtQ,EAAEsQ,MAAMvQ,EAAE6+B,aAAa,EAAE7+B,EAAEqtB,UAAU,KAAKrtB,EAAEguB,cAAc/tB,EAAE+tB,cAAchuB,EAAEmQ,cAAclQ,EAAEkQ,cAAcnQ,EAAEqxB,YAAYpxB,EAAEoxB,YAAYrxB,EAAEQ,KAAKP,EAAEO,KAAKlC,EAAE2B,EAAEswB,aAAavwB,EAAEuwB,aAAa,OAAOjyB,EAAE,KAAK,CAACmyB,MAAMnyB,EAAEmyB,MAAMD,aAAalyB,EAAEkyB,eAAehyB,EAAEA,EAAEgS,QAA2B,OAAnBka,GAAEyI,GAAY,EAAVA,GAAE1iB,QAAU,GAAUlS,EAAEgS,KAAK,CAACjS,EAClgBA,EAAEkS,OAAO,CAAC,OAAOxQ,EAAEo/B,MAAMhuB,KAAIivB,KAAK9hC,EAAE0R,OAAO,IAAInQ,GAAE,EAAGy/B,GAAGv/B,GAAE,GAAIzB,EAAEkyB,MAAM,QAAQ,KAAK,CAAC,IAAI3wB,EAAE,GAAW,QAARxB,EAAE80B,GAAGnzB,KAAa,GAAG1B,EAAE0R,OAAO,IAAInQ,GAAE,EAAmB,QAAhBtB,EAAEF,EAAE+yB,eAAuB9yB,EAAE8yB,YAAY7yB,EAAED,EAAE0R,OAAO,GAAGsvB,GAAGv/B,GAAE,GAAI,OAAOA,EAAEo/B,MAAM,WAAWp/B,EAAEq/B,WAAWp/B,EAAE8P,YAAYid,GAAE,OAAOwS,GAAEjhC,GAAG,UAAU,EAAE6S,KAAIpR,EAAEk/B,mBAAmBmB,IAAI,aAAa7hC,IAAID,EAAE0R,OAAO,IAAInQ,GAAE,EAAGy/B,GAAGv/B,GAAE,GAAIzB,EAAEkyB,MAAM,SAASzwB,EAAEg/B,aAAa/+B,EAAEuQ,QAAQjS,EAAEgS,MAAMhS,EAAEgS,MAAMtQ,IAAa,QAATzB,EAAEwB,EAAEm/B,MAAc3gC,EAAEgS,QAAQvQ,EAAE1B,EAAEgS,MAAMtQ,EAAED,EAAEm/B,KAAKl/B,EAAE,CAAC,OAAG,OAAOD,EAAEo/B,MAAY7gC,EAAEyB,EAAEo/B,KAAKp/B,EAAEi/B,UAC9e1gC,EAAEyB,EAAEo/B,KAAK7gC,EAAEiS,QAAQxQ,EAAEk/B,mBAAmB9tB,KAAI7S,EAAEiS,QAAQ,KAAKhS,EAAE20B,GAAE1iB,QAAQia,GAAEyI,GAAErzB,EAAI,EAAFtB,EAAI,EAAI,EAAFA,GAAKD,IAAEihC,GAAEjhC,GAAU,MAAK,KAAK,GAAG,KAAK,GAAG,OAAO+hC,KAAKxgC,EAAE,OAAOvB,EAAE4R,cAAc,OAAO7R,GAAG,OAAOA,EAAE6R,gBAAgBrQ,IAAIvB,EAAE0R,OAAO,MAAMnQ,GAAG,KAAY,EAAPvB,EAAEqvB,MAAQ,KAAQ,WAAHqP,MAAiBuC,GAAEjhC,GAAkB,EAAfA,EAAEsgC,eAAiBtgC,EAAE0R,OAAO,OAAOuvB,GAAEjhC,GAAG,KAAK,KAAK,GAAe,KAAK,GAAG,OAAO,KAAK,MAAMgF,MAAMlF,EAAE,IAAIE,EAAEkG,KAAM,CAClX,SAAS87B,GAAGjiC,EAAEC,GAAS,OAANsuB,GAAGtuB,GAAUA,EAAEkG,KAAK,KAAK,EAAE,OAAO0mB,GAAG5sB,EAAEiC,OAAO6qB,KAAiB,OAAZ/sB,EAAEC,EAAE0R,QAAe1R,EAAE0R,OAAS,MAAH3R,EAAS,IAAIC,GAAG,KAAK,KAAK,EAAE,OAAOy0B,KAAKvI,GAAEI,IAAIJ,GAAEG,IAAG2I,KAAe,KAAO,OAAjBj1B,EAAEC,EAAE0R,SAAqB,KAAO,IAAF3R,IAAQC,EAAE0R,OAAS,MAAH3R,EAAS,IAAIC,GAAG,KAAK,KAAK,EAAE,OAAO20B,GAAG30B,GAAG,KAAK,KAAK,GAA0B,GAAvBksB,GAAE0I,IAAwB,QAArB70B,EAAEC,EAAE4R,gBAA2B,OAAO7R,EAAE8R,WAAW,CAAC,GAAG,OAAO7R,EAAEwR,UAAU,MAAMxM,MAAMlF,EAAE,MAAM6vB,IAAI,CAAW,OAAS,OAAnB5vB,EAAEC,EAAE0R,QAAsB1R,EAAE0R,OAAS,MAAH3R,EAAS,IAAIC,GAAG,KAAK,KAAK,GAAG,OAAOksB,GAAE0I,IAAG,KAAK,KAAK,EAAE,OAAOH,KAAK,KAAK,KAAK,GAAG,OAAO9C,GAAG3xB,EAAEiC,KAAKqE,UAAU,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOy7B,KAC1gB,KAAyB,QAAQ,OAAO,KAAK,CArB7C1C,GAAG,SAASt/B,EAAEC,GAAG,IAAI,IAAIC,EAAED,EAAEgS,MAAM,OAAO/R,GAAG,CAAC,GAAG,IAAIA,EAAEiG,KAAK,IAAIjG,EAAEiG,IAAInG,EAAEqK,YAAYnK,EAAE8P,gBAAgB,GAAG,IAAI9P,EAAEiG,KAAK,OAAOjG,EAAE+R,MAAM,CAAC/R,EAAE+R,MAAMP,OAAOxR,EAAEA,EAAEA,EAAE+R,MAAM,QAAQ,CAAC,GAAG/R,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAEgS,SAAS,CAAC,GAAG,OAAOhS,EAAEwR,QAAQxR,EAAEwR,SAASzR,EAAE,OAAOC,EAAEA,EAAEwR,MAAM,CAACxR,EAAEgS,QAAQR,OAAOxR,EAAEwR,OAAOxR,EAAEA,EAAEgS,OAAO,CAAC,EAAEqtB,GAAG,WAAW,EACxTC,GAAG,SAASx/B,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAEzB,EAAE0vB,cAAc,GAAGjuB,IAAID,EAAE,CAACxB,EAAEC,EAAE+P,UAAUukB,GAAGH,GAAGjiB,SAAS,IAA4RxQ,EAAxRD,EAAE,KAAK,OAAOxB,GAAG,IAAK,QAAQuB,EAAEsG,EAAG/H,EAAEyB,GAAGD,EAAEuG,EAAG/H,EAAEwB,GAAGE,EAAE,GAAG,MAAM,IAAK,SAASD,EAAEqD,EAAE,CAAC,EAAErD,EAAE,CAACkG,WAAM,IAASnG,EAAEsD,EAAE,CAAC,EAAEtD,EAAE,CAACmG,WAAM,IAASjG,EAAE,GAAG,MAAM,IAAK,WAAWD,EAAE2H,GAAGpJ,EAAEyB,GAAGD,EAAE4H,GAAGpJ,EAAEwB,GAAGE,EAAE,GAAG,MAAM,QAAQ,oBAAoBD,EAAE+/B,SAAS,oBAAoBhgC,EAAEggC,UAAUxhC,EAAEyhC,QAAQnX,IAAyB,IAAI1kB,KAAzBsJ,GAAGhP,EAAEsB,GAAStB,EAAE,KAAcuB,EAAE,IAAID,EAAEL,eAAeyE,IAAInE,EAAEN,eAAeyE,IAAI,MAAMnE,EAAEmE,GAAG,GAAG,UAAUA,EAAE,CAAC,IAAIC,EAAEpE,EAAEmE,GAAG,IAAIjE,KAAKkE,EAAEA,EAAE1E,eAAeQ,KACjfzB,IAAIA,EAAE,CAAC,GAAGA,EAAEyB,GAAG,GAAG,KAAK,4BAA4BiE,GAAG,aAAaA,GAAG,mCAAmCA,GAAG,6BAA6BA,GAAG,cAAcA,IAAIpF,EAAGW,eAAeyE,GAAGlE,IAAIA,EAAE,KAAKA,EAAEA,GAAG,IAAIyO,KAAKvK,EAAE,OAAO,IAAIA,KAAKpE,EAAE,CAAC,IAAIsE,EAAEtE,EAAEoE,GAAyB,GAAtBC,EAAE,MAAMpE,EAAEA,EAAEmE,QAAG,EAAUpE,EAAEL,eAAeyE,IAAIE,IAAID,IAAI,MAAMC,GAAG,MAAMD,GAAG,GAAG,UAAUD,EAAE,GAAGC,EAAE,CAAC,IAAIlE,KAAKkE,GAAGA,EAAE1E,eAAeQ,IAAImE,GAAGA,EAAE3E,eAAeQ,KAAKzB,IAAIA,EAAE,CAAC,GAAGA,EAAEyB,GAAG,IAAI,IAAIA,KAAKmE,EAAEA,EAAE3E,eAAeQ,IAAIkE,EAAElE,KAAKmE,EAAEnE,KAAKzB,IAAIA,EAAE,CAAC,GAAGA,EAAEyB,GAAGmE,EAAEnE,GAAG,MAAMzB,IAAIwB,IAAIA,EAAE,IAAIA,EAAEyO,KAAKvK,EACpf1F,IAAIA,EAAE4F,MAAM,4BAA4BF,GAAGE,EAAEA,EAAEA,EAAE4kB,YAAO,EAAO7kB,EAAEA,EAAEA,EAAE6kB,YAAO,EAAO,MAAM5kB,GAAGD,IAAIC,IAAIpE,EAAEA,GAAG,IAAIyO,KAAKvK,EAAEE,IAAI,aAAaF,EAAE,kBAAkBE,GAAG,kBAAkBA,IAAIpE,EAAEA,GAAG,IAAIyO,KAAKvK,EAAE,GAAGE,GAAG,mCAAmCF,GAAG,6BAA6BA,IAAIpF,EAAGW,eAAeyE,IAAI,MAAME,GAAG,aAAaF,GAAGuiB,GAAE,SAASnoB,GAAG0B,GAAGmE,IAAIC,IAAIpE,EAAE,MAAMA,EAAEA,GAAG,IAAIyO,KAAKvK,EAAEE,GAAG,CAAC5F,IAAIwB,EAAEA,GAAG,IAAIyO,KAAK,QAAQjQ,GAAG,IAAI0F,EAAElE,GAAKzB,EAAE8yB,YAAYntB,KAAE3F,EAAE0R,OAAO,EAAC,CAAC,EAAE8tB,GAAG,SAASz/B,EAAEC,EAAEC,EAAEsB,GAAGtB,IAAIsB,IAAIvB,EAAE0R,OAAO,EAAE,EAkBlb,IAAIuwB,IAAG,EAAGC,IAAE,EAAGC,GAAG,oBAAoBC,QAAQA,QAAQ9hC,IAAI+hC,GAAE,KAAK,SAASC,GAAGviC,EAAEC,GAAG,IAAIC,EAAEF,EAAEgwB,IAAI,GAAG,OAAO9vB,EAAE,GAAG,oBAAoBA,EAAE,IAAIA,EAAE,KAAK,CAAC,MAAMsB,GAAGghC,GAAExiC,EAAEC,EAAEuB,EAAE,MAAMtB,EAAEiS,QAAQ,IAAI,CAAC,SAASswB,GAAGziC,EAAEC,EAAEC,GAAG,IAAIA,GAAG,CAAC,MAAMsB,GAAGghC,GAAExiC,EAAEC,EAAEuB,EAAE,CAAC,CAAC,IAAIkhC,IAAG,EAIxR,SAASC,GAAG3iC,EAAEC,EAAEC,GAAG,IAAIsB,EAAEvB,EAAE8yB,YAAyC,GAAG,QAAhCvxB,EAAE,OAAOA,EAAEA,EAAEo2B,WAAW,MAAiB,CAAC,IAAIn2B,EAAED,EAAEA,EAAE2vB,KAAK,EAAE,CAAC,IAAI1vB,EAAE0E,IAAInG,KAAKA,EAAE,CAAC,IAAI0B,EAAED,EAAE22B,QAAQ32B,EAAE22B,aAAQ,OAAO,IAAS12B,GAAG+gC,GAAGxiC,EAAEC,EAAEwB,EAAE,CAACD,EAAEA,EAAE0vB,IAAI,OAAO1vB,IAAID,EAAE,CAAC,CAAC,SAASohC,GAAG5iC,EAAEC,GAAgD,GAAG,QAAhCA,EAAE,QAAlBA,EAAEA,EAAE8yB,aAAuB9yB,EAAE23B,WAAW,MAAiB,CAAC,IAAI13B,EAAED,EAAEA,EAAEkxB,KAAK,EAAE,CAAC,IAAIjxB,EAAEiG,IAAInG,KAAKA,EAAE,CAAC,IAAIwB,EAAEtB,EAAEi4B,OAAOj4B,EAAEk4B,QAAQ52B,GAAG,CAACtB,EAAEA,EAAEixB,IAAI,OAAOjxB,IAAID,EAAE,CAAC,CAAC,SAAS4iC,GAAG7iC,GAAG,IAAIC,EAAED,EAAEgwB,IAAI,GAAG,OAAO/vB,EAAE,CAAC,IAAIC,EAAEF,EAAEgQ,UAAiBhQ,EAAEmG,IAA8BnG,EAAEE,EAAE,oBAAoBD,EAAEA,EAAED,GAAGC,EAAEkS,QAAQnS,CAAC,CAAC,CAClf,SAAS8iC,GAAG9iC,GAAG,IAAIC,EAAED,EAAEyR,UAAU,OAAOxR,IAAID,EAAEyR,UAAU,KAAKqxB,GAAG7iC,IAAID,EAAEiS,MAAM,KAAKjS,EAAE+uB,UAAU,KAAK/uB,EAAEkS,QAAQ,KAAK,IAAIlS,EAAEmG,MAAoB,QAAdlG,EAAED,EAAEgQ,oBAA4B/P,EAAE2rB,WAAW3rB,EAAE4rB,WAAW5rB,EAAEmoB,WAAWnoB,EAAE6rB,WAAW7rB,EAAE8rB,MAAM/rB,EAAEgQ,UAAU,KAAKhQ,EAAE0R,OAAO,KAAK1R,EAAEiyB,aAAa,KAAKjyB,EAAE0vB,cAAc,KAAK1vB,EAAE6R,cAAc,KAAK7R,EAAEivB,aAAa,KAAKjvB,EAAEgQ,UAAU,KAAKhQ,EAAE+yB,YAAY,IAAI,CAAC,SAASgQ,GAAG/iC,GAAG,OAAO,IAAIA,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,IAAInG,EAAEmG,GAAG,CACna,SAAS68B,GAAGhjC,GAAGA,EAAE,OAAO,CAAC,KAAK,OAAOA,EAAEkS,SAAS,CAAC,GAAG,OAAOlS,EAAE0R,QAAQqxB,GAAG/iC,EAAE0R,QAAQ,OAAO,KAAK1R,EAAEA,EAAE0R,MAAM,CAA2B,IAA1B1R,EAAEkS,QAAQR,OAAO1R,EAAE0R,OAAW1R,EAAEA,EAAEkS,QAAQ,IAAIlS,EAAEmG,KAAK,IAAInG,EAAEmG,KAAK,KAAKnG,EAAEmG,KAAK,CAAC,GAAW,EAARnG,EAAE2R,MAAQ,SAAS3R,EAAE,GAAG,OAAOA,EAAEiS,OAAO,IAAIjS,EAAEmG,IAAI,SAASnG,EAAOA,EAAEiS,MAAMP,OAAO1R,EAAEA,EAAEA,EAAEiS,KAAK,CAAC,KAAa,EAARjS,EAAE2R,OAAS,OAAO3R,EAAEgQ,SAAS,CAAC,CACzT,SAASizB,GAAGjjC,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEmG,IAAI,GAAG,IAAI3E,GAAG,IAAIA,EAAExB,EAAEA,EAAEgQ,UAAU/P,EAAE,IAAIC,EAAEwK,SAASxK,EAAEwP,WAAWwzB,aAAaljC,EAAEC,GAAGC,EAAEgjC,aAAaljC,EAAEC,IAAI,IAAIC,EAAEwK,UAAUzK,EAAEC,EAAEwP,YAAawzB,aAAaljC,EAAEE,IAAKD,EAAEC,GAAImK,YAAYrK,GAA4B,QAAxBE,EAAEA,EAAEijC,2BAA8B,IAASjjC,GAAG,OAAOD,EAAEwhC,UAAUxhC,EAAEwhC,QAAQnX,UAAU,GAAG,IAAI9oB,GAAc,QAAVxB,EAAEA,EAAEiS,OAAgB,IAAIgxB,GAAGjjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,QAAQ,OAAOlS,GAAGijC,GAAGjjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,OAAO,CAC1X,SAASkxB,GAAGpjC,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEmG,IAAI,GAAG,IAAI3E,GAAG,IAAIA,EAAExB,EAAEA,EAAEgQ,UAAU/P,EAAEC,EAAEgjC,aAAaljC,EAAEC,GAAGC,EAAEmK,YAAYrK,QAAQ,GAAG,IAAIwB,GAAc,QAAVxB,EAAEA,EAAEiS,OAAgB,IAAImxB,GAAGpjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,QAAQ,OAAOlS,GAAGojC,GAAGpjC,EAAEC,EAAEC,GAAGF,EAAEA,EAAEkS,OAAO,CAAC,IAAImxB,GAAE,KAAKC,IAAG,EAAG,SAASC,GAAGvjC,EAAEC,EAAEC,GAAG,IAAIA,EAAEA,EAAE+R,MAAM,OAAO/R,GAAGsjC,GAAGxjC,EAAEC,EAAEC,GAAGA,EAAEA,EAAEgS,OAAO,CACnR,SAASsxB,GAAGxjC,EAAEC,EAAEC,GAAG,GAAG2T,IAAI,oBAAoBA,GAAG4vB,qBAAqB,IAAI5vB,GAAG4vB,qBAAqB7vB,GAAG1T,EAAE,CAAC,MAAM2F,GAAG,CAAC,OAAO3F,EAAEiG,KAAK,KAAK,EAAEg8B,IAAGI,GAAGriC,EAAED,GAAG,KAAK,EAAE,IAAIuB,EAAE6hC,GAAE5hC,EAAE6hC,GAAGD,GAAE,KAAKE,GAAGvjC,EAAEC,EAAEC,GAAOojC,GAAG7hC,EAAE,QAAT4hC,GAAE7hC,KAAkB8hC,IAAItjC,EAAEqjC,GAAEnjC,EAAEA,EAAE8P,UAAU,IAAIhQ,EAAE0K,SAAS1K,EAAE0P,WAAWtF,YAAYlK,GAAGF,EAAEoK,YAAYlK,IAAImjC,GAAEj5B,YAAYlK,EAAE8P,YAAY,MAAM,KAAK,GAAG,OAAOqzB,KAAIC,IAAItjC,EAAEqjC,GAAEnjC,EAAEA,EAAE8P,UAAU,IAAIhQ,EAAE0K,SAAS6gB,GAAGvrB,EAAE0P,WAAWxP,GAAG,IAAIF,EAAE0K,UAAU6gB,GAAGvrB,EAAEE,GAAGyX,GAAG3X,IAAIurB,GAAG8X,GAAEnjC,EAAE8P,YAAY,MAAM,KAAK,EAAExO,EAAE6hC,GAAE5hC,EAAE6hC,GAAGD,GAAEnjC,EAAE8P,UAAUmH,cAAcmsB,IAAG,EAClfC,GAAGvjC,EAAEC,EAAEC,GAAGmjC,GAAE7hC,EAAE8hC,GAAG7hC,EAAE,MAAM,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI0gC,KAAoB,QAAhB3gC,EAAEtB,EAAE6yB,cAAsC,QAAfvxB,EAAEA,EAAEo2B,aAAsB,CAACn2B,EAAED,EAAEA,EAAE2vB,KAAK,EAAE,CAAC,IAAIzvB,EAAED,EAAEE,EAAED,EAAE02B,QAAQ12B,EAAEA,EAAEyE,SAAI,IAASxE,IAAI,KAAO,EAAFD,IAAe,KAAO,EAAFA,KAAf+gC,GAAGviC,EAAED,EAAE0B,GAAyBF,EAAEA,EAAE0vB,IAAI,OAAO1vB,IAAID,EAAE,CAAC+hC,GAAGvjC,EAAEC,EAAEC,GAAG,MAAM,KAAK,EAAE,IAAIiiC,KAAII,GAAGriC,EAAED,GAAiB,oBAAduB,EAAEtB,EAAE8P,WAAgC0zB,sBAAsB,IAAIliC,EAAEmvB,MAAMzwB,EAAEwvB,cAAcluB,EAAEm6B,MAAMz7B,EAAE2R,cAAcrQ,EAAEkiC,sBAAsB,CAAC,MAAM79B,GAAG28B,GAAEtiC,EAAED,EAAE4F,EAAE,CAAC09B,GAAGvjC,EAAEC,EAAEC,GAAG,MAAM,KAAK,GAAGqjC,GAAGvjC,EAAEC,EAAEC,GAAG,MAAM,KAAK,GAAU,EAAPA,EAAEovB,MAAQ6S,IAAG3gC,EAAE2gC,KAAI,OAChfjiC,EAAE2R,cAAc0xB,GAAGvjC,EAAEC,EAAEC,GAAGiiC,GAAE3gC,GAAG+hC,GAAGvjC,EAAEC,EAAEC,GAAG,MAAM,QAAQqjC,GAAGvjC,EAAEC,EAAEC,GAAG,CAAC,SAASyjC,GAAG3jC,GAAG,IAAIC,EAAED,EAAE+yB,YAAY,GAAG,OAAO9yB,EAAE,CAACD,EAAE+yB,YAAY,KAAK,IAAI7yB,EAAEF,EAAEgQ,UAAU,OAAO9P,IAAIA,EAAEF,EAAEgQ,UAAU,IAAIoyB,IAAIniC,EAAEsC,SAAQ,SAAStC,GAAG,IAAIuB,EAAEoiC,GAAGjb,KAAK,KAAK3oB,EAAEC,GAAGC,EAAEmoB,IAAIpoB,KAAKC,EAAES,IAAIV,GAAGA,EAAEmrB,KAAK5pB,EAAEA,GAAG,GAAE,CAAC,CACzQ,SAASqiC,GAAG7jC,EAAEC,GAAG,IAAIC,EAAED,EAAE8uB,UAAU,GAAG,OAAO7uB,EAAE,IAAI,IAAIsB,EAAE,EAAEA,EAAEtB,EAAEE,OAAOoB,IAAI,CAAC,IAAIC,EAAEvB,EAAEsB,GAAG,IAAI,IAAIE,EAAE1B,EAAE2B,EAAE1B,EAAE4F,EAAElE,EAAE3B,EAAE,KAAK,OAAO6F,GAAG,CAAC,OAAOA,EAAEM,KAAK,KAAK,EAAEk9B,GAAEx9B,EAAEmK,UAAUszB,IAAG,EAAG,MAAMtjC,EAAE,KAAK,EAA4C,KAAK,EAAEqjC,GAAEx9B,EAAEmK,UAAUmH,cAAcmsB,IAAG,EAAG,MAAMtjC,EAAE6F,EAAEA,EAAE6L,MAAM,CAAC,GAAG,OAAO2xB,GAAE,MAAMp+B,MAAMlF,EAAE,MAAMyjC,GAAG9hC,EAAEC,EAAEF,GAAG4hC,GAAE,KAAKC,IAAG,EAAG,IAAIx9B,EAAErE,EAAEgQ,UAAU,OAAO3L,IAAIA,EAAE4L,OAAO,MAAMjQ,EAAEiQ,OAAO,IAAI,CAAC,MAAM9L,GAAG48B,GAAE/gC,EAAExB,EAAE2F,EAAE,CAAC,CAAC,GAAkB,MAAf3F,EAAEsgC,aAAmB,IAAItgC,EAAEA,EAAEgS,MAAM,OAAOhS,GAAG6jC,GAAG7jC,EAAED,GAAGC,EAAEA,EAAEiS,OAAO,CACje,SAAS4xB,GAAG9jC,EAAEC,GAAG,IAAIC,EAAEF,EAAEyR,UAAUjQ,EAAExB,EAAE2R,MAAM,OAAO3R,EAAEmG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAiB,GAAd09B,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAQ,EAAFwB,EAAI,CAAC,IAAImhC,GAAG,EAAE3iC,EAAEA,EAAE0R,QAAQkxB,GAAG,EAAE5iC,EAAE,CAAC,MAAM+oB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,IAAI4Z,GAAG,EAAE3iC,EAAEA,EAAE0R,OAAO,CAAC,MAAMqX,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE8a,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAK,IAAFwB,GAAO,OAAOtB,GAAGqiC,GAAGriC,EAAEA,EAAEwR,QAAQ,MAAM,KAAK,EAAgD,GAA9CmyB,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAK,IAAFwB,GAAO,OAAOtB,GAAGqiC,GAAGriC,EAAEA,EAAEwR,QAAmB,GAAR1R,EAAE2R,MAAS,CAAC,IAAIlQ,EAAEzB,EAAEgQ,UAAU,IAAIxF,GAAG/I,EAAE,GAAG,CAAC,MAAMsnB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,GAAK,EAAFvnB,GAAoB,OAAdC,EAAEzB,EAAEgQ,WAAmB,CAAC,IAAItO,EAAE1B,EAAE0vB,cAAc/tB,EAAE,OAAOzB,EAAEA,EAAEwvB,cAAchuB,EAAEmE,EAAE7F,EAAEkC,KAAK4D,EAAE9F,EAAE+yB,YACje,GAAnB/yB,EAAE+yB,YAAY,KAAQ,OAAOjtB,EAAE,IAAI,UAAUD,GAAG,UAAUnE,EAAEQ,MAAM,MAAMR,EAAEuE,MAAMsC,EAAG9G,EAAEC,GAAGyN,GAAGtJ,EAAElE,GAAG,IAAIiE,EAAEuJ,GAAGtJ,EAAEnE,GAAG,IAAIC,EAAE,EAAEA,EAAEmE,EAAE1F,OAAOuB,GAAG,EAAE,CAAC,IAAIqP,EAAElL,EAAEnE,GAAGqvB,EAAElrB,EAAEnE,EAAE,GAAG,UAAUqP,EAAEtD,GAAGjM,EAAEuvB,GAAG,4BAA4BhgB,EAAElH,GAAGrI,EAAEuvB,GAAG,aAAahgB,EAAExG,GAAG/I,EAAEuvB,GAAGpuB,EAAGnB,EAAEuP,EAAEggB,EAAEprB,EAAE,CAAC,OAAOC,GAAG,IAAK,QAAQ2C,EAAG/G,EAAEC,GAAG,MAAM,IAAK,WAAW8H,GAAG/H,EAAEC,GAAG,MAAM,IAAK,SAAS,IAAIuvB,EAAExvB,EAAEyG,cAAcm5B,YAAY5/B,EAAEyG,cAAcm5B,cAAc3/B,EAAE4/B,SAAS,IAAIpQ,EAAExvB,EAAEiG,MAAM,MAAMupB,EAAEnoB,GAAGtH,IAAIC,EAAE4/B,SAASpQ,GAAE,GAAID,MAAMvvB,EAAE4/B,WAAW,MAAM5/B,EAAEuG,aAAac,GAAGtH,IAAIC,EAAE4/B,SACnf5/B,EAAEuG,cAAa,GAAIc,GAAGtH,IAAIC,EAAE4/B,SAAS5/B,EAAE4/B,SAAS,GAAG,IAAG,IAAK7/B,EAAEoqB,IAAInqB,CAAC,CAAC,MAAMqnB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAd8a,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAQ,EAAFwB,EAAI,CAAC,GAAG,OAAOxB,EAAEgQ,UAAU,MAAM/K,MAAMlF,EAAE,MAAM0B,EAAEzB,EAAEgQ,UAAUtO,EAAE1B,EAAE0vB,cAAc,IAAIjuB,EAAEkJ,UAAUjJ,CAAC,CAAC,MAAMqnB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,CAAC,MAAM,KAAK,EAAgB,GAAd8a,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAQ,EAAFwB,GAAK,OAAOtB,GAAGA,EAAE2R,cAAcqF,aAAa,IAAIS,GAAG1X,EAAEkX,cAAc,CAAC,MAAM4R,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,MAAM,KAAK,EAG4G,QAAQ8a,GAAG5jC,EACnfD,GAAG+jC,GAAG/jC,SAJ4Y,KAAK,GAAG6jC,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAqB,MAAlByB,EAAEzB,EAAEiS,OAAQN,QAAajQ,EAAE,OAAOD,EAAEoQ,cAAcpQ,EAAEuO,UAAUg0B,SAAStiC,GAAGA,GAClf,OAAOD,EAAEgQ,WAAW,OAAOhQ,EAAEgQ,UAAUI,gBAAgBoyB,GAAGnxB,OAAQ,EAAFtR,GAAKmiC,GAAG3jC,GAAG,MAAM,KAAK,GAAsF,GAAnFgR,EAAE,OAAO9Q,GAAG,OAAOA,EAAE2R,cAAqB,EAAP7R,EAAEsvB,MAAQ6S,IAAGv8B,EAAEu8B,KAAInxB,EAAE6yB,GAAG5jC,EAAED,GAAGmiC,GAAEv8B,GAAGi+B,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAQ,KAAFwB,EAAO,CAA0B,GAAzBoE,EAAE,OAAO5F,EAAE6R,eAAkB7R,EAAEgQ,UAAUg0B,SAASp+B,KAAKoL,GAAG,KAAY,EAAPhR,EAAEsvB,MAAQ,IAAIgT,GAAEtiC,EAAEgR,EAAEhR,EAAEiS,MAAM,OAAOjB,GAAG,CAAC,IAAIggB,EAAEsR,GAAEtxB,EAAE,OAAOsxB,IAAG,CAAe,OAAVpR,GAAJD,EAAEqR,IAAMrwB,MAAagf,EAAE9qB,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,GAAGw8B,GAAG,EAAE1R,EAAEA,EAAEvf,QAAQ,MAAM,KAAK,EAAE6wB,GAAGtR,EAAEA,EAAEvf,QAAQ,IAAIoX,EAAEmI,EAAEjhB,UAAU,GAAG,oBAAoB8Y,EAAE4a,qBAAqB,CAACliC,EAAEyvB,EAAE/wB,EAAE+wB,EAAEvf,OAAO,IAAIzR,EAAEuB,EAAEsnB,EAAE6H,MACpf1wB,EAAEyvB,cAAc5G,EAAE6S,MAAM17B,EAAE4R,cAAciX,EAAE4a,sBAAsB,CAAC,MAAM3a,GAAGyZ,GAAEhhC,EAAEtB,EAAE6oB,EAAE,CAAC,CAAC,MAAM,KAAK,EAAEwZ,GAAGtR,EAAEA,EAAEvf,QAAQ,MAAM,KAAK,GAAG,GAAG,OAAOuf,EAAEpf,cAAc,CAACqyB,GAAGlT,GAAG,QAAQ,EAAE,OAAOE,GAAGA,EAAExf,OAAOuf,EAAEqR,GAAEpR,GAAGgT,GAAGlT,EAAE,CAAChgB,EAAEA,EAAEkB,OAAO,CAAClS,EAAE,IAAIgR,EAAE,KAAKggB,EAAEhxB,IAAI,CAAC,GAAG,IAAIgxB,EAAE7qB,KAAK,GAAG,OAAO6K,EAAE,CAACA,EAAEggB,EAAE,IAAIvvB,EAAEuvB,EAAEhhB,UAAUpK,EAAa,oBAAVlE,EAAED,EAAEkM,OAA4BE,YAAYnM,EAAEmM,YAAY,UAAU,OAAO,aAAanM,EAAEyiC,QAAQ,QAASt+B,EAAEmrB,EAAEhhB,UAAkCrO,OAAE,KAA1BmE,EAAEkrB,EAAEtB,cAAc/hB,QAAoB,OAAO7H,GAAGA,EAAE3E,eAAe,WAAW2E,EAAEq+B,QAAQ,KAAKt+B,EAAE8H,MAAMw2B,QACzf12B,GAAG,UAAU9L,GAAG,CAAC,MAAMonB,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,CAAC,OAAO,GAAG,IAAIiI,EAAE7qB,KAAK,GAAG,OAAO6K,EAAE,IAAIggB,EAAEhhB,UAAUrF,UAAU/E,EAAE,GAAGorB,EAAEtB,aAAa,CAAC,MAAM3G,GAAGyZ,GAAExiC,EAAEA,EAAE0R,OAAOqX,EAAE,OAAO,IAAI,KAAKiI,EAAE7qB,KAAK,KAAK6qB,EAAE7qB,KAAK,OAAO6qB,EAAEnf,eAAemf,IAAIhxB,IAAI,OAAOgxB,EAAE/e,MAAM,CAAC+e,EAAE/e,MAAMP,OAAOsf,EAAEA,EAAEA,EAAE/e,MAAM,QAAQ,CAAC,GAAG+e,IAAIhxB,EAAE,MAAMA,EAAE,KAAK,OAAOgxB,EAAE9e,SAAS,CAAC,GAAG,OAAO8e,EAAEtf,QAAQsf,EAAEtf,SAAS1R,EAAE,MAAMA,EAAEgR,IAAIggB,IAAIhgB,EAAE,MAAMggB,EAAEA,EAAEtf,MAAM,CAACV,IAAIggB,IAAIhgB,EAAE,MAAMggB,EAAE9e,QAAQR,OAAOsf,EAAEtf,OAAOsf,EAAEA,EAAE9e,OAAO,CAAC,CAAC,MAAM,KAAK,GAAG2xB,GAAG5jC,EAAED,GAAG+jC,GAAG/jC,GAAK,EAAFwB,GAAKmiC,GAAG3jC,GAAS,KAAK,IACtd,CAAC,SAAS+jC,GAAG/jC,GAAG,IAAIC,EAAED,EAAE2R,MAAM,GAAK,EAAF1R,EAAI,CAAC,IAAID,EAAE,CAAC,IAAI,IAAIE,EAAEF,EAAE0R,OAAO,OAAOxR,GAAG,CAAC,GAAG6iC,GAAG7iC,GAAG,CAAC,IAAIsB,EAAEtB,EAAE,MAAMF,CAAC,CAACE,EAAEA,EAAEwR,MAAM,CAAC,MAAMzM,MAAMlF,EAAE,KAAM,CAAC,OAAOyB,EAAE2E,KAAK,KAAK,EAAE,IAAI1E,EAAED,EAAEwO,UAAkB,GAARxO,EAAEmQ,QAAWnH,GAAG/I,EAAE,IAAID,EAAEmQ,QAAQ,IAAgByxB,GAAGpjC,EAATgjC,GAAGhjC,GAAUyB,GAAG,MAAM,KAAK,EAAE,KAAK,EAAE,IAAIE,EAAEH,EAAEwO,UAAUmH,cAAsB8rB,GAAGjjC,EAATgjC,GAAGhjC,GAAU2B,GAAG,MAAM,QAAQ,MAAMsD,MAAMlF,EAAE,MAAO,CAAC,MAAM+F,GAAG08B,GAAExiC,EAAEA,EAAE0R,OAAO5L,EAAE,CAAC9F,EAAE2R,QAAQ,CAAC,CAAG,KAAF1R,IAASD,EAAE2R,QAAQ,KAAK,CAAC,SAASyyB,GAAGpkC,EAAEC,EAAEC,GAAGoiC,GAAEtiC,EAAEqkC,GAAGrkC,EAAEC,EAAEC,EAAE,CACvb,SAASmkC,GAAGrkC,EAAEC,EAAEC,GAAG,IAAI,IAAIsB,EAAE,KAAY,EAAPxB,EAAEsvB,MAAQ,OAAOgT,IAAG,CAAC,IAAI7gC,EAAE6gC,GAAE5gC,EAAED,EAAEwQ,MAAM,GAAG,KAAKxQ,EAAE0E,KAAK3E,EAAE,CAAC,IAAIG,EAAE,OAAOF,EAAEoQ,eAAeqwB,GAAG,IAAIvgC,EAAE,CAAC,IAAIkE,EAAEpE,EAAEgQ,UAAU3L,EAAE,OAAOD,GAAG,OAAOA,EAAEgM,eAAeswB,GAAEt8B,EAAEq8B,GAAG,IAAIt8B,EAAEu8B,GAAO,GAALD,GAAGvgC,GAAMwgC,GAAEr8B,KAAKF,EAAE,IAAI08B,GAAE7gC,EAAE,OAAO6gC,IAAOx8B,GAAJnE,EAAE2gC,IAAMrwB,MAAM,KAAKtQ,EAAEwE,KAAK,OAAOxE,EAAEkQ,cAAcyyB,GAAG7iC,GAAG,OAAOqE,GAAGA,EAAE4L,OAAO/P,EAAE2gC,GAAEx8B,GAAGw+B,GAAG7iC,GAAG,KAAK,OAAOC,GAAG4gC,GAAE5gC,EAAE2iC,GAAG3iC,EAAEzB,EAAEC,GAAGwB,EAAEA,EAAEwQ,QAAQowB,GAAE7gC,EAAEygC,GAAGr8B,EAAEs8B,GAAEv8B,CAAC,CAAC2+B,GAAGvkC,EAAM,MAAM,KAAoB,KAAfyB,EAAE8+B,eAAoB,OAAO7+B,GAAGA,EAAEgQ,OAAOjQ,EAAE6gC,GAAE5gC,GAAG6iC,GAAGvkC,EAAM,CAAC,CACvc,SAASukC,GAAGvkC,GAAG,KAAK,OAAOsiC,IAAG,CAAC,IAAIriC,EAAEqiC,GAAE,GAAG,KAAa,KAARriC,EAAE0R,OAAY,CAAC,IAAIzR,EAAED,EAAEwR,UAAU,IAAI,GAAG,KAAa,KAARxR,EAAE0R,OAAY,OAAO1R,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGg8B,IAAGS,GAAG,EAAE3iC,GAAG,MAAM,KAAK,EAAE,IAAIuB,EAAEvB,EAAE+P,UAAU,GAAW,EAAR/P,EAAE0R,QAAUwwB,GAAE,GAAG,OAAOjiC,EAAEsB,EAAE66B,wBAAwB,CAAC,IAAI56B,EAAExB,EAAE6uB,cAAc7uB,EAAEiC,KAAKhC,EAAEwvB,cAAcmL,GAAG56B,EAAEiC,KAAKhC,EAAEwvB,eAAeluB,EAAEy9B,mBAAmBx9B,EAAEvB,EAAE2R,cAAcrQ,EAAEgjC,oCAAoC,CAAC,IAAI9iC,EAAEzB,EAAE8yB,YAAY,OAAOrxB,GAAGwyB,GAAGj0B,EAAEyB,EAAEF,GAAG,MAAM,KAAK,EAAE,IAAIG,EAAE1B,EAAE8yB,YAAY,GAAG,OAAOpxB,EAAE,CAAQ,GAAPzB,EAAE,KAAQ,OAAOD,EAAEgS,MAAM,OAAOhS,EAAEgS,MAAM9L,KAAK,KAAK,EACvf,KAAK,EAAEjG,EAAED,EAAEgS,MAAMjC,UAAUkkB,GAAGj0B,EAAE0B,EAAEzB,EAAE,CAAC,MAAM,KAAK,EAAE,IAAI2F,EAAE5F,EAAE+P,UAAU,GAAG,OAAO9P,GAAW,EAARD,EAAE0R,MAAQ,CAACzR,EAAE2F,EAAE,IAAIC,EAAE7F,EAAEyvB,cAAc,OAAOzvB,EAAEiC,MAAM,IAAK,SAAS,IAAK,QAAQ,IAAK,SAAS,IAAK,WAAW4D,EAAE87B,WAAW1hC,EAAEgmB,QAAQ,MAAM,IAAK,MAAMpgB,EAAE2+B,MAAMvkC,EAAEukC,IAAI3+B,EAAE2+B,KAAK,CAAC,MAAM,KAAK,EAAQ,KAAK,EAAQ,KAAK,GAAyJ,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAhM,KAAK,GAAG,GAAG,OAAOxkC,EAAE4R,cAAc,CAAC,IAAIjM,EAAE3F,EAAEwR,UAAU,GAAG,OAAO7L,EAAE,CAAC,IAAIoL,EAAEpL,EAAEiM,cAAc,GAAG,OAAOb,EAAE,CAAC,IAAIggB,EAAEhgB,EAAEc,WAAW,OAAOkf,GAAGrZ,GAAGqZ,EAAE,CAAC,CAAC,CAAC,MAC5c,QAAQ,MAAM/rB,MAAMlF,EAAE,MAAOoiC,IAAW,IAARliC,EAAE0R,OAAWkxB,GAAG5iC,EAAE,CAAC,MAAMgxB,GAAGuR,GAAEviC,EAAEA,EAAEyR,OAAOuf,EAAE,CAAC,CAAC,GAAGhxB,IAAID,EAAE,CAACsiC,GAAE,KAAK,KAAK,CAAa,GAAG,QAAfpiC,EAAED,EAAEiS,SAAoB,CAAChS,EAAEwR,OAAOzR,EAAEyR,OAAO4wB,GAAEpiC,EAAE,KAAK,CAACoiC,GAAEriC,EAAEyR,MAAM,CAAC,CAAC,SAASwyB,GAAGlkC,GAAG,KAAK,OAAOsiC,IAAG,CAAC,IAAIriC,EAAEqiC,GAAE,GAAGriC,IAAID,EAAE,CAACsiC,GAAE,KAAK,KAAK,CAAC,IAAIpiC,EAAED,EAAEiS,QAAQ,GAAG,OAAOhS,EAAE,CAACA,EAAEwR,OAAOzR,EAAEyR,OAAO4wB,GAAEpiC,EAAE,KAAK,CAACoiC,GAAEriC,EAAEyR,MAAM,CAAC,CACvS,SAAS4yB,GAAGtkC,GAAG,KAAK,OAAOsiC,IAAG,CAAC,IAAIriC,EAAEqiC,GAAE,IAAI,OAAOriC,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,IAAIjG,EAAED,EAAEyR,OAAO,IAAIkxB,GAAG,EAAE3iC,EAAE,CAAC,MAAM6F,GAAG08B,GAAEviC,EAAEC,EAAE4F,EAAE,CAAC,MAAM,KAAK,EAAE,IAAItE,EAAEvB,EAAE+P,UAAU,GAAG,oBAAoBxO,EAAE66B,kBAAkB,CAAC,IAAI56B,EAAExB,EAAEyR,OAAO,IAAIlQ,EAAE66B,mBAAmB,CAAC,MAAMv2B,GAAG08B,GAAEviC,EAAEwB,EAAEqE,EAAE,CAAC,CAAC,IAAIpE,EAAEzB,EAAEyR,OAAO,IAAImxB,GAAG5iC,EAAE,CAAC,MAAM6F,GAAG08B,GAAEviC,EAAEyB,EAAEoE,EAAE,CAAC,MAAM,KAAK,EAAE,IAAInE,EAAE1B,EAAEyR,OAAO,IAAImxB,GAAG5iC,EAAE,CAAC,MAAM6F,GAAG08B,GAAEviC,EAAE0B,EAAEmE,EAAE,EAAE,CAAC,MAAMA,GAAG08B,GAAEviC,EAAEA,EAAEyR,OAAO5L,EAAE,CAAC,GAAG7F,IAAID,EAAE,CAACsiC,GAAE,KAAK,KAAK,CAAC,IAAIz8B,EAAE5F,EAAEiS,QAAQ,GAAG,OAAOrM,EAAE,CAACA,EAAE6L,OAAOzR,EAAEyR,OAAO4wB,GAAEz8B,EAAE,KAAK,CAACy8B,GAAEriC,EAAEyR,MAAM,CAAC,CAC7d,IAwBkNgzB,GAxB9MC,GAAG5wB,KAAK6wB,KAAKC,GAAGphC,EAAG2xB,uBAAuB0P,GAAGrhC,EAAGo6B,kBAAkBkH,GAAGthC,EAAGoU,wBAAwBgc,GAAE,EAAE6D,GAAE,KAAKsN,GAAE,KAAKC,GAAE,EAAEtG,GAAG,EAAED,GAAGxS,GAAG,GAAG4V,GAAE,EAAEoD,GAAG,KAAKjR,GAAG,EAAEkR,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,GAAG,KAAKrB,GAAG,EAAElC,GAAGwD,IAASC,GAAG,KAAKxI,IAAG,EAAGC,GAAG,KAAKI,GAAG,KAAKoI,IAAG,EAAGC,GAAG,KAAKC,GAAG,EAAEC,GAAG,EAAEC,GAAG,KAAKC,IAAI,EAAEC,GAAG,EAAE,SAASvM,KAAI,OAAO,KAAO,EAAF3F,IAAK/gB,MAAK,IAAIgzB,GAAGA,GAAGA,GAAGhzB,IAAG,CAChU,SAASumB,GAAGr5B,GAAG,OAAG,KAAY,EAAPA,EAAEsvB,MAAe,EAAK,KAAO,EAAFuE,KAAM,IAAIoR,GAASA,IAAGA,GAAK,OAAOnV,GAAG9X,YAAkB,IAAI+tB,KAAKA,GAAG/wB,MAAM+wB,IAAU,KAAP/lC,EAAEqV,IAAkBrV,EAAiBA,OAAE,KAAjBA,EAAEa,OAAOohB,OAAmB,GAAG1J,GAAGvY,EAAEkC,KAAc,CAAC,SAAS81B,GAAGh4B,EAAEC,EAAEC,EAAEsB,GAAG,GAAG,GAAGokC,GAAG,MAAMA,GAAG,EAAEC,GAAG,KAAK5gC,MAAMlF,EAAE,MAAMmV,GAAGlV,EAAEE,EAAEsB,GAAM,KAAO,EAAFqyB,KAAM7zB,IAAI03B,KAAE13B,IAAI03B,KAAI,KAAO,EAAF7D,MAAOsR,IAAIjlC,GAAG,IAAI4hC,IAAGkE,GAAGhmC,EAAEilC,KAAIgB,GAAGjmC,EAAEwB,GAAG,IAAItB,GAAG,IAAI2zB,IAAG,KAAY,EAAP5zB,EAAEqvB,QAAUyS,GAAGjvB,KAAI,IAAIya,IAAIG,MAAK,CAC1Y,SAASuY,GAAGjmC,EAAEC,GAAG,IAAIC,EAAEF,EAAEkmC,cA3MzB,SAAYlmC,EAAEC,GAAG,IAAI,IAAIC,EAAEF,EAAE0U,eAAelT,EAAExB,EAAE2U,YAAYlT,EAAEzB,EAAEmmC,gBAAgBzkC,EAAE1B,EAAEyU,aAAa,EAAE/S,GAAG,CAAC,IAAIC,EAAE,GAAGmS,GAAGpS,GAAGmE,EAAE,GAAGlE,EAAEmE,EAAErE,EAAEE,IAAO,IAAImE,EAAM,KAAKD,EAAE3F,IAAI,KAAK2F,EAAErE,KAAGC,EAAEE,GAAGmT,GAAGjP,EAAE5F,IAAQ6F,GAAG7F,IAAID,EAAEomC,cAAcvgC,GAAGnE,IAAImE,CAAC,CAAC,CA2MnLwgC,CAAGrmC,EAAEC,GAAG,IAAIuB,EAAEgT,GAAGxU,EAAEA,IAAI03B,GAAEuN,GAAE,GAAG,GAAG,IAAIzjC,EAAE,OAAOtB,GAAGsS,GAAGtS,GAAGF,EAAEkmC,aAAa,KAAKlmC,EAAEsmC,iBAAiB,OAAO,GAAGrmC,EAAEuB,GAAGA,EAAExB,EAAEsmC,mBAAmBrmC,EAAE,CAAgB,GAAf,MAAMC,GAAGsS,GAAGtS,GAAM,IAAID,EAAE,IAAID,EAAEmG,IA5IsJ,SAAYnG,GAAGutB,IAAG,EAAGE,GAAGztB,EAAE,CA4I5KumC,CAAGC,GAAG7d,KAAK,KAAK3oB,IAAIytB,GAAG+Y,GAAG7d,KAAK,KAAK3oB,IAAIirB,IAAG,WAAW,KAAO,EAAF4I,KAAMnG,IAAI,IAAGxtB,EAAE,SAAS,CAAC,OAAOoV,GAAG9T,IAAI,KAAK,EAAEtB,EAAEgT,GAAG,MAAM,KAAK,EAAEhT,EAAEkT,GAAG,MAAM,KAAK,GAAwC,QAAQlT,EAAEoT,SAApC,KAAK,UAAUpT,EAAEwT,GAAsBxT,EAAEumC,GAAGvmC,EAAEwmC,GAAG/d,KAAK,KAAK3oB,GAAG,CAACA,EAAEsmC,iBAAiBrmC,EAAED,EAAEkmC,aAAahmC,CAAC,CAAC,CAC7c,SAASwmC,GAAG1mC,EAAEC,GAAc,GAAX6lC,IAAI,EAAEC,GAAG,EAAK,KAAO,EAAFlS,IAAK,MAAM5uB,MAAMlF,EAAE,MAAM,IAAIG,EAAEF,EAAEkmC,aAAa,GAAGS,MAAM3mC,EAAEkmC,eAAehmC,EAAE,OAAO,KAAK,IAAIsB,EAAEgT,GAAGxU,EAAEA,IAAI03B,GAAEuN,GAAE,GAAG,GAAG,IAAIzjC,EAAE,OAAO,KAAK,GAAG,KAAO,GAAFA,IAAO,KAAKA,EAAExB,EAAEomC,eAAenmC,EAAEA,EAAE2mC,GAAG5mC,EAAEwB,OAAO,CAACvB,EAAEuB,EAAE,IAAIC,EAAEoyB,GAAEA,IAAG,EAAE,IAAInyB,EAAEmlC,KAAgD,IAAxCnP,KAAI13B,GAAGilC,KAAIhlC,IAAEulC,GAAG,KAAKzD,GAAGjvB,KAAI,IAAIg0B,GAAG9mC,EAAEC,UAAU8mC,KAAK,KAAK,CAAC,MAAMlhC,GAAGmhC,GAAGhnC,EAAE6F,EAAE,CAAU8rB,KAAKkT,GAAG1yB,QAAQzQ,EAAEmyB,GAAEpyB,EAAE,OAAOujC,GAAE/kC,EAAE,GAAGy3B,GAAE,KAAKuN,GAAE,EAAEhlC,EAAE6hC,GAAE,CAAC,GAAG,IAAI7hC,EAAE,CAAyC,GAAxC,IAAIA,IAAY,KAARwB,EAAEsT,GAAG/U,MAAWwB,EAAEC,EAAExB,EAAEgnC,GAAGjnC,EAAEyB,KAAQ,IAAIxB,EAAE,MAAMC,EAAEglC,GAAG4B,GAAG9mC,EAAE,GAAGgmC,GAAGhmC,EAAEwB,GAAGykC,GAAGjmC,EAAE8S,MAAK5S,EAAE,GAAG,IAAID,EAAE+lC,GAAGhmC,EAAEwB,OAChf,CAAuB,GAAtBC,EAAEzB,EAAEmS,QAAQV,UAAa,KAAO,GAAFjQ,KAGnC,SAAYxB,GAAG,IAAI,IAAIC,EAAED,IAAI,CAAC,GAAW,MAARC,EAAE0R,MAAY,CAAC,IAAIzR,EAAED,EAAE8yB,YAAY,GAAG,OAAO7yB,GAAe,QAAXA,EAAEA,EAAE23B,QAAiB,IAAI,IAAIr2B,EAAE,EAAEA,EAAEtB,EAAEE,OAAOoB,IAAI,CAAC,IAAIC,EAAEvB,EAAEsB,GAAGE,EAAED,EAAE81B,YAAY91B,EAAEA,EAAEkG,MAAM,IAAI,IAAI4b,GAAG7hB,IAAID,GAAG,OAAM,CAAE,CAAC,MAAME,GAAG,OAAM,CAAE,CAAC,CAAC,CAAW,GAAVzB,EAAED,EAAEgS,MAAwB,MAAfhS,EAAEsgC,cAAoB,OAAOrgC,EAAEA,EAAEwR,OAAOzR,EAAEA,EAAEC,MAAM,CAAC,GAAGD,IAAID,EAAE,MAAM,KAAK,OAAOC,EAAEiS,SAAS,CAAC,GAAG,OAAOjS,EAAEyR,QAAQzR,EAAEyR,SAAS1R,EAAE,OAAM,EAAGC,EAAEA,EAAEyR,MAAM,CAACzR,EAAEiS,QAAQR,OAAOzR,EAAEyR,OAAOzR,EAAEA,EAAEiS,OAAO,CAAC,CAAC,OAAM,CAAE,CAHvXg1B,CAAGzlC,KAAe,KAAVxB,EAAE2mC,GAAG5mC,EAAEwB,MAAmB,KAARE,EAAEqT,GAAG/U,MAAWwB,EAAEE,EAAEzB,EAAEgnC,GAAGjnC,EAAE0B,KAAK,IAAIzB,GAAG,MAAMC,EAAEglC,GAAG4B,GAAG9mC,EAAE,GAAGgmC,GAAGhmC,EAAEwB,GAAGykC,GAAGjmC,EAAE8S,MAAK5S,EAAqC,OAAnCF,EAAEmnC,aAAa1lC,EAAEzB,EAAEonC,cAAc5lC,EAASvB,GAAG,KAAK,EAAE,KAAK,EAAE,MAAMgF,MAAMlF,EAAE,MAAM,KAAK,EAC8B,KAAK,EAAEsnC,GAAGrnC,EAAEslC,GAAGE,IAAI,MAD7B,KAAK,EAAU,GAARQ,GAAGhmC,EAAEwB,IAAS,UAAFA,KAAeA,GAAiB,IAAbvB,EAAEgkC,GAAG,IAAInxB,MAAU,CAAC,GAAG,IAAI0B,GAAGxU,EAAE,GAAG,MAAyB,KAAnByB,EAAEzB,EAAE0U,gBAAqBlT,KAAKA,EAAE,CAACg4B,KAAIx5B,EAAE2U,aAAa3U,EAAE0U,eAAejT,EAAE,KAAK,CAACzB,EAAEsnC,cAAc3c,GAAG0c,GAAG1e,KAAK,KAAK3oB,EAAEslC,GAAGE,IAAIvlC,GAAG,KAAK,CAAConC,GAAGrnC,EAAEslC,GAAGE,IAAI,MAAM,KAAK,EAAU,GAARQ,GAAGhmC,EAAEwB,IAAS,QAAFA,KAC9eA,EAAE,MAAqB,IAAfvB,EAAED,EAAEmV,WAAe1T,GAAG,EAAE,EAAED,GAAG,CAAC,IAAIG,EAAE,GAAGmS,GAAGtS,GAAGE,EAAE,GAAGC,GAAEA,EAAE1B,EAAE0B,IAAKF,IAAIA,EAAEE,GAAGH,IAAIE,CAAC,CAAqG,GAApGF,EAAEC,EAAqG,IAA3FD,GAAG,KAAXA,EAAEsR,KAAItR,GAAW,IAAI,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKA,EAAE,KAAK,IAAIA,EAAE,IAAI,KAAKA,EAAE,KAAK,KAAKmjC,GAAGnjC,EAAE,OAAOA,GAAU,CAACxB,EAAEsnC,cAAc3c,GAAG0c,GAAG1e,KAAK,KAAK3oB,EAAEslC,GAAGE,IAAIhkC,GAAG,KAAK,CAAC6lC,GAAGrnC,EAAEslC,GAAGE,IAAI,MAA+B,QAAQ,MAAMvgC,MAAMlF,EAAE,MAAO,CAAC,CAAW,OAAVkmC,GAAGjmC,EAAE8S,MAAY9S,EAAEkmC,eAAehmC,EAAEwmC,GAAG/d,KAAK,KAAK3oB,GAAG,IAAI,CACrX,SAASinC,GAAGjnC,EAAEC,GAAG,IAAIC,EAAEmlC,GAA2G,OAAxGrlC,EAAEmS,QAAQN,cAAcqF,eAAe4vB,GAAG9mC,EAAEC,GAAG0R,OAAO,KAAe,KAAV3R,EAAE4mC,GAAG5mC,EAAEC,MAAWA,EAAEqlC,GAAGA,GAAGplC,EAAE,OAAOD,GAAGmhC,GAAGnhC,IAAWD,CAAC,CAAC,SAASohC,GAAGphC,GAAG,OAAOslC,GAAGA,GAAGtlC,EAAEslC,GAAGn1B,KAAKY,MAAMu0B,GAAGtlC,EAAE,CAE5L,SAASgmC,GAAGhmC,EAAEC,GAAuD,IAApDA,IAAImlC,GAAGnlC,IAAIklC,GAAGnlC,EAAE0U,gBAAgBzU,EAAED,EAAE2U,cAAc1U,EAAMD,EAAEA,EAAEmmC,gBAAgB,EAAElmC,GAAG,CAAC,IAAIC,EAAE,GAAG4T,GAAG7T,GAAGuB,EAAE,GAAGtB,EAAEF,EAAEE,IAAI,EAAED,IAAIuB,CAAC,CAAC,CAAC,SAASglC,GAAGxmC,GAAG,GAAG,KAAO,EAAF6zB,IAAK,MAAM5uB,MAAMlF,EAAE,MAAM4mC,KAAK,IAAI1mC,EAAEuU,GAAGxU,EAAE,GAAG,GAAG,KAAO,EAAFC,GAAK,OAAOgmC,GAAGjmC,EAAE8S,MAAK,KAAK,IAAI5S,EAAE0mC,GAAG5mC,EAAEC,GAAG,GAAG,IAAID,EAAEmG,KAAK,IAAIjG,EAAE,CAAC,IAAIsB,EAAEuT,GAAG/U,GAAG,IAAIwB,IAAIvB,EAAEuB,EAAEtB,EAAE+mC,GAAGjnC,EAAEwB,GAAG,CAAC,GAAG,IAAItB,EAAE,MAAMA,EAAEglC,GAAG4B,GAAG9mC,EAAE,GAAGgmC,GAAGhmC,EAAEC,GAAGgmC,GAAGjmC,EAAE8S,MAAK5S,EAAE,GAAG,IAAIA,EAAE,MAAM+E,MAAMlF,EAAE,MAAiF,OAA3EC,EAAEmnC,aAAannC,EAAEmS,QAAQV,UAAUzR,EAAEonC,cAAcnnC,EAAEonC,GAAGrnC,EAAEslC,GAAGE,IAAIS,GAAGjmC,EAAE8S,MAAY,IAAI,CACvd,SAASy0B,GAAGvnC,EAAEC,GAAG,IAAIC,EAAE2zB,GAAEA,IAAG,EAAE,IAAI,OAAO7zB,EAAEC,EAAE,CAAC,QAAY,KAAJ4zB,GAAE3zB,KAAU6hC,GAAGjvB,KAAI,IAAIya,IAAIG,KAAK,CAAC,CAAC,SAAS8Z,GAAGxnC,GAAG,OAAO0lC,IAAI,IAAIA,GAAGv/B,KAAK,KAAO,EAAF0tB,KAAM8S,KAAK,IAAI1mC,EAAE4zB,GAAEA,IAAG,EAAE,IAAI3zB,EAAE6kC,GAAG/sB,WAAWxW,EAAE6T,GAAE,IAAI,GAAG0vB,GAAG/sB,WAAW,KAAK3C,GAAE,EAAErV,EAAE,OAAOA,GAAG,CAAC,QAAQqV,GAAE7T,EAAEujC,GAAG/sB,WAAW9X,EAAM,KAAO,GAAX2zB,GAAE5zB,KAAaytB,IAAI,CAAC,CAAC,SAASsU,KAAKrD,GAAGD,GAAGvsB,QAAQga,GAAEuS,GAAG,CAChT,SAASoI,GAAG9mC,EAAEC,GAAGD,EAAEmnC,aAAa,KAAKnnC,EAAEonC,cAAc,EAAE,IAAIlnC,EAAEF,EAAEsnC,cAAiD,IAAlC,IAAIpnC,IAAIF,EAAEsnC,eAAe,EAAEzc,GAAG3qB,IAAO,OAAO8kC,GAAE,IAAI9kC,EAAE8kC,GAAEtzB,OAAO,OAAOxR,GAAG,CAAC,IAAIsB,EAAEtB,EAAQ,OAANquB,GAAG/sB,GAAUA,EAAE2E,KAAK,KAAK,EAA6B,QAA3B3E,EAAEA,EAAEU,KAAK4qB,yBAA4B,IAAStrB,GAAGurB,KAAK,MAAM,KAAK,EAAE2H,KAAKvI,GAAEI,IAAIJ,GAAEG,IAAG2I,KAAK,MAAM,KAAK,EAAEL,GAAGpzB,GAAG,MAAM,KAAK,EAAEkzB,KAAK,MAAM,KAAK,GAAc,KAAK,GAAGvI,GAAE0I,IAAG,MAAM,KAAK,GAAGjD,GAAGpwB,EAAEU,KAAKqE,UAAU,MAAM,KAAK,GAAG,KAAK,GAAGy7B,KAAK9hC,EAAEA,EAAEwR,MAAM,CAAqE,GAApEgmB,GAAE13B,EAAEglC,GAAEhlC,EAAEywB,GAAGzwB,EAAEmS,QAAQ,MAAM8yB,GAAEtG,GAAG1+B,EAAE6hC,GAAE,EAAEoD,GAAG,KAAKE,GAAGD,GAAGlR,GAAG,EAAEqR,GAAGD,GAAG,KAAQ,OAAO7S,GAAG,CAAC,IAAIvyB,EAC1f,EAAEA,EAAEuyB,GAAGpyB,OAAOH,IAAI,GAA2B,QAAhBuB,GAARtB,EAAEsyB,GAAGvyB,IAAO0yB,aAAqB,CAACzyB,EAAEyyB,YAAY,KAAK,IAAIlxB,EAAED,EAAE2vB,KAAKzvB,EAAExB,EAAEkzB,QAAQ,GAAG,OAAO1xB,EAAE,CAAC,IAAIC,EAAED,EAAEyvB,KAAKzvB,EAAEyvB,KAAK1vB,EAAED,EAAE2vB,KAAKxvB,CAAC,CAACzB,EAAEkzB,QAAQ5xB,CAAC,CAACgxB,GAAG,IAAI,CAAC,OAAOxyB,CAAC,CAC3K,SAASgnC,GAAGhnC,EAAEC,GAAG,OAAE,CAAC,IAAIC,EAAE8kC,GAAE,IAAuB,GAAnBrT,KAAKwD,GAAGhjB,QAAQikB,GAAMV,GAAG,CAAC,IAAI,IAAIl0B,EAAE+zB,GAAE1jB,cAAc,OAAOrQ,GAAG,CAAC,IAAIC,EAAED,EAAEg1B,MAAM,OAAO/0B,IAAIA,EAAE2xB,QAAQ,MAAM5xB,EAAEA,EAAE2vB,IAAI,CAACuE,IAAG,CAAE,CAA4C,GAA3CJ,GAAG,EAAEG,GAAED,GAAED,GAAE,KAAKI,IAAG,EAAGC,GAAG,EAAEkP,GAAG3yB,QAAQ,KAAQ,OAAOjS,GAAG,OAAOA,EAAEwR,OAAO,CAACowB,GAAE,EAAEoD,GAAGjlC,EAAE+kC,GAAE,KAAK,KAAK,CAAChlC,EAAE,CAAC,IAAI0B,EAAE1B,EAAE2B,EAAEzB,EAAEwR,OAAO7L,EAAE3F,EAAE4F,EAAE7F,EAAqB,GAAnBA,EAAEglC,GAAEp/B,EAAE8L,OAAO,MAAS,OAAO7L,GAAG,kBAAkBA,GAAG,oBAAoBA,EAAEslB,KAAK,CAAC,IAAIxlB,EAAEE,EAAEkL,EAAEnL,EAAEmrB,EAAEhgB,EAAE7K,IAAI,GAAG,KAAY,EAAP6K,EAAEse,QAAU,IAAI0B,GAAG,KAAKA,GAAG,KAAKA,GAAG,CAAC,IAAIC,EAAEjgB,EAAES,UAAUwf,GAAGjgB,EAAE+hB,YAAY9B,EAAE8B,YAAY/hB,EAAEa,cAAcof,EAAEpf,cACxeb,EAAEmhB,MAAMlB,EAAEkB,QAAQnhB,EAAE+hB,YAAY,KAAK/hB,EAAEa,cAAc,KAAK,CAAC,IAAIqf,EAAEwM,GAAG/7B,GAAG,GAAG,OAAOuvB,EAAE,CAACA,EAAEvf,QAAQ,IAAIgsB,GAAGzM,EAAEvvB,EAAEkE,EAAEnE,EAAEzB,GAAU,EAAPixB,EAAE5B,MAAQiO,GAAG77B,EAAEkE,EAAE3F,GAAO6F,EAAEF,EAAE,IAAIkjB,GAAZ7oB,EAAEixB,GAAc6B,YAAY,GAAG,OAAOjK,EAAE,CAAC,IAAIC,EAAE,IAAIxoB,IAAIwoB,EAAEpoB,IAAImF,GAAG7F,EAAE8yB,YAAYhK,CAAC,MAAMD,EAAEnoB,IAAImF,GAAG,MAAM9F,CAAC,CAAM,GAAG,KAAO,EAAFC,GAAK,CAACs9B,GAAG77B,EAAEkE,EAAE3F,GAAGkgC,KAAK,MAAMngC,CAAC,CAAC8F,EAAEb,MAAMlF,EAAE,KAAM,MAAM,GAAG2uB,IAAU,EAAP7oB,EAAEypB,KAAO,CAAC,IAAItG,EAAE0U,GAAG/7B,GAAG,GAAG,OAAOqnB,EAAE,CAAC,KAAa,MAARA,EAAErX,SAAeqX,EAAErX,OAAO,KAAKgsB,GAAG3U,EAAErnB,EAAEkE,EAAEnE,EAAEzB,GAAG4vB,GAAGyM,GAAGx2B,EAAED,IAAI,MAAM7F,CAAC,CAAC,CAAC0B,EAAEoE,EAAEw2B,GAAGx2B,EAAED,GAAG,IAAIi8B,KAAIA,GAAE,GAAG,OAAOuD,GAAGA,GAAG,CAAC3jC,GAAG2jC,GAAGl1B,KAAKzO,GAAGA,EAAEC,EAAE,EAAE,CAAC,OAAOD,EAAEyE,KAAK,KAAK,EAAEzE,EAAEiQ,OAAO,MACpf1R,IAAIA,EAAEyB,EAAEywB,OAAOlyB,EAAkB8zB,GAAGryB,EAAbq7B,GAAGr7B,EAAEoE,EAAE7F,IAAW,MAAMD,EAAE,KAAK,EAAE6F,EAAEC,EAAE,IAAIqjB,EAAEznB,EAAEQ,KAAKgnB,EAAExnB,EAAEsO,UAAU,GAAG,KAAa,IAARtO,EAAEiQ,SAAa,oBAAoBwX,EAAEgU,0BAA0B,OAAOjU,GAAG,oBAAoBA,EAAEkU,oBAAoB,OAAOC,KAAKA,GAAGhV,IAAIa,KAAK,CAACxnB,EAAEiQ,OAAO,MAAM1R,IAAIA,EAAEyB,EAAEywB,OAAOlyB,EAAkB8zB,GAAGryB,EAAbw7B,GAAGx7B,EAAEmE,EAAE5F,IAAW,MAAMD,CAAC,EAAE0B,EAAEA,EAAEgQ,MAAM,OAAO,OAAOhQ,EAAE,CAAC+lC,GAAGvnC,EAAE,CAAC,MAAMwpB,GAAIzpB,EAAEypB,EAAGsb,KAAI9kC,GAAG,OAAOA,IAAI8kC,GAAE9kC,EAAEA,EAAEwR,QAAQ,QAAQ,CAAC,KAAK,CAAS,CAAC,SAASm1B,KAAK,IAAI7mC,EAAE6kC,GAAG1yB,QAAsB,OAAd0yB,GAAG1yB,QAAQikB,GAAU,OAAOp2B,EAAEo2B,GAAGp2B,CAAC,CACrd,SAASmgC,KAAQ,IAAI2B,IAAG,IAAIA,IAAG,IAAIA,KAAEA,GAAE,GAAE,OAAOpK,IAAG,KAAQ,UAAHzD,KAAe,KAAQ,UAAHkR,KAAea,GAAGtO,GAAEuN,GAAE,CAAC,SAAS2B,GAAG5mC,EAAEC,GAAG,IAAIC,EAAE2zB,GAAEA,IAAG,EAAE,IAAIryB,EAAEqlC,KAAqC,IAA7BnP,KAAI13B,GAAGilC,KAAIhlC,IAAEulC,GAAG,KAAKsB,GAAG9mC,EAAEC,UAAUynC,KAAK,KAAK,CAAC,MAAMjmC,GAAGulC,GAAGhnC,EAAEyB,EAAE,CAAgC,GAAtBkwB,KAAKkC,GAAE3zB,EAAE2kC,GAAG1yB,QAAQ3Q,EAAK,OAAOwjC,GAAE,MAAM//B,MAAMlF,EAAE,MAAiB,OAAX23B,GAAE,KAAKuN,GAAE,EAASnD,EAAC,CAAC,SAAS4F,KAAK,KAAK,OAAO1C,IAAG2C,GAAG3C,GAAE,CAAC,SAAS+B,KAAK,KAAK,OAAO/B,KAAItyB,MAAMi1B,GAAG3C,GAAE,CAAC,SAAS2C,GAAG3nC,GAAG,IAAIC,EAAEykC,GAAG1kC,EAAEyR,UAAUzR,EAAE2+B,IAAI3+B,EAAE0vB,cAAc1vB,EAAEivB,aAAa,OAAOhvB,EAAEwnC,GAAGznC,GAAGglC,GAAE/kC,EAAE6kC,GAAG3yB,QAAQ,IAAI,CAC1d,SAASs1B,GAAGznC,GAAG,IAAIC,EAAED,EAAE,EAAE,CAAC,IAAIE,EAAED,EAAEwR,UAAqB,GAAXzR,EAAEC,EAAEyR,OAAU,KAAa,MAARzR,EAAE0R,QAAc,GAAgB,QAAbzR,EAAEihC,GAAGjhC,EAAED,EAAE0+B,KAAkB,YAAJqG,GAAE9kC,OAAc,CAAW,GAAG,QAAbA,EAAE+hC,GAAG/hC,EAAED,IAAmC,OAAnBC,EAAEyR,OAAO,WAAMqzB,GAAE9kC,GAAS,GAAG,OAAOF,EAAmE,OAAX8hC,GAAE,OAAEkD,GAAE,MAA5DhlC,EAAE2R,OAAO,MAAM3R,EAAEugC,aAAa,EAAEvgC,EAAE+uB,UAAU,IAA4B,CAAa,GAAG,QAAf9uB,EAAEA,EAAEiS,SAAyB,YAAJ8yB,GAAE/kC,GAAS+kC,GAAE/kC,EAAED,CAAC,OAAO,OAAOC,GAAG,IAAI6hC,KAAIA,GAAE,EAAE,CAAC,SAASuF,GAAGrnC,EAAEC,EAAEC,GAAG,IAAIsB,EAAE6T,GAAE5T,EAAEsjC,GAAG/sB,WAAW,IAAI+sB,GAAG/sB,WAAW,KAAK3C,GAAE,EAC3Y,SAAYrV,EAAEC,EAAEC,EAAEsB,GAAG,GAAGmlC,WAAW,OAAOjB,IAAI,GAAG,KAAO,EAAF7R,IAAK,MAAM5uB,MAAMlF,EAAE,MAAMG,EAAEF,EAAEmnC,aAAa,IAAI1lC,EAAEzB,EAAEonC,cAAc,GAAG,OAAOlnC,EAAE,OAAO,KAA2C,GAAtCF,EAAEmnC,aAAa,KAAKnnC,EAAEonC,cAAc,EAAKlnC,IAAIF,EAAEmS,QAAQ,MAAMlN,MAAMlF,EAAE,MAAMC,EAAEkmC,aAAa,KAAKlmC,EAAEsmC,iBAAiB,EAAE,IAAI5kC,EAAExB,EAAEiyB,MAAMjyB,EAAE6xB,WAA8J,GAzNtT,SAAY/xB,EAAEC,GAAG,IAAIC,EAAEF,EAAEyU,cAAcxU,EAAED,EAAEyU,aAAaxU,EAAED,EAAE0U,eAAe,EAAE1U,EAAE2U,YAAY,EAAE3U,EAAEomC,cAAcnmC,EAAED,EAAE4nC,kBAAkB3nC,EAAED,EAAE4U,gBAAgB3U,EAAEA,EAAED,EAAE6U,cAAc,IAAIrT,EAAExB,EAAEmV,WAAW,IAAInV,EAAEA,EAAEmmC,gBAAgB,EAAEjmC,GAAG,CAAC,IAAIuB,EAAE,GAAGqS,GAAG5T,GAAGwB,EAAE,GAAGD,EAAExB,EAAEwB,GAAG,EAAED,EAAEC,IAAI,EAAEzB,EAAEyB,IAAI,EAAEvB,IAAIwB,CAAC,CAAC,CAyN5GmmC,CAAG7nC,EAAE0B,GAAG1B,IAAI03B,KAAIsN,GAAEtN,GAAE,KAAKuN,GAAE,GAAG,KAAoB,KAAf/kC,EAAEqgC,eAAoB,KAAa,KAARrgC,EAAEyR,QAAa8zB,KAAKA,IAAG,EAAGgB,GAAGnzB,IAAG,WAAgB,OAALqzB,KAAY,IAAI,KAAIjlC,EAAE,KAAa,MAARxB,EAAEyR,OAAgB,KAAoB,MAAfzR,EAAEqgC,eAAqB7+B,EAAE,CAACA,EAAEqjC,GAAG/sB,WAAW+sB,GAAG/sB,WAAW,KAChf,IAAIrW,EAAE0T,GAAEA,GAAE,EAAE,IAAIxP,EAAEguB,GAAEA,IAAG,EAAEiR,GAAG3yB,QAAQ,KA1CpC,SAAYnS,EAAEC,GAAgB,GAAbsqB,GAAGzS,GAAauM,GAAVrkB,EAAEikB,MAAc,CAAC,GAAG,mBAAmBjkB,EAAE,IAAIE,EAAE,CAACykB,MAAM3kB,EAAE6kB,eAAeD,IAAI5kB,EAAE8kB,mBAAmB9kB,EAAE,CAA8C,IAAIwB,GAAjDtB,GAAGA,EAAEF,EAAE2I,gBAAgBzI,EAAE8kB,aAAankB,QAAeokB,cAAc/kB,EAAE+kB,eAAe,GAAGzjB,GAAG,IAAIA,EAAE2jB,WAAW,CAACjlB,EAAEsB,EAAE4jB,WAAW,IAAI3jB,EAAED,EAAE6jB,aAAa3jB,EAAEF,EAAE8jB,UAAU9jB,EAAEA,EAAE+jB,YAAY,IAAIrlB,EAAEwK,SAAShJ,EAAEgJ,QAAQ,CAAC,MAAM0e,GAAGlpB,EAAE,KAAK,MAAMF,CAAC,CAAC,IAAI2B,EAAE,EAAEkE,GAAG,EAAEC,GAAG,EAAEF,EAAE,EAAEoL,EAAE,EAAEggB,EAAEhxB,EAAEixB,EAAE,KAAKhxB,EAAE,OAAO,CAAC,IAAI,IAAIixB,EAAKF,IAAI9wB,GAAG,IAAIuB,GAAG,IAAIuvB,EAAEtmB,WAAW7E,EAAElE,EAAEF,GAAGuvB,IAAItvB,GAAG,IAAIF,GAAG,IAAIwvB,EAAEtmB,WAAW5E,EAAEnE,EAAEH,GAAG,IAAIwvB,EAAEtmB,WAAW/I,GACnfqvB,EAAErmB,UAAUvK,QAAW,QAAQ8wB,EAAEF,EAAE7mB,aAAkB8mB,EAAED,EAAEA,EAAEE,EAAE,OAAO,CAAC,GAAGF,IAAIhxB,EAAE,MAAMC,EAA8C,GAA5CgxB,IAAI/wB,KAAK0F,IAAInE,IAAIoE,EAAElE,GAAGsvB,IAAIvvB,KAAKsP,IAAIxP,IAAIsE,EAAEnE,GAAM,QAAQuvB,EAAEF,EAAEnN,aAAa,MAAUoN,GAAJD,EAAEC,GAAMvhB,UAAU,CAACshB,EAAEE,CAAC,CAAChxB,GAAG,IAAI2F,IAAI,IAAIC,EAAE,KAAK,CAAC6e,MAAM9e,EAAE+e,IAAI9e,EAAE,MAAM5F,EAAE,IAAI,CAACA,EAAEA,GAAG,CAACykB,MAAM,EAAEC,IAAI,EAAE,MAAM1kB,EAAE,KAA+C,IAA1CsqB,GAAG,CAAChG,YAAYxkB,EAAEykB,eAAevkB,GAAG4X,IAAG,EAAOwqB,GAAEriC,EAAE,OAAOqiC,IAAG,GAAOtiC,GAAJC,EAAEqiC,IAAMrwB,MAAM,KAAoB,KAAfhS,EAAEsgC,eAAoB,OAAOvgC,EAAEA,EAAE0R,OAAOzR,EAAEqiC,GAAEtiC,OAAO,KAAK,OAAOsiC,IAAG,CAACriC,EAAEqiC,GAAE,IAAI,IAAIxZ,EAAE7oB,EAAEwR,UAAU,GAAG,KAAa,KAARxR,EAAE0R,OAAY,OAAO1R,EAAEkG,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GACvK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,GAAG,MAA3W,KAAK,EAAE,GAAG,OAAO2iB,EAAE,CAAC,IAAIC,EAAED,EAAE4G,cAAc1G,EAAEF,EAAEjX,cAAcoX,EAAEhpB,EAAE+P,UAAUmZ,EAAEF,EAAEiT,wBAAwBj8B,EAAE6uB,cAAc7uB,EAAEiC,KAAK6mB,EAAE8R,GAAG56B,EAAEiC,KAAK6mB,GAAGC,GAAGC,EAAEub,oCAAoCrb,CAAC,CAAC,MAAM,KAAK,EAAE,IAAID,EAAEjpB,EAAE+P,UAAUmH,cAAc,IAAI+R,EAAExe,SAASwe,EAAExf,YAAY,GAAG,IAAIwf,EAAExe,UAAUwe,EAAExE,iBAAiBwE,EAAE9e,YAAY8e,EAAExE,iBAAiB,MAAyC,QAAQ,MAAMzf,MAAMlF,EAAE,MAAO,CAAC,MAAMqpB,GAAGoZ,GAAEviC,EAAEA,EAAEyR,OAAO0X,EAAE,CAAa,GAAG,QAAfppB,EAAEC,EAAEiS,SAAoB,CAAClS,EAAE0R,OAAOzR,EAAEyR,OAAO4wB,GAAEtiC,EAAE,KAAK,CAACsiC,GAAEriC,EAAEyR,MAAM,CAACoX,EAAE4Z,GAAGA,IAAG,CAAW,CAwCldoF,CAAG9nC,EAAEE,GAAG4jC,GAAG5jC,EAAEF,GAAGukB,GAAGiG,IAAI1S,KAAKyS,GAAGC,GAAGD,GAAG,KAAKvqB,EAAEmS,QAAQjS,EAAEkkC,GAAGlkC,EAAEF,EAAEyB,GAAGmR,KAAKihB,GAAEhuB,EAAEwP,GAAE1T,EAAEojC,GAAG/sB,WAAWtW,CAAC,MAAM1B,EAAEmS,QAAQjS,EAAsF,GAApFulC,KAAKA,IAAG,EAAGC,GAAG1lC,EAAE2lC,GAAGlkC,GAAGC,EAAE1B,EAAEyU,aAAa,IAAI/S,IAAI27B,GAAG,MAhOmJ,SAAYr9B,GAAG,GAAG6T,IAAI,oBAAoBA,GAAGk0B,kBAAkB,IAAIl0B,GAAGk0B,kBAAkBn0B,GAAG5T,OAAE,EAAO,OAAuB,IAAhBA,EAAEmS,QAAQR,OAAW,CAAC,MAAM1R,GAAG,CAAC,CAgOxR+nC,CAAG9nC,EAAE8P,WAAai2B,GAAGjmC,EAAE8S,MAAQ,OAAO7S,EAAE,IAAIuB,EAAExB,EAAEioC,mBAAmB/nC,EAAE,EAAEA,EAAED,EAAEG,OAAOF,IAAIuB,EAAExB,EAAEC,GAAGsB,EAAEC,EAAEkG,MAAM,CAAC21B,eAAe77B,EAAEyD,MAAMs3B,OAAO/6B,EAAE+6B,SAAS,GAAGQ,GAAG,MAAMA,IAAG,EAAGh9B,EAAEi9B,GAAGA,GAAG,KAAKj9B,EAAE,KAAQ,EAAH2lC,KAAO,IAAI3lC,EAAEmG,KAAKwgC,KAAKjlC,EAAE1B,EAAEyU,aAAa,KAAO,EAAF/S,GAAK1B,IAAI6lC,GAAGD,MAAMA,GAAG,EAAEC,GAAG7lC,GAAG4lC,GAAG,EAAElY,IAAgB,CAFxFwa,CAAGloC,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,QAAQujC,GAAG/sB,WAAWvW,EAAE4T,GAAE7T,CAAC,CAAC,OAAO,IAAI,CAGhc,SAASmlC,KAAK,GAAG,OAAOjB,GAAG,CAAC,IAAI1lC,EAAEsV,GAAGqwB,IAAI1lC,EAAE8kC,GAAG/sB,WAAW9X,EAAEmV,GAAE,IAAmC,GAA/B0vB,GAAG/sB,WAAW,KAAK3C,GAAE,GAAGrV,EAAE,GAAGA,EAAK,OAAO0lC,GAAG,IAAIlkC,GAAE,MAAO,CAAmB,GAAlBxB,EAAE0lC,GAAGA,GAAG,KAAKC,GAAG,EAAK,KAAO,EAAF9R,IAAK,MAAM5uB,MAAMlF,EAAE,MAAM,IAAI0B,EAAEoyB,GAAO,IAALA,IAAG,EAAMyO,GAAEtiC,EAAEmS,QAAQ,OAAOmwB,IAAG,CAAC,IAAI5gC,EAAE4gC,GAAE3gC,EAAED,EAAEuQ,MAAM,GAAG,KAAa,GAARqwB,GAAE3wB,OAAU,CAAC,IAAI9L,EAAEnE,EAAEqtB,UAAU,GAAG,OAAOlpB,EAAE,CAAC,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEzF,OAAO0F,IAAI,CAAC,IAAIF,EAAEC,EAAEC,GAAG,IAAIw8B,GAAE18B,EAAE,OAAO08B,IAAG,CAAC,IAAItxB,EAAEsxB,GAAE,OAAOtxB,EAAE7K,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGw8B,GAAG,EAAE3xB,EAAEtP,GAAG,IAAIsvB,EAAEhgB,EAAEiB,MAAM,GAAG,OAAO+e,EAAEA,EAAEtf,OAAOV,EAAEsxB,GAAEtR,OAAO,KAAK,OAAOsR,IAAG,CAAK,IAAIrR,GAARjgB,EAAEsxB,IAAUpwB,QAAQgf,EAAElgB,EAAEU,OAAa,GAANoxB,GAAG9xB,GAAMA,IACnfpL,EAAE,CAAC08B,GAAE,KAAK,KAAK,CAAC,GAAG,OAAOrR,EAAE,CAACA,EAAEvf,OAAOwf,EAAEoR,GAAErR,EAAE,KAAK,CAACqR,GAAEpR,CAAC,CAAC,CAAC,CAAC,IAAIpI,EAAEpnB,EAAE+P,UAAU,GAAG,OAAOqX,EAAE,CAAC,IAAIC,EAAED,EAAE7W,MAAM,GAAG,OAAO8W,EAAE,CAACD,EAAE7W,MAAM,KAAK,EAAE,CAAC,IAAI+W,EAAED,EAAE7W,QAAQ6W,EAAE7W,QAAQ,KAAK6W,EAAEC,CAAC,OAAO,OAAOD,EAAE,CAAC,CAACuZ,GAAE5gC,CAAC,CAAC,CAAC,GAAG,KAAoB,KAAfA,EAAE6+B,eAAoB,OAAO5+B,EAAEA,EAAE+P,OAAOhQ,EAAE4gC,GAAE3gC,OAAO1B,EAAE,KAAK,OAAOqiC,IAAG,CAAK,GAAG,KAAa,MAApB5gC,EAAE4gC,IAAY3wB,OAAY,OAAOjQ,EAAEyE,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGw8B,GAAG,EAAEjhC,EAAEA,EAAEgQ,QAAQ,IAAIuX,EAAEvnB,EAAEwQ,QAAQ,GAAG,OAAO+W,EAAE,CAACA,EAAEvX,OAAOhQ,EAAEgQ,OAAO4wB,GAAErZ,EAAE,MAAMhpB,CAAC,CAACqiC,GAAE5gC,EAAEgQ,MAAM,CAAC,CAAC,IAAIyX,EAAEnpB,EAAEmS,QAAQ,IAAImwB,GAAEnZ,EAAE,OAAOmZ,IAAG,CAAK,IAAIpZ,GAARvnB,EAAE2gC,IAAUrwB,MAAM,GAAG,KAAoB,KAAftQ,EAAE4+B,eAAoB,OAClfrX,EAAEA,EAAExX,OAAO/P,EAAE2gC,GAAEpZ,OAAOjpB,EAAE,IAAI0B,EAAEwnB,EAAE,OAAOmZ,IAAG,CAAK,GAAG,KAAa,MAApBz8B,EAAEy8B,IAAY3wB,OAAY,IAAI,OAAO9L,EAAEM,KAAK,KAAK,EAAE,KAAK,GAAG,KAAK,GAAGy8B,GAAG,EAAE/8B,GAAG,CAAC,MAAM6jB,GAAI8Y,GAAE38B,EAAEA,EAAE6L,OAAOgY,EAAG,CAAC,GAAG7jB,IAAIlE,EAAE,CAAC2gC,GAAE,KAAK,MAAMriC,CAAC,CAAC,IAAImpB,EAAEvjB,EAAEqM,QAAQ,GAAG,OAAOkX,EAAE,CAACA,EAAE1X,OAAO7L,EAAE6L,OAAO4wB,GAAElZ,EAAE,MAAMnpB,CAAC,CAACqiC,GAAEz8B,EAAE6L,MAAM,CAAC,CAAU,GAATmiB,GAAEpyB,EAAEisB,KAAQ7Z,IAAI,oBAAoBA,GAAGs0B,sBAAsB,IAAIt0B,GAAGs0B,sBAAsBv0B,GAAG5T,EAAE,CAAC,MAAM0pB,GAAI,CAACloB,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQ6T,GAAEnV,EAAE6kC,GAAG/sB,WAAW/X,CAAC,CAAC,CAAC,OAAM,CAAE,CAAC,SAASmoC,GAAGpoC,EAAEC,EAAEC,GAAyBF,EAAE4zB,GAAG5zB,EAAjBC,EAAE88B,GAAG/8B,EAAfC,EAAEq8B,GAAGp8B,EAAED,GAAY,GAAY,GAAGA,EAAEu5B,KAAI,OAAOx5B,IAAIkV,GAAGlV,EAAE,EAAEC,GAAGgmC,GAAGjmC,EAAEC,GAAG,CACze,SAASuiC,GAAExiC,EAAEC,EAAEC,GAAG,GAAG,IAAIF,EAAEmG,IAAIiiC,GAAGpoC,EAAEA,EAAEE,QAAQ,KAAK,OAAOD,GAAG,CAAC,GAAG,IAAIA,EAAEkG,IAAI,CAACiiC,GAAGnoC,EAAED,EAAEE,GAAG,KAAK,CAAM,GAAG,IAAID,EAAEkG,IAAI,CAAC,IAAI3E,EAAEvB,EAAE+P,UAAU,GAAG,oBAAoB/P,EAAEiC,KAAKi7B,0BAA0B,oBAAoB37B,EAAE47B,oBAAoB,OAAOC,KAAKA,GAAGhV,IAAI7mB,IAAI,CAAuBvB,EAAE2zB,GAAG3zB,EAAjBD,EAAEk9B,GAAGj9B,EAAfD,EAAEs8B,GAAGp8B,EAAEF,GAAY,GAAY,GAAGA,EAAEw5B,KAAI,OAAOv5B,IAAIiV,GAAGjV,EAAE,EAAED,GAAGimC,GAAGhmC,EAAED,IAAI,KAAK,CAAC,CAACC,EAAEA,EAAEyR,MAAM,CAAC,CACnV,SAAS+rB,GAAGz9B,EAAEC,EAAEC,GAAG,IAAIsB,EAAExB,EAAEw9B,UAAU,OAAOh8B,GAAGA,EAAE+U,OAAOtW,GAAGA,EAAEu5B,KAAIx5B,EAAE2U,aAAa3U,EAAE0U,eAAexU,EAAEw3B,KAAI13B,IAAIilC,GAAE/kC,KAAKA,IAAI,IAAI4hC,IAAG,IAAIA,KAAM,UAAFmD,MAAeA,IAAG,IAAInyB,KAAImxB,GAAG6C,GAAG9mC,EAAE,GAAGolC,IAAIllC,GAAG+lC,GAAGjmC,EAAEC,EAAE,CAAC,SAASooC,GAAGroC,EAAEC,GAAG,IAAIA,IAAI,KAAY,EAAPD,EAAEsvB,MAAQrvB,EAAE,GAAGA,EAAEqU,GAAU,KAAQ,WAAfA,KAAK,MAAuBA,GAAG,WAAW,IAAIpU,EAAEs5B,KAAc,QAAVx5B,EAAE4yB,GAAG5yB,EAAEC,MAAciV,GAAGlV,EAAEC,EAAEC,GAAG+lC,GAAGjmC,EAAEE,GAAG,CAAC,SAASkgC,GAAGpgC,GAAG,IAAIC,EAAED,EAAE6R,cAAc3R,EAAE,EAAE,OAAOD,IAAIC,EAAED,EAAEmvB,WAAWiZ,GAAGroC,EAAEE,EAAE,CACjZ,SAAS0jC,GAAG5jC,EAAEC,GAAG,IAAIC,EAAE,EAAE,OAAOF,EAAEmG,KAAK,KAAK,GAAG,IAAI3E,EAAExB,EAAEgQ,UAAcvO,EAAEzB,EAAE6R,cAAc,OAAOpQ,IAAIvB,EAAEuB,EAAE2tB,WAAW,MAAM,KAAK,GAAG5tB,EAAExB,EAAEgQ,UAAU,MAAM,QAAQ,MAAM/K,MAAMlF,EAAE,MAAO,OAAOyB,GAAGA,EAAE+U,OAAOtW,GAAGooC,GAAGroC,EAAEE,EAAE,CAQqK,SAASumC,GAAGzmC,EAAEC,GAAG,OAAOqS,GAAGtS,EAAEC,EAAE,CACjZ,SAASqoC,GAAGtoC,EAAEC,EAAEC,EAAEsB,GAAGI,KAAKuE,IAAInG,EAAE4B,KAAKuc,IAAIje,EAAE0B,KAAKsQ,QAAQtQ,KAAKqQ,MAAMrQ,KAAK8P,OAAO9P,KAAKoO,UAAUpO,KAAKM,KAAKN,KAAKktB,YAAY,KAAKltB,KAAK4uB,MAAM,EAAE5uB,KAAKouB,IAAI,KAAKpuB,KAAKqtB,aAAahvB,EAAE2B,KAAKqwB,aAAarwB,KAAKiQ,cAAcjQ,KAAKmxB,YAAYnxB,KAAK8tB,cAAc,KAAK9tB,KAAK0tB,KAAK9tB,EAAEI,KAAK2+B,aAAa3+B,KAAK+P,MAAM,EAAE/P,KAAKmtB,UAAU,KAAKntB,KAAKmwB,WAAWnwB,KAAKuwB,MAAM,EAAEvwB,KAAK6P,UAAU,IAAI,CAAC,SAASod,GAAG7uB,EAAEC,EAAEC,EAAEsB,GAAG,OAAO,IAAI8mC,GAAGtoC,EAAEC,EAAEC,EAAEsB,EAAE,CAAC,SAAS08B,GAAGl+B,GAAiB,UAAdA,EAAEA,EAAEkB,aAAuBlB,EAAEuoC,iBAAiB,CAEpd,SAAS9X,GAAGzwB,EAAEC,GAAG,IAAIC,EAAEF,EAAEyR,UACuB,OADb,OAAOvR,IAAGA,EAAE2uB,GAAG7uB,EAAEmG,IAAIlG,EAAED,EAAEme,IAAIne,EAAEsvB,OAAQR,YAAY9uB,EAAE8uB,YAAY5uB,EAAEgC,KAAKlC,EAAEkC,KAAKhC,EAAE8P,UAAUhQ,EAAEgQ,UAAU9P,EAAEuR,UAAUzR,EAAEA,EAAEyR,UAAUvR,IAAIA,EAAE+uB,aAAahvB,EAAEC,EAAEgC,KAAKlC,EAAEkC,KAAKhC,EAAEyR,MAAM,EAAEzR,EAAEqgC,aAAa,EAAErgC,EAAE6uB,UAAU,MAAM7uB,EAAEyR,MAAc,SAAR3R,EAAE2R,MAAezR,EAAE6xB,WAAW/xB,EAAE+xB,WAAW7xB,EAAEiyB,MAAMnyB,EAAEmyB,MAAMjyB,EAAE+R,MAAMjS,EAAEiS,MAAM/R,EAAEwvB,cAAc1vB,EAAE0vB,cAAcxvB,EAAE2R,cAAc7R,EAAE6R,cAAc3R,EAAE6yB,YAAY/yB,EAAE+yB,YAAY9yB,EAAED,EAAEiyB,aAAa/xB,EAAE+xB,aAAa,OAAOhyB,EAAE,KAAK,CAACkyB,MAAMlyB,EAAEkyB,MAAMD,aAAajyB,EAAEiyB,cAC/ehyB,EAAEgS,QAAQlS,EAAEkS,QAAQhS,EAAEswB,MAAMxwB,EAAEwwB,MAAMtwB,EAAE8vB,IAAIhwB,EAAEgwB,IAAW9vB,CAAC,CACxD,SAAS0wB,GAAG5wB,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,GAAG,IAAIC,EAAE,EAAM,GAAJH,EAAExB,EAAK,oBAAoBA,EAAEk+B,GAAGl+B,KAAK2B,EAAE,QAAQ,GAAG,kBAAkB3B,EAAE2B,EAAE,OAAO3B,EAAE,OAAOA,GAAG,KAAK+D,EAAG,OAAOgtB,GAAG7wB,EAAEoJ,SAAS7H,EAAEC,EAAEzB,GAAG,KAAK+D,EAAGrC,EAAE,EAAEF,GAAG,EAAE,MAAM,KAAKwC,EAAG,OAAOjE,EAAE6uB,GAAG,GAAG3uB,EAAED,EAAI,EAAFwB,IAAOqtB,YAAY7qB,EAAGjE,EAAEmyB,MAAMzwB,EAAE1B,EAAE,KAAKqE,EAAG,OAAOrE,EAAE6uB,GAAG,GAAG3uB,EAAED,EAAEwB,IAAKqtB,YAAYzqB,EAAGrE,EAAEmyB,MAAMzwB,EAAE1B,EAAE,KAAKsE,EAAG,OAAOtE,EAAE6uB,GAAG,GAAG3uB,EAAED,EAAEwB,IAAKqtB,YAAYxqB,EAAGtE,EAAEmyB,MAAMzwB,EAAE1B,EAAE,KAAKyE,EAAG,OAAOq7B,GAAG5/B,EAAEuB,EAAEC,EAAEzB,GAAG,QAAQ,GAAG,kBAAkBD,GAAG,OAAOA,EAAE,OAAOA,EAAEsG,UAAU,KAAKpC,EAAGvC,EAAE,GAAG,MAAM3B,EAAE,KAAKmE,EAAGxC,EAAE,EAAE,MAAM3B,EAAE,KAAKoE,EAAGzC,EAAE,GACpf,MAAM3B,EAAE,KAAKuE,EAAG5C,EAAE,GAAG,MAAM3B,EAAE,KAAKwE,EAAG7C,EAAE,GAAGH,EAAE,KAAK,MAAMxB,EAAE,MAAMiF,MAAMlF,EAAE,IAAI,MAAMC,EAAEA,SAASA,EAAE,KAAuD,OAAjDC,EAAE4uB,GAAGltB,EAAEzB,EAAED,EAAEwB,IAAKqtB,YAAY9uB,EAAEC,EAAEiC,KAAKV,EAAEvB,EAAEkyB,MAAMzwB,EAASzB,CAAC,CAAC,SAAS8wB,GAAG/wB,EAAEC,EAAEC,EAAEsB,GAA2B,OAAxBxB,EAAE6uB,GAAG,EAAE7uB,EAAEwB,EAAEvB,IAAKkyB,MAAMjyB,EAASF,CAAC,CAAC,SAAS8/B,GAAG9/B,EAAEC,EAAEC,EAAEsB,GAAuE,OAApExB,EAAE6uB,GAAG,GAAG7uB,EAAEwB,EAAEvB,IAAK6uB,YAAYrqB,EAAGzE,EAAEmyB,MAAMjyB,EAAEF,EAAEgQ,UAAU,CAACg0B,UAAS,GAAWhkC,CAAC,CAAC,SAAS0wB,GAAG1wB,EAAEC,EAAEC,GAA8B,OAA3BF,EAAE6uB,GAAG,EAAE7uB,EAAE,KAAKC,IAAKkyB,MAAMjyB,EAASF,CAAC,CAC5W,SAAS8wB,GAAG9wB,EAAEC,EAAEC,GAA8J,OAA3JD,EAAE4uB,GAAG,EAAE,OAAO7uB,EAAEsJ,SAAStJ,EAAEsJ,SAAS,GAAGtJ,EAAEme,IAAIle,IAAKkyB,MAAMjyB,EAAED,EAAE+P,UAAU,CAACmH,cAAcnX,EAAEmX,cAAcqxB,gBAAgB,KAAK3X,eAAe7wB,EAAE6wB,gBAAuB5wB,CAAC,CACtL,SAASwoC,GAAGzoC,EAAEC,EAAEC,EAAEsB,EAAEC,GAAGG,KAAKuE,IAAIlG,EAAE2B,KAAKuV,cAAcnX,EAAE4B,KAAKulC,aAAavlC,KAAK47B,UAAU57B,KAAKuQ,QAAQvQ,KAAK4mC,gBAAgB,KAAK5mC,KAAK0lC,eAAe,EAAE1lC,KAAKskC,aAAatkC,KAAKw9B,eAAex9B,KAAK0wB,QAAQ,KAAK1wB,KAAK0kC,iBAAiB,EAAE1kC,KAAKuT,WAAWF,GAAG,GAAGrT,KAAKukC,gBAAgBlxB,IAAI,GAAGrT,KAAKgT,eAAehT,KAAKwlC,cAAcxlC,KAAKgmC,iBAAiBhmC,KAAKwkC,aAAaxkC,KAAK+S,YAAY/S,KAAK8S,eAAe9S,KAAK6S,aAAa,EAAE7S,KAAKiT,cAAcI,GAAG,GAAGrT,KAAKg5B,iBAAiBp5B,EAAEI,KAAKqmC,mBAAmBxmC,EAAEG,KAAK8mC,gCAC/e,IAAI,CAAC,SAASC,GAAG3oC,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAgN,OAA7M9F,EAAE,IAAIyoC,GAAGzoC,EAAEC,EAAEC,EAAE2F,EAAEC,GAAG,IAAI7F,GAAGA,EAAE,GAAE,IAAKyB,IAAIzB,GAAG,IAAIA,EAAE,EAAEyB,EAAEmtB,GAAG,EAAE,KAAK,KAAK5uB,GAAGD,EAAEmS,QAAQzQ,EAAEA,EAAEsO,UAAUhQ,EAAE0B,EAAEmQ,cAAc,CAACgU,QAAQrkB,EAAE0V,aAAahX,EAAE0oC,MAAM,KAAKnK,YAAY,KAAKoK,0BAA0B,MAAM/V,GAAGpxB,GAAU1B,CAAC,CACzP,SAAS8oC,GAAG9oC,GAAG,IAAIA,EAAE,OAAOqsB,GAAuBrsB,EAAE,CAAC,GAAGwR,GAA1BxR,EAAEA,EAAEk7B,mBAA8Bl7B,GAAG,IAAIA,EAAEmG,IAAI,MAAMlB,MAAMlF,EAAE,MAAM,IAAIE,EAAED,EAAE,EAAE,CAAC,OAAOC,EAAEkG,KAAK,KAAK,EAAElG,EAAEA,EAAE+P,UAAUsiB,QAAQ,MAAMtyB,EAAE,KAAK,EAAE,GAAG6sB,GAAG5sB,EAAEiC,MAAM,CAACjC,EAAEA,EAAE+P,UAAUod,0CAA0C,MAAMptB,CAAC,EAAEC,EAAEA,EAAEyR,MAAM,OAAO,OAAOzR,GAAG,MAAMgF,MAAMlF,EAAE,KAAM,CAAC,GAAG,IAAIC,EAAEmG,IAAI,CAAC,IAAIjG,EAAEF,EAAEkC,KAAK,GAAG2qB,GAAG3sB,GAAG,OAAO+sB,GAAGjtB,EAAEE,EAAED,EAAE,CAAC,OAAOA,CAAC,CACpW,SAAS8oC,GAAG/oC,EAAEC,EAAEC,EAAEsB,EAAEC,EAAEC,EAAEC,EAAEkE,EAAEC,GAAwK,OAArK9F,EAAE2oC,GAAGzoC,EAAEsB,GAAE,EAAGxB,EAAEyB,EAAEC,EAAEC,EAAEkE,EAAEC,IAAKwsB,QAAQwW,GAAG,MAAM5oC,EAAEF,EAAEmS,SAAsBzQ,EAAE6xB,GAAhB/xB,EAAEg4B,KAAI/3B,EAAE43B,GAAGn5B,KAAeyzB,cAAS,IAAS1zB,GAAG,OAAOA,EAAEA,EAAE,KAAK2zB,GAAG1zB,EAAEwB,EAAED,GAAGzB,EAAEmS,QAAQggB,MAAM1wB,EAAEyT,GAAGlV,EAAEyB,EAAED,GAAGykC,GAAGjmC,EAAEwB,GAAUxB,CAAC,CAAC,SAASgpC,GAAGhpC,EAAEC,EAAEC,EAAEsB,GAAG,IAAIC,EAAExB,EAAEkS,QAAQzQ,EAAE83B,KAAI73B,EAAE03B,GAAG53B,GAAsL,OAAnLvB,EAAE4oC,GAAG5oC,GAAG,OAAOD,EAAEqyB,QAAQryB,EAAEqyB,QAAQpyB,EAAED,EAAEm/B,eAAel/B,GAAED,EAAEszB,GAAG7xB,EAAEC,IAAK+xB,QAAQ,CAAC7N,QAAQ7lB,GAAuB,QAApBwB,OAAE,IAASA,EAAE,KAAKA,KAAavB,EAAE0zB,SAASnyB,GAAe,QAAZxB,EAAE4zB,GAAGnyB,EAAExB,EAAE0B,MAAcq2B,GAAGh4B,EAAEyB,EAAEE,EAAED,GAAGoyB,GAAG9zB,EAAEyB,EAAEE,IAAWA,CAAC,CAC3b,SAASsnC,GAAGjpC,GAAe,OAAZA,EAAEA,EAAEmS,SAAcF,OAAyBjS,EAAEiS,MAAM9L,IAAoDnG,EAAEiS,MAAMjC,WAAhF,IAA0F,CAAC,SAASk5B,GAAGlpC,EAAEC,GAAqB,GAAG,QAArBD,EAAEA,EAAE6R,gBAA2B,OAAO7R,EAAE8R,WAAW,CAAC,IAAI5R,EAAEF,EAAEovB,UAAUpvB,EAAEovB,UAAU,IAAIlvB,GAAGA,EAAED,EAAEC,EAAED,CAAC,CAAC,CAAC,SAASkpC,GAAGnpC,EAAEC,GAAGipC,GAAGlpC,EAAEC,IAAID,EAAEA,EAAEyR,YAAYy3B,GAAGlpC,EAAEC,EAAE,CAnB7SykC,GAAG,SAAS1kC,EAAEC,EAAEC,GAAG,GAAG,OAAOF,EAAE,GAAGA,EAAE0vB,gBAAgBzvB,EAAEgvB,cAAc1C,GAAGpa,QAAQigB,IAAG,MAAO,CAAC,GAAG,KAAKpyB,EAAEmyB,MAAMjyB,IAAI,KAAa,IAARD,EAAE0R,OAAW,OAAOygB,IAAG,EAzE1I,SAAYpyB,EAAEC,EAAEC,GAAG,OAAOD,EAAEkG,KAAK,KAAK,EAAEg5B,GAAGl/B,GAAG2vB,KAAK,MAAM,KAAK,EAAE+E,GAAG10B,GAAG,MAAM,KAAK,EAAE4sB,GAAG5sB,EAAEiC,OAAOirB,GAAGltB,GAAG,MAAM,KAAK,EAAEu0B,GAAGv0B,EAAEA,EAAE+P,UAAUmH,eAAe,MAAM,KAAK,GAAG,IAAI3V,EAAEvB,EAAEiC,KAAKqE,SAAS9E,EAAExB,EAAEyvB,cAAc/nB,MAAMykB,GAAEmF,GAAG/vB,EAAEqwB,eAAerwB,EAAEqwB,cAAcpwB,EAAE,MAAM,KAAK,GAAqB,GAAG,QAArBD,EAAEvB,EAAE4R,eAA2B,OAAG,OAAOrQ,EAAEsQ,YAAkBsa,GAAEyI,GAAY,EAAVA,GAAE1iB,SAAWlS,EAAE0R,OAAO,IAAI,MAAQ,KAAKzR,EAAED,EAAEgS,MAAM8f,YAAmB6N,GAAG5/B,EAAEC,EAAEC,IAAGksB,GAAEyI,GAAY,EAAVA,GAAE1iB,SAA8B,QAAnBnS,EAAEg+B,GAAGh+B,EAAEC,EAAEC,IAAmBF,EAAEkS,QAAQ,MAAKka,GAAEyI,GAAY,EAAVA,GAAE1iB,SAAW,MAAM,KAAK,GAC7d,GADge3Q,EAAE,KAAKtB,EACrfD,EAAE8xB,YAAe,KAAa,IAAR/xB,EAAE2R,OAAW,CAAC,GAAGnQ,EAAE,OAAOw/B,GAAGhhC,EAAEC,EAAEC,GAAGD,EAAE0R,OAAO,GAAG,CAA6F,GAA1E,QAAlBlQ,EAAExB,EAAE4R,iBAAyBpQ,EAAEk/B,UAAU,KAAKl/B,EAAEq/B,KAAK,KAAKr/B,EAAEm2B,WAAW,MAAMxL,GAAEyI,GAAEA,GAAE1iB,SAAY3Q,EAAE,MAAW,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,OAAOvB,EAAEkyB,MAAM,EAAEmM,GAAGt+B,EAAEC,EAAEC,GAAG,OAAO89B,GAAGh+B,EAAEC,EAAEC,EAAE,CAwE7GkpC,CAAGppC,EAAEC,EAAEC,GAAGkyB,GAAG,KAAa,OAARpyB,EAAE2R,MAAmB,MAAMygB,IAAG,EAAG1D,IAAG,KAAa,QAARzuB,EAAE0R,QAAgB0c,GAAGpuB,EAAE6tB,GAAG7tB,EAAEuwB,OAAiB,OAAVvwB,EAAEkyB,MAAM,EAASlyB,EAAEkG,KAAK,KAAK,EAAE,IAAI3E,EAAEvB,EAAEiC,KAAK48B,GAAG9+B,EAAEC,GAAGD,EAAEC,EAAEgvB,aAAa,IAAIxtB,EAAEgrB,GAAGxsB,EAAEqsB,GAAEna,SAAS6f,GAAG/xB,EAAEC,GAAGuB,EAAEu0B,GAAG,KAAK/1B,EAAEuB,EAAExB,EAAEyB,EAAEvB,GAAG,IAAIwB,EAAE20B,KACvI,OAD4Ip2B,EAAE0R,OAAO,EAAE,kBAAkBlQ,GAAG,OAAOA,GAAG,oBAAoBA,EAAE2E,aAAQ,IAAS3E,EAAE6E,UAAUrG,EAAEkG,IAAI,EAAElG,EAAE4R,cAAc,KAAK5R,EAAE8yB,YAC1e,KAAKlG,GAAGrrB,IAAIE,GAAE,EAAGyrB,GAAGltB,IAAIyB,GAAE,EAAGzB,EAAE4R,cAAc,OAAOpQ,EAAEk6B,YAAO,IAASl6B,EAAEk6B,MAAMl6B,EAAEk6B,MAAM,KAAK7I,GAAG7yB,GAAGwB,EAAEm6B,QAAQZ,GAAG/6B,EAAE+P,UAAUvO,EAAEA,EAAEy5B,gBAAgBj7B,EAAE+7B,GAAG/7B,EAAEuB,EAAExB,EAAEE,GAAGD,EAAEi/B,GAAG,KAAKj/B,EAAEuB,GAAE,EAAGE,EAAExB,KAAKD,EAAEkG,IAAI,EAAEuoB,IAAGhtB,GAAG4sB,GAAGruB,GAAG69B,GAAG,KAAK79B,EAAEwB,EAAEvB,GAAGD,EAAEA,EAAEgS,OAAchS,EAAE,KAAK,GAAGuB,EAAEvB,EAAE6uB,YAAY9uB,EAAE,CAAqF,OAApF8+B,GAAG9+B,EAAEC,GAAGD,EAAEC,EAAEgvB,aAAuBztB,GAAVC,EAAED,EAAEiF,OAAUjF,EAAEgF,UAAUvG,EAAEiC,KAAKV,EAAEC,EAAExB,EAAEkG,IAQtU,SAAYnG,GAAG,GAAG,oBAAoBA,EAAE,OAAOk+B,GAAGl+B,GAAG,EAAE,EAAE,QAAG,IAASA,GAAG,OAAOA,EAAE,CAAc,IAAbA,EAAEA,EAAEsG,YAAgBlC,EAAG,OAAO,GAAG,GAAGpE,IAAIuE,EAAG,OAAO,EAAE,CAAC,OAAO,CAAC,CAR2L8kC,CAAG7nC,GAAGxB,EAAE66B,GAAGr5B,EAAExB,GAAUyB,GAAG,KAAK,EAAExB,EAAEo+B,GAAG,KAAKp+B,EAAEuB,EAAExB,EAAEE,GAAG,MAAMF,EAAE,KAAK,EAAEC,EAAE4+B,GAAG,KAAK5+B,EAAEuB,EAAExB,EAAEE,GAAG,MAAMF,EAAE,KAAK,GAAGC,EAAE89B,GAAG,KAAK99B,EAAEuB,EAAExB,EAAEE,GAAG,MAAMF,EAAE,KAAK,GAAGC,EAAEg+B,GAAG,KAAKh+B,EAAEuB,EAAEq5B,GAAGr5B,EAAEU,KAAKlC,GAAGE,GAAG,MAAMF,EAAE,MAAMiF,MAAMlF,EAAE,IACvgByB,EAAE,IAAK,CAAC,OAAOvB,EAAE,KAAK,EAAE,OAAOuB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAA2CoP,GAAGr+B,EAAEC,EAAEuB,EAArCC,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEo5B,GAAGr5B,EAAEC,GAAcvB,GAAG,KAAK,EAAE,OAAOsB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAA2C4P,GAAG7+B,EAAEC,EAAEuB,EAArCC,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEo5B,GAAGr5B,EAAEC,GAAcvB,GAAG,KAAK,EAAEF,EAAE,CAAO,GAANm/B,GAAGl/B,GAAM,OAAOD,EAAE,MAAMiF,MAAMlF,EAAE,MAAMyB,EAAEvB,EAAEgvB,aAA+BxtB,GAAlBC,EAAEzB,EAAE4R,eAAkBgU,QAAQyN,GAAGtzB,EAAEC,GAAG+zB,GAAG/zB,EAAEuB,EAAE,KAAKtB,GAAG,IAAIyB,EAAE1B,EAAE4R,cAA0B,GAAZrQ,EAAEG,EAAEkkB,QAAWnkB,EAAEwV,aAAY,CAAC,GAAGxV,EAAE,CAACmkB,QAAQrkB,EAAE0V,cAAa,EAAG0xB,MAAMjnC,EAAEinC,MAAMC,0BAA0BlnC,EAAEknC,0BAA0BpK,YAAY98B,EAAE88B,aAAax+B,EAAE8yB,YAAYC,UAChftxB,EAAEzB,EAAE4R,cAAcnQ,EAAU,IAARzB,EAAE0R,MAAU,CAAuB1R,EAAEo/B,GAAGr/B,EAAEC,EAAEuB,EAAEtB,EAAjCuB,EAAE66B,GAAGr3B,MAAMlF,EAAE,MAAME,IAAmB,MAAMD,CAAC,CAAM,GAAGwB,IAAIC,EAAE,CAAuBxB,EAAEo/B,GAAGr/B,EAAEC,EAAEuB,EAAEtB,EAAjCuB,EAAE66B,GAAGr3B,MAAMlF,EAAE,MAAME,IAAmB,MAAMD,CAAC,CAAM,IAAIyuB,GAAGjD,GAAGvrB,EAAE+P,UAAUmH,cAAchN,YAAYqkB,GAAGvuB,EAAEyuB,IAAE,EAAGC,GAAG,KAAKzuB,EAAEoxB,GAAGrxB,EAAE,KAAKuB,EAAEtB,GAAGD,EAAEgS,MAAM/R,EAAEA,GAAGA,EAAEyR,OAAe,EAATzR,EAAEyR,MAAS,KAAKzR,EAAEA,EAAEgS,OAAQ,KAAI,CAAM,GAAL0d,KAAQpuB,IAAIC,EAAE,CAACxB,EAAE+9B,GAAGh+B,EAAEC,EAAEC,GAAG,MAAMF,CAAC,CAAC89B,GAAG99B,EAAEC,EAAEuB,EAAEtB,EAAE,CAACD,EAAEA,EAAEgS,KAAK,CAAC,OAAOhS,EAAE,KAAK,EAAE,OAAO00B,GAAG10B,GAAG,OAAOD,GAAGuvB,GAAGtvB,GAAGuB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAAavtB,EAAE,OAAO1B,EAAEA,EAAE0vB,cAAc,KAAK/tB,EAAEF,EAAE6H,SAASmhB,GAAGjpB,EAAEC,GAAGE,EAAE,KAAK,OAAOD,GAAG+oB,GAAGjpB,EAAEE,KAAKzB,EAAE0R,OAAO,IACnfitB,GAAG5+B,EAAEC,GAAG69B,GAAG99B,EAAEC,EAAE0B,EAAEzB,GAAGD,EAAEgS,MAAM,KAAK,EAAE,OAAO,OAAOjS,GAAGuvB,GAAGtvB,GAAG,KAAK,KAAK,GAAG,OAAO2/B,GAAG5/B,EAAEC,EAAEC,GAAG,KAAK,EAAE,OAAOs0B,GAAGv0B,EAAEA,EAAE+P,UAAUmH,eAAe3V,EAAEvB,EAAEgvB,aAAa,OAAOjvB,EAAEC,EAAEgS,MAAMof,GAAGpxB,EAAE,KAAKuB,EAAEtB,GAAG49B,GAAG99B,EAAEC,EAAEuB,EAAEtB,GAAGD,EAAEgS,MAAM,KAAK,GAAG,OAAOzQ,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAA2C8O,GAAG/9B,EAAEC,EAAEuB,EAArCC,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEo5B,GAAGr5B,EAAEC,GAAcvB,GAAG,KAAK,EAAE,OAAO49B,GAAG99B,EAAEC,EAAEA,EAAEgvB,aAAa/uB,GAAGD,EAAEgS,MAAM,KAAK,EAAmD,KAAK,GAAG,OAAO6rB,GAAG99B,EAAEC,EAAEA,EAAEgvB,aAAa3lB,SAASpJ,GAAGD,EAAEgS,MAAM,KAAK,GAAGjS,EAAE,CACxZ,GADyZwB,EAAEvB,EAAEiC,KAAKqE,SAAS9E,EAAExB,EAAEgvB,aAAavtB,EAAEzB,EAAEyvB,cAClf/tB,EAAEF,EAAEkG,MAAMykB,GAAEmF,GAAG/vB,EAAEqwB,eAAerwB,EAAEqwB,cAAclwB,EAAK,OAAOD,EAAE,GAAG6hB,GAAG7hB,EAAEiG,MAAMhG,IAAI,GAAGD,EAAE4H,WAAW7H,EAAE6H,WAAWijB,GAAGpa,QAAQ,CAAClS,EAAE+9B,GAAGh+B,EAAEC,EAAEC,GAAG,MAAMF,CAAC,OAAO,IAAc,QAAV0B,EAAEzB,EAAEgS,SAAiBvQ,EAAEgQ,OAAOzR,GAAG,OAAOyB,GAAG,CAAC,IAAImE,EAAEnE,EAAEuwB,aAAa,GAAG,OAAOpsB,EAAE,CAAClE,EAAED,EAAEuQ,MAAM,IAAI,IAAInM,EAAED,EAAEqsB,aAAa,OAAOpsB,GAAG,CAAC,GAAGA,EAAEwsB,UAAU9wB,EAAE,CAAC,GAAG,IAAIE,EAAEyE,IAAI,EAACL,EAAEytB,IAAI,EAAErzB,GAAGA,IAAKiG,IAAI,EAAE,IAAIP,EAAElE,EAAEqxB,YAAY,GAAG,OAAOntB,EAAE,CAAY,IAAIoL,GAAfpL,EAAEA,EAAEutB,QAAeC,QAAQ,OAAOpiB,EAAElL,EAAEqrB,KAAKrrB,GAAGA,EAAEqrB,KAAKngB,EAAEmgB,KAAKngB,EAAEmgB,KAAKrrB,GAAGF,EAAEwtB,QAAQttB,CAAC,CAAC,CAACpE,EAAEywB,OAAOjyB,EAAgB,QAAd4F,EAAEpE,EAAE+P,aAAqB3L,EAAEqsB,OAAOjyB,GAAG4xB,GAAGpwB,EAAEgQ,OAClfxR,EAAED,GAAG4F,EAAEssB,OAAOjyB,EAAE,KAAK,CAAC4F,EAAEA,EAAEqrB,IAAI,CAAC,MAAM,GAAG,KAAKzvB,EAAEyE,IAAIxE,EAAED,EAAEQ,OAAOjC,EAAEiC,KAAK,KAAKR,EAAEuQ,WAAW,GAAG,KAAKvQ,EAAEyE,IAAI,CAAY,GAAG,QAAdxE,EAAED,EAAEgQ,QAAmB,MAAMzM,MAAMlF,EAAE,MAAM4B,EAAEwwB,OAAOjyB,EAAgB,QAAd2F,EAAElE,EAAE8P,aAAqB5L,EAAEssB,OAAOjyB,GAAG4xB,GAAGnwB,EAAEzB,EAAED,GAAG0B,EAAED,EAAEwQ,OAAO,MAAMvQ,EAAED,EAAEuQ,MAAM,GAAG,OAAOtQ,EAAEA,EAAE+P,OAAOhQ,OAAO,IAAIC,EAAED,EAAE,OAAOC,GAAG,CAAC,GAAGA,IAAI1B,EAAE,CAAC0B,EAAE,KAAK,KAAK,CAAa,GAAG,QAAfD,EAAEC,EAAEuQ,SAAoB,CAACxQ,EAAEgQ,OAAO/P,EAAE+P,OAAO/P,EAAED,EAAE,KAAK,CAACC,EAAEA,EAAE+P,MAAM,CAAChQ,EAAEC,CAAC,CAACm8B,GAAG99B,EAAEC,EAAEwB,EAAE6H,SAASpJ,GAAGD,EAAEA,EAAEgS,KAAK,CAAC,OAAOhS,EAAE,KAAK,EAAE,OAAOwB,EAAExB,EAAEiC,KAAKV,EAAEvB,EAAEgvB,aAAa3lB,SAAS0oB,GAAG/xB,EAAEC,GAAWsB,EAAEA,EAAVC,EAAE4wB,GAAG5wB,IAAUxB,EAAE0R,OAAO,EAAEmsB,GAAG99B,EAAEC,EAAEuB,EAAEtB,GACpfD,EAAEgS,MAAM,KAAK,GAAG,OAAgBxQ,EAAEo5B,GAAXr5B,EAAEvB,EAAEiC,KAAYjC,EAAEgvB,cAA6BgP,GAAGj+B,EAAEC,EAAEuB,EAAtBC,EAAEo5B,GAAGr5B,EAAEU,KAAKT,GAAcvB,GAAG,KAAK,GAAG,OAAOk+B,GAAGp+B,EAAEC,EAAEA,EAAEiC,KAAKjC,EAAEgvB,aAAa/uB,GAAG,KAAK,GAAG,OAAOsB,EAAEvB,EAAEiC,KAAKT,EAAExB,EAAEgvB,aAAaxtB,EAAExB,EAAE6uB,cAActtB,EAAEC,EAAEo5B,GAAGr5B,EAAEC,GAAGq9B,GAAG9+B,EAAEC,GAAGA,EAAEkG,IAAI,EAAE0mB,GAAGrrB,IAAIxB,GAAE,EAAGmtB,GAAGltB,IAAID,GAAE,EAAGgyB,GAAG/xB,EAAEC,GAAGu7B,GAAGx7B,EAAEuB,EAAEC,GAAGu6B,GAAG/7B,EAAEuB,EAAEC,EAAEvB,GAAGg/B,GAAG,KAAKj/B,EAAEuB,GAAE,EAAGxB,EAAEE,GAAG,KAAK,GAAG,OAAO8gC,GAAGhhC,EAAEC,EAAEC,GAAG,KAAK,GAAG,OAAOo+B,GAAGt+B,EAAEC,EAAEC,GAAG,MAAM+E,MAAMlF,EAAE,IAAIE,EAAEkG,KAAM,EAYxC,IAAImjC,GAAG,oBAAoBC,YAAYA,YAAY,SAASvpC,GAAG28B,QAAQC,MAAM58B,EAAE,EAAE,SAASwpC,GAAGxpC,GAAG4B,KAAK6nC,cAAczpC,CAAC,CACjI,SAAS0pC,GAAG1pC,GAAG4B,KAAK6nC,cAAczpC,CAAC,CAC5J,SAAS2pC,GAAG3pC,GAAG,SAASA,GAAG,IAAIA,EAAE0K,UAAU,IAAI1K,EAAE0K,UAAU,KAAK1K,EAAE0K,SAAS,CAAC,SAASk/B,GAAG5pC,GAAG,SAASA,GAAG,IAAIA,EAAE0K,UAAU,IAAI1K,EAAE0K,UAAU,KAAK1K,EAAE0K,WAAW,IAAI1K,EAAE0K,UAAU,iCAAiC1K,EAAE2K,WAAW,CAAC,SAASk/B,KAAK,CAExa,SAASC,GAAG9pC,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,IAAIC,EAAExB,EAAEijC,oBAAoB,GAAGzhC,EAAE,CAAC,IAAIC,EAAED,EAAE,GAAG,oBAAoBD,EAAE,CAAC,IAAIoE,EAAEpE,EAAEA,EAAE,WAAW,IAAIzB,EAAEipC,GAAGtnC,GAAGkE,EAAE5C,KAAKjD,EAAE,CAAC,CAACgpC,GAAG/oC,EAAE0B,EAAE3B,EAAEyB,EAAE,MAAME,EADxJ,SAAY3B,EAAEC,EAAEC,EAAEsB,EAAEC,GAAG,GAAGA,EAAE,CAAC,GAAG,oBAAoBD,EAAE,CAAC,IAAIE,EAAEF,EAAEA,EAAE,WAAW,IAAIxB,EAAEipC,GAAGtnC,GAAGD,EAAEuB,KAAKjD,EAAE,CAAC,CAAC,IAAI2B,EAAEonC,GAAG9oC,EAAEuB,EAAExB,EAAE,EAAE,MAAK,EAAG,EAAG,GAAG6pC,IAAmF,OAA/E7pC,EAAEmjC,oBAAoBxhC,EAAE3B,EAAEspB,IAAI3nB,EAAEwQ,QAAQuW,GAAG,IAAI1oB,EAAE0K,SAAS1K,EAAE0P,WAAW1P,GAAGwnC,KAAY7lC,CAAC,CAAC,KAAKF,EAAEzB,EAAEyK,WAAWzK,EAAEoK,YAAY3I,GAAG,GAAG,oBAAoBD,EAAE,CAAC,IAAIqE,EAAErE,EAAEA,EAAE,WAAW,IAAIxB,EAAEipC,GAAGnjC,GAAGD,EAAE5C,KAAKjD,EAAE,CAAC,CAAC,IAAI8F,EAAE6iC,GAAG3oC,EAAE,GAAE,EAAG,KAAK,GAAK,EAAG,EAAG,GAAG6pC,IAA0G,OAAtG7pC,EAAEmjC,oBAAoBr9B,EAAE9F,EAAEspB,IAAIxjB,EAAEqM,QAAQuW,GAAG,IAAI1oB,EAAE0K,SAAS1K,EAAE0P,WAAW1P,GAAGwnC,IAAG,WAAWwB,GAAG/oC,EAAE6F,EAAE5F,EAAEsB,EAAE,IAAUsE,CAAC,CACpUikC,CAAG7pC,EAAED,EAAED,EAAEyB,EAAED,GAAG,OAAOynC,GAAGtnC,EAAE,CAHpL+nC,GAAGxoC,UAAUkF,OAAOojC,GAAGtoC,UAAUkF,OAAO,SAASpG,GAAG,IAAIC,EAAE2B,KAAK6nC,cAAc,GAAG,OAAOxpC,EAAE,MAAMgF,MAAMlF,EAAE,MAAMipC,GAAGhpC,EAAEC,EAAE,KAAK,KAAK,EAAEypC,GAAGxoC,UAAU8oC,QAAQR,GAAGtoC,UAAU8oC,QAAQ,WAAW,IAAIhqC,EAAE4B,KAAK6nC,cAAc,GAAG,OAAOzpC,EAAE,CAAC4B,KAAK6nC,cAAc,KAAK,IAAIxpC,EAAED,EAAEmX,cAAcqwB,IAAG,WAAWwB,GAAG,KAAKhpC,EAAE,KAAK,KAAK,IAAGC,EAAEqpB,IAAI,IAAI,CAAC,EACzTogB,GAAGxoC,UAAU+oC,2BAA2B,SAASjqC,GAAG,GAAGA,EAAE,CAAC,IAAIC,EAAEyV,KAAK1V,EAAE,CAAC2W,UAAU,KAAKpH,OAAOvP,EAAEiX,SAAShX,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAEkW,GAAGhW,QAAQ,IAAIH,GAAGA,EAAEmW,GAAGlW,GAAG+W,SAAS/W,KAAKkW,GAAG8zB,OAAOhqC,EAAE,EAAEF,GAAG,IAAIE,GAAG6W,GAAG/W,EAAE,CAAC,EAEXuV,GAAG,SAASvV,GAAG,OAAOA,EAAEmG,KAAK,KAAK,EAAE,IAAIlG,EAAED,EAAEgQ,UAAU,GAAG/P,EAAEkS,QAAQN,cAAcqF,aAAa,CAAC,IAAIhX,EAAEqU,GAAGtU,EAAEwU,cAAc,IAAIvU,IAAIkV,GAAGnV,EAAI,EAAFC,GAAK+lC,GAAGhmC,EAAE6S,MAAK,KAAO,EAAF+gB,MAAOkO,GAAGjvB,KAAI,IAAI4a,MAAM,CAAC,MAAM,KAAK,GAAG8Z,IAAG,WAAW,IAAIvnC,EAAE2yB,GAAG5yB,EAAE,GAAG,GAAG,OAAOC,EAAE,CAAC,IAAIC,EAAEs5B,KAAIxB,GAAG/3B,EAAED,EAAE,EAAEE,EAAE,CAAC,IAAGipC,GAAGnpC,EAAE,GAAG,EAC/bwV,GAAG,SAASxV,GAAG,GAAG,KAAKA,EAAEmG,IAAI,CAAC,IAAIlG,EAAE2yB,GAAG5yB,EAAE,WAAW,GAAG,OAAOC,EAAa+3B,GAAG/3B,EAAED,EAAE,UAAXw5B,MAAwB2P,GAAGnpC,EAAE,UAAU,CAAC,EAAEyV,GAAG,SAASzV,GAAG,GAAG,KAAKA,EAAEmG,IAAI,CAAC,IAAIlG,EAAEo5B,GAAGr5B,GAAGE,EAAE0yB,GAAG5yB,EAAEC,GAAG,GAAG,OAAOC,EAAa83B,GAAG93B,EAAEF,EAAEC,EAAXu5B,MAAgB2P,GAAGnpC,EAAEC,EAAE,CAAC,EAAEyV,GAAG,WAAW,OAAOL,EAAC,EAAEM,GAAG,SAAS3V,EAAEC,GAAG,IAAIC,EAAEmV,GAAE,IAAI,OAAOA,GAAErV,EAAEC,GAAG,CAAC,QAAQoV,GAAEnV,CAAC,CAAC,EAClSyP,GAAG,SAAS3P,EAAEC,EAAEC,GAAG,OAAOD,GAAG,IAAK,QAAyB,GAAjBuI,EAAGxI,EAAEE,GAAGD,EAAEC,EAAE+F,KAAQ,UAAU/F,EAAEgC,MAAM,MAAMjC,EAAE,CAAC,IAAIC,EAAEF,EAAEE,EAAEwP,YAAYxP,EAAEA,EAAEwP,WAAsF,IAA3ExP,EAAEA,EAAEiqC,iBAAiB,cAAcC,KAAKC,UAAU,GAAGpqC,GAAG,mBAAuBA,EAAE,EAAEA,EAAEC,EAAEE,OAAOH,IAAI,CAAC,IAAIuB,EAAEtB,EAAED,GAAG,GAAGuB,IAAIxB,GAAGwB,EAAE8oC,OAAOtqC,EAAEsqC,KAAK,CAAC,IAAI7oC,EAAEwO,GAAGzO,GAAG,IAAIC,EAAE,MAAMwD,MAAMlF,EAAE,KAAK0H,EAAGjG,GAAGgH,EAAGhH,EAAEC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAK,WAAW+H,GAAGxJ,EAAEE,GAAG,MAAM,IAAK,SAAmB,OAAVD,EAAEC,EAAEyH,QAAeoB,GAAG/I,IAAIE,EAAEohC,SAASrhC,GAAE,GAAI,EAAEoQ,GAAGk3B,GAAGj3B,GAAGk3B,GACpa,IAAI+C,GAAG,CAACC,uBAAsB,EAAGC,OAAO,CAAC16B,GAAGyS,GAAGvS,GAAGC,GAAGE,GAAGm3B,KAAKmD,GAAG,CAACC,wBAAwB3zB,GAAG4zB,WAAW,EAAEC,QAAQ,SAASC,oBAAoB,aAC1IC,GAAG,CAACH,WAAWF,GAAGE,WAAWC,QAAQH,GAAGG,QAAQC,oBAAoBJ,GAAGI,oBAAoBE,eAAeN,GAAGM,eAAeC,kBAAkB,KAAKC,4BAA4B,KAAKC,4BAA4B,KAAKC,cAAc,KAAKC,wBAAwB,KAAKC,wBAAwB,KAAKC,gBAAgB,KAAKC,mBAAmB,KAAKC,eAAe,KAAKC,qBAAqBjoC,EAAG2xB,uBAAuBuW,wBAAwB,SAAS3rC,GAAW,OAAO,QAAfA,EAAEgS,GAAGhS,IAAmB,KAAKA,EAAEgQ,SAAS,EAAE26B,wBAAwBD,GAAGC,yBARjN,WAAc,OAAO,IAAI,EASpUiB,4BAA4B,KAAKC,gBAAgB,KAAKC,aAAa,KAAKC,kBAAkB,KAAKC,gBAAgB,KAAKC,kBAAkB,mCAAmC,GAAG,qBAAqBC,+BAA+B,CAAC,IAAIC,GAAGD,+BAA+B,IAAIC,GAAGC,YAAYD,GAAGE,cAAc,IAAIz4B,GAAGu4B,GAAGG,OAAOvB,IAAIl3B,GAAGs4B,EAAE,CAAC,MAAMnsC,IAAG,CAAC,CAACusC,EAAQ7oC,mDAAmD6mC,GAC/YgC,EAAQC,aAAa,SAASxsC,EAAEC,GAAG,IAAIC,EAAE,EAAEC,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,IAAIwpC,GAAG1pC,GAAG,MAAMgF,MAAMlF,EAAE,MAAM,OAbuH,SAAYC,EAAEC,EAAEC,GAAG,IAAIsB,EAAE,EAAErB,UAAUC,aAAQ,IAASD,UAAU,GAAGA,UAAU,GAAG,KAAK,MAAM,CAACmG,SAASxC,EAAGqa,IAAI,MAAM3c,EAAE,KAAK,GAAGA,EAAE8H,SAAStJ,EAAEmX,cAAclX,EAAE4wB,eAAe3wB,EAAE,CAa1RusC,CAAGzsC,EAAEC,EAAE,KAAKC,EAAE,EAAEqsC,EAAQG,WAAW,SAAS1sC,EAAEC,GAAG,IAAI0pC,GAAG3pC,GAAG,MAAMiF,MAAMlF,EAAE,MAAM,IAAIG,GAAE,EAAGsB,EAAE,GAAGC,EAAE6nC,GAA4P,OAAzP,OAAOrpC,QAAG,IAASA,KAAI,IAAKA,EAAE0sC,sBAAsBzsC,GAAE,QAAI,IAASD,EAAE26B,mBAAmBp5B,EAAEvB,EAAE26B,uBAAkB,IAAS36B,EAAEgoC,qBAAqBxmC,EAAExB,EAAEgoC,qBAAqBhoC,EAAE0oC,GAAG3oC,EAAE,GAAE,EAAG,KAAK,EAAKE,EAAE,EAAGsB,EAAEC,GAAGzB,EAAEspB,IAAIrpB,EAAEkS,QAAQuW,GAAG,IAAI1oB,EAAE0K,SAAS1K,EAAE0P,WAAW1P,GAAU,IAAIwpC,GAAGvpC,EAAE,EACrfssC,EAAQK,YAAY,SAAS5sC,GAAG,GAAG,MAAMA,EAAE,OAAO,KAAK,GAAG,IAAIA,EAAE0K,SAAS,OAAO1K,EAAE,IAAIC,EAAED,EAAEk7B,gBAAgB,QAAG,IAASj7B,EAAE,CAAC,GAAG,oBAAoBD,EAAEoG,OAAO,MAAMnB,MAAMlF,EAAE,MAAiC,MAA3BC,EAAEiB,OAAO6M,KAAK9N,GAAGqwB,KAAK,KAAWprB,MAAMlF,EAAE,IAAIC,GAAI,CAAqC,OAA5BA,EAAE,QAAVA,EAAEgS,GAAG/R,IAAc,KAAKD,EAAEgQ,SAAkB,EAAEu8B,EAAQM,UAAU,SAAS7sC,GAAG,OAAOwnC,GAAGxnC,EAAE,EAAEusC,EAAQO,QAAQ,SAAS9sC,EAAEC,EAAEC,GAAG,IAAI0pC,GAAG3pC,GAAG,MAAMgF,MAAMlF,EAAE,MAAM,OAAO+pC,GAAG,KAAK9pC,EAAEC,GAAE,EAAGC,EAAE,EAC/YqsC,EAAQQ,YAAY,SAAS/sC,EAAEC,EAAEC,GAAG,IAAIypC,GAAG3pC,GAAG,MAAMiF,MAAMlF,EAAE,MAAM,IAAIyB,EAAE,MAAMtB,GAAGA,EAAE8sC,iBAAiB,KAAKvrC,GAAE,EAAGC,EAAE,GAAGC,EAAE2nC,GAAyO,GAAtO,OAAOppC,QAAG,IAASA,KAAI,IAAKA,EAAEysC,sBAAsBlrC,GAAE,QAAI,IAASvB,EAAE06B,mBAAmBl5B,EAAExB,EAAE06B,uBAAkB,IAAS16B,EAAE+nC,qBAAqBtmC,EAAEzB,EAAE+nC,qBAAqBhoC,EAAE8oC,GAAG9oC,EAAE,KAAKD,EAAE,EAAE,MAAME,EAAEA,EAAE,KAAKuB,EAAE,EAAGC,EAAEC,GAAG3B,EAAEspB,IAAIrpB,EAAEkS,QAAQuW,GAAG1oB,GAAMwB,EAAE,IAAIxB,EAAE,EAAEA,EAAEwB,EAAEpB,OAAOJ,IAA2ByB,GAAhBA,GAAPvB,EAAEsB,EAAExB,IAAOitC,aAAgB/sC,EAAEgtC,SAAS,MAAMjtC,EAAEyoC,gCAAgCzoC,EAAEyoC,gCAAgC,CAACxoC,EAAEuB,GAAGxB,EAAEyoC,gCAAgCv4B,KAAKjQ,EACvhBuB,GAAG,OAAO,IAAIioC,GAAGzpC,EAAE,EAAEssC,EAAQnmC,OAAO,SAASpG,EAAEC,EAAEC,GAAG,IAAI0pC,GAAG3pC,GAAG,MAAMgF,MAAMlF,EAAE,MAAM,OAAO+pC,GAAG,KAAK9pC,EAAEC,GAAE,EAAGC,EAAE,EAAEqsC,EAAQY,uBAAuB,SAASntC,GAAG,IAAI4pC,GAAG5pC,GAAG,MAAMiF,MAAMlF,EAAE,KAAK,QAAOC,EAAEmjC,sBAAqBqE,IAAG,WAAWsC,GAAG,KAAK,KAAK9pC,GAAE,GAAG,WAAWA,EAAEmjC,oBAAoB,KAAKnjC,EAAEspB,IAAI,IAAI,GAAE,KAAG,EAAM,EAAEijB,EAAQa,wBAAwB7F,GAC/UgF,EAAQc,oCAAoC,SAASrtC,EAAEC,EAAEC,EAAEsB,GAAG,IAAIooC,GAAG1pC,GAAG,MAAM+E,MAAMlF,EAAE,MAAM,GAAG,MAAMC,QAAG,IAASA,EAAEk7B,gBAAgB,MAAMj2B,MAAMlF,EAAE,KAAK,OAAO+pC,GAAG9pC,EAAEC,EAAEC,GAAE,EAAGsB,EAAE,EAAE+qC,EAAQ1B,QAAQ,iDC/T7L,IAAI75B,EAAInR,EAAQ,KAEd0sC,EAAQG,WAAa17B,EAAE07B,WACvBH,EAAQQ,YAAc/7B,EAAE+7B,4BCH1B,SAASO,IAEP,GAC4C,qBAAnCpB,gCAC4C,oBAA5CA,+BAA+BoB,SAcxC,IAEEpB,+BAA+BoB,SAASA,EAC1C,CAAE,MAAOC,GAGP5Q,QAAQC,MAAM2Q,EAChB,CACF,CAKED,GACAE,EAAOjB,QAAU,EAAjBiB,wBCzBe9rC,EAAE7B,EAAQ,IAASiG,EAAElC,OAAOC,IAAI,iBAAiB+B,EAAEhC,OAAOC,IAAI,kBAAkBmN,EAAE/P,OAAOC,UAAUC,eAAe2nB,EAAEpnB,EAAEgC,mDAAmDm6B,kBAAkB99B,EAAE,CAACoe,KAAI,EAAG6R,KAAI,EAAGyd,QAAO,EAAGC,UAAS,GAChP,SAAS1c,EAAE9wB,EAAEF,EAAE2B,GAAG,IAAI1B,EAAEuB,EAAE,CAAC,EAAEC,EAAE,KAAKoE,EAAE,KAAiF,IAAI5F,UAAhF,IAAS0B,IAAIF,EAAE,GAAGE,QAAG,IAAS3B,EAAEme,MAAM1c,EAAE,GAAGzB,EAAEme,UAAK,IAASne,EAAEgwB,MAAMnqB,EAAE7F,EAAEgwB,KAAchwB,EAAEgR,EAAE/N,KAAKjD,EAAEC,KAAKF,EAAEoB,eAAelB,KAAKuB,EAAEvB,GAAGD,EAAEC,IAAI,GAAGC,GAAGA,EAAE46B,aAAa,IAAI76B,KAAKD,EAAEE,EAAE46B,kBAAe,IAASt5B,EAAEvB,KAAKuB,EAAEvB,GAAGD,EAAEC,IAAI,MAAM,CAACqG,SAASR,EAAE5D,KAAKhC,EAAEie,IAAI1c,EAAEuuB,IAAInqB,EAAE8qB,MAAMnvB,EAAEyuB,OAAOnH,EAAE3W,QAAQ,CAAoBo6B,EAAQoB,IAAI3c,EAAEub,EAAQqB,KAAK5c,eCD7V,IAAIprB,EAAEhC,OAAOC,IAAI,iBAAiBilB,EAAEllB,OAAOC,IAAI,gBAAgB9D,EAAE6D,OAAOC,IAAI,kBAAkBmtB,EAAEptB,OAAOC,IAAI,qBAAqBotB,EAAErtB,OAAOC,IAAI,kBAAkBklB,EAAEnlB,OAAOC,IAAI,kBAAkBqlB,EAAEtlB,OAAOC,IAAI,iBAAiBtC,EAAEqC,OAAOC,IAAI,qBAAqBslB,EAAEvlB,OAAOC,IAAI,kBAAkBolB,EAAErlB,OAAOC,IAAI,cAAcqtB,EAAEttB,OAAOC,IAAI,cAAcxB,EAAEuB,OAAOe,SACzW,IAAImO,EAAE,CAACmoB,UAAU,WAAW,OAAM,CAAE,EAAEI,mBAAmB,WAAW,EAAED,oBAAoB,WAAW,EAAED,gBAAgB,WAAW,GAAG9lB,EAAEpU,OAAO8D,OAAOojB,EAAE,CAAC,EAAE,SAASgE,EAAEnsB,EAAEC,EAAEwB,GAAGG,KAAK+uB,MAAM3wB,EAAE4B,KAAK0wB,QAAQryB,EAAE2B,KAAKuuB,KAAKhI,EAAEvmB,KAAKg6B,QAAQn6B,GAAGqR,CAAC,CACwI,SAASsW,IAAI,CAAyB,SAASgD,EAAEpsB,EAAEC,EAAEwB,GAAGG,KAAK+uB,MAAM3wB,EAAE4B,KAAK0wB,QAAQryB,EAAE2B,KAAKuuB,KAAKhI,EAAEvmB,KAAKg6B,QAAQn6B,GAAGqR,CAAC,CADxPqZ,EAAEjrB,UAAUqnC,iBAAiB,CAAC,EACpQpc,EAAEjrB,UAAU2sC,SAAS,SAAS7tC,EAAEC,GAAG,GAAG,kBAAkBD,GAAG,oBAAoBA,GAAG,MAAMA,EAAE,MAAMiF,MAAM,yHAAyHrD,KAAKg6B,QAAQT,gBAAgBv5B,KAAK5B,EAAEC,EAAE,WAAW,EAAEksB,EAAEjrB,UAAU4sC,YAAY,SAAS9tC,GAAG4B,KAAKg6B,QAAQP,mBAAmBz5B,KAAK5B,EAAE,cAAc,EAAgBopB,EAAEloB,UAAUirB,EAAEjrB,UAAsF,IAAIorB,EAAEF,EAAElrB,UAAU,IAAIkoB,EACrfkD,EAAErlB,YAAYmlB,EAAE/W,EAAEiX,EAAEH,EAAEjrB,WAAWorB,EAAEkP,sBAAqB,EAAG,IAAI9M,EAAE7lB,MAAMC,QAAQkgB,EAAE/nB,OAAOC,UAAUC,eAAe0yB,EAAE,CAAC1hB,QAAQ,MAAM0iB,EAAE,CAAC1W,KAAI,EAAG6R,KAAI,EAAGyd,QAAO,EAAGC,UAAS,GACtK,SAASnY,EAAEv1B,EAAEC,EAAEwB,GAAG,IAAID,EAAEtB,EAAE,CAAC,EAAE4F,EAAE,KAAKD,EAAE,KAAK,GAAG,MAAM5F,EAAE,IAAIuB,UAAK,IAASvB,EAAE+vB,MAAMnqB,EAAE5F,EAAE+vB,UAAK,IAAS/vB,EAAEke,MAAMrY,EAAE,GAAG7F,EAAEke,KAAKle,EAAE+oB,EAAE/lB,KAAKhD,EAAEuB,KAAKqzB,EAAE1zB,eAAeK,KAAKtB,EAAEsB,GAAGvB,EAAEuB,IAAI,IAAIG,EAAExB,UAAUC,OAAO,EAAE,GAAG,IAAIuB,EAAEzB,EAAEoJ,SAAS7H,OAAO,GAAG,EAAEE,EAAE,CAAC,IAAI,IAAID,EAAEmH,MAAMlH,GAAGqP,EAAE,EAAEA,EAAErP,EAAEqP,IAAItP,EAAEsP,GAAG7Q,UAAU6Q,EAAE,GAAG9Q,EAAEoJ,SAAS5H,CAAC,CAAC,GAAG1B,GAAGA,EAAE86B,aAAa,IAAIt5B,KAAKG,EAAE3B,EAAE86B,kBAAe,IAAS56B,EAAEsB,KAAKtB,EAAEsB,GAAGG,EAAEH,IAAI,MAAM,CAAC8E,SAASV,EAAE1D,KAAKlC,EAAEme,IAAIrY,EAAEkqB,IAAInqB,EAAE8qB,MAAMzwB,EAAE+vB,OAAO4D,EAAE1hB,QAAQ,CAChV,SAASsjB,EAAEz1B,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEsG,WAAWV,CAAC,CAAoG,IAAIkwB,EAAE,OAAO,SAAS4B,EAAE13B,EAAEC,GAAG,MAAM,kBAAkBD,GAAG,OAAOA,GAAG,MAAMA,EAAEme,IAA7K,SAAgBne,GAAG,IAAIC,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAID,EAAEuD,QAAQ,SAAQ,SAASvD,GAAG,OAAOC,EAAED,EAAE,GAAE,CAA+E+tC,CAAO,GAAG/tC,EAAEme,KAAKle,EAAEiK,SAAS,GAAG,CAC/W,SAASsvB,EAAEx5B,EAAEC,EAAEwB,EAAED,EAAEtB,GAAG,IAAI4F,SAAS9F,EAAK,cAAc8F,GAAG,YAAYA,IAAE9F,EAAE,MAAK,IAAI6F,GAAE,EAAG,GAAG,OAAO7F,EAAE6F,GAAE,OAAQ,OAAOC,GAAG,IAAK,SAAS,IAAK,SAASD,GAAE,EAAG,MAAM,IAAK,SAAS,OAAO7F,EAAEsG,UAAU,KAAKV,EAAE,KAAKkjB,EAAEjjB,GAAE,GAAI,GAAGA,EAAE,OAAW3F,EAAEA,EAAN2F,EAAE7F,GAASA,EAAE,KAAKwB,EAAE,IAAIk2B,EAAE7xB,EAAE,GAAGrE,EAAEktB,EAAExuB,IAAIuB,EAAE,GAAG,MAAMzB,IAAIyB,EAAEzB,EAAEuD,QAAQuyB,EAAE,OAAO,KAAK0D,EAAEt5B,EAAED,EAAEwB,EAAE,IAAG,SAASzB,GAAG,OAAOA,CAAC,KAAI,MAAME,IAAIu1B,EAAEv1B,KAAKA,EADnW,SAAWF,EAAEC,GAAG,MAAM,CAACqG,SAASV,EAAE1D,KAAKlC,EAAEkC,KAAKic,IAAIle,EAAE+vB,IAAIhwB,EAAEgwB,IAAIW,MAAM3wB,EAAE2wB,MAAMV,OAAOjwB,EAAEiwB,OAAO,CACyQuF,CAAEt1B,EAAEuB,IAAIvB,EAAEie,KAAKtY,GAAGA,EAAEsY,MAAMje,EAAEie,IAAI,IAAI,GAAGje,EAAEie,KAAK5a,QAAQuyB,EAAE,OAAO,KAAK91B,IAAIC,EAAEkQ,KAAKjQ,IAAI,EAAyB,GAAvB2F,EAAE,EAAErE,EAAE,KAAKA,EAAE,IAAIA,EAAE,IAAOktB,EAAE1uB,GAAG,IAAI,IAAI2B,EAAE,EAAEA,EAAE3B,EAAEI,OAAOuB,IAAI,CAC/e,IAAID,EAAEF,EAAEk2B,EADwe5xB,EACrf9F,EAAE2B,GAAeA,GAAGkE,GAAG2zB,EAAE1zB,EAAE7F,EAAEwB,EAAEC,EAAExB,EAAE,MAAM,GAAGwB,EAPsU,SAAW1B,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAsC,oBAAjCA,EAAEqC,GAAGrC,EAAEqC,IAAIrC,EAAE,eAA0CA,EAAE,IAAI,CAO5b8E,CAAE9E,GAAG,oBAAoB0B,EAAE,IAAI1B,EAAE0B,EAAEuB,KAAKjD,GAAG2B,EAAE,IAAImE,EAAE9F,EAAEmxB,QAAQC,MAA6BvrB,GAAG2zB,EAA1B1zB,EAAEA,EAAE6B,MAA0B1H,EAAEwB,EAAtBC,EAAEF,EAAEk2B,EAAE5xB,EAAEnE,KAAkBzB,QAAQ,GAAG,WAAW4F,EAAE,MAAM7F,EAAEme,OAAOpe,GAAGiF,MAAM,mDAAmD,oBAAoBhF,EAAE,qBAAqBgB,OAAO6M,KAAK9N,GAAGqwB,KAAK,MAAM,IAAIpwB,GAAG,6EAA6E,OAAO4F,CAAC,CACzZ,SAASq7B,EAAElhC,EAAEC,EAAEwB,GAAG,GAAG,MAAMzB,EAAE,OAAOA,EAAE,IAAIwB,EAAE,GAAGtB,EAAE,EAAmD,OAAjDs5B,EAAEx5B,EAAEwB,EAAE,GAAG,IAAG,SAASxB,GAAG,OAAOC,EAAEgD,KAAKxB,EAAEzB,EAAEE,IAAI,IAAUsB,CAAC,CAAC,SAASsgC,EAAE9hC,GAAG,IAAI,IAAIA,EAAEguC,QAAQ,CAAC,IAAI/tC,EAAED,EAAEiuC,SAAQhuC,EAAEA,KAAMmrB,MAAK,SAASnrB,GAAM,IAAID,EAAEguC,UAAU,IAAIhuC,EAAEguC,UAAQhuC,EAAEguC,QAAQ,EAAEhuC,EAAEiuC,QAAQhuC,EAAC,IAAE,SAASA,GAAM,IAAID,EAAEguC,UAAU,IAAIhuC,EAAEguC,UAAQhuC,EAAEguC,QAAQ,EAAEhuC,EAAEiuC,QAAQhuC,EAAC,KAAI,IAAID,EAAEguC,UAAUhuC,EAAEguC,QAAQ,EAAEhuC,EAAEiuC,QAAQhuC,EAAE,CAAC,GAAG,IAAID,EAAEguC,QAAQ,OAAOhuC,EAAEiuC,QAAQC,QAAQ,MAAMluC,EAAEiuC,OAAQ,CAC5Z,IAAI9L,EAAE,CAAChwB,QAAQ,MAAMmwB,EAAE,CAACtqB,WAAW,MAAMwqB,EAAE,CAACpN,uBAAuB+M,EAAEtqB,wBAAwByqB,EAAEzE,kBAAkBhK,GAAG,SAASwP,IAAI,MAAMp+B,MAAM,2DAA4D,CACzMsnC,EAAQ4B,SAAS,CAACC,IAAIlN,EAAE3+B,QAAQ,SAASvC,EAAEC,EAAEwB,GAAGy/B,EAAElhC,GAAE,WAAWC,EAAE8Q,MAAMnP,KAAKzB,UAAU,GAAEsB,EAAE,EAAE4sC,MAAM,SAASruC,GAAG,IAAIC,EAAE,EAAuB,OAArBihC,EAAElhC,GAAE,WAAWC,GAAG,IAAUA,CAAC,EAAEquC,QAAQ,SAAStuC,GAAG,OAAOkhC,EAAElhC,GAAE,SAASA,GAAG,OAAOA,CAAC,KAAI,EAAE,EAAEuuC,KAAK,SAASvuC,GAAG,IAAIy1B,EAAEz1B,GAAG,MAAMiF,MAAM,yEAAyE,OAAOjF,CAAC,GAAGusC,EAAQiC,UAAUriB,EAAEogB,EAAQkC,SAAS1uC,EAAEwsC,EAAQmC,SAASzd,EAAEsb,EAAQoC,cAAcviB,EAAEmgB,EAAQqC,WAAW5d,EAAEub,EAAQsC,SAAS1lB,EAClcojB,EAAQ7oC,mDAAmD8+B,EAAE+J,EAAQuC,IAAIzL,EACzEkJ,EAAQwC,aAAa,SAAS/uC,EAAEC,EAAEwB,GAAG,GAAG,OAAOzB,QAAG,IAASA,EAAE,MAAMiF,MAAM,iFAAiFjF,EAAE,KAAK,IAAIwB,EAAE6T,EAAE,CAAC,EAAErV,EAAE2wB,OAAOzwB,EAAEF,EAAEme,IAAIrY,EAAE9F,EAAEgwB,IAAInqB,EAAE7F,EAAEiwB,OAAO,GAAG,MAAMhwB,EAAE,CAAoE,QAAnE,IAASA,EAAE+vB,MAAMlqB,EAAE7F,EAAE+vB,IAAInqB,EAAEguB,EAAE1hB,cAAS,IAASlS,EAAEke,MAAMje,EAAE,GAAGD,EAAEke,KAAQne,EAAEkC,MAAMlC,EAAEkC,KAAK44B,aAAa,IAAIn5B,EAAE3B,EAAEkC,KAAK44B,aAAa,IAAIp5B,KAAKzB,EAAE+oB,EAAE/lB,KAAKhD,EAAEyB,KAAKmzB,EAAE1zB,eAAeO,KAAKF,EAAEE,QAAG,IAASzB,EAAEyB,SAAI,IAASC,EAAEA,EAAED,GAAGzB,EAAEyB,GAAG,CAAC,IAAIA,EAAEvB,UAAUC,OAAO,EAAE,GAAG,IAAIsB,EAAEF,EAAE8H,SAAS7H,OAAO,GAAG,EAAEC,EAAE,CAACC,EAAEkH,MAAMnH,GACrf,IAAI,IAAIsP,EAAE,EAAEA,EAAEtP,EAAEsP,IAAIrP,EAAEqP,GAAG7Q,UAAU6Q,EAAE,GAAGxP,EAAE8H,SAAS3H,CAAC,CAAC,MAAM,CAAC2E,SAASV,EAAE1D,KAAKlC,EAAEkC,KAAKic,IAAIje,EAAE8vB,IAAIlqB,EAAE6qB,MAAMnvB,EAAEyuB,OAAOpqB,EAAE,EAAE0mC,EAAQyC,cAAc,SAAShvC,GAAqK,OAAlKA,EAAE,CAACsG,SAAS4iB,EAAE2I,cAAc7xB,EAAEivC,eAAejvC,EAAEkvC,aAAa,EAAEC,SAAS,KAAKC,SAAS,KAAKC,cAAc,KAAKC,YAAY,OAAQH,SAAS,CAAC7oC,SAASyiB,EAAExiB,SAASvG,GAAUA,EAAEovC,SAASpvC,CAAC,EAAEusC,EAAQxrC,cAAcw0B,EAAEgX,EAAQgD,cAAc,SAASvvC,GAAG,IAAIC,EAAEs1B,EAAE5M,KAAK,KAAK3oB,GAAY,OAATC,EAAEiC,KAAKlC,EAASC,CAAC,EAAEssC,EAAQiD,UAAU,WAAW,MAAM,CAACr9B,QAAQ,KAAK,EAC9do6B,EAAQkD,WAAW,SAASzvC,GAAG,MAAM,CAACsG,SAAS/E,EAAE6E,OAAOpG,EAAE,EAAEusC,EAAQmD,eAAeja,EAAE8W,EAAQoD,KAAK,SAAS3vC,GAAG,MAAM,CAACsG,SAAS4qB,EAAE1qB,SAAS,CAACwnC,SAAS,EAAEC,QAAQjuC,GAAGyG,MAAMq7B,EAAE,EAAEyK,EAAQqD,KAAK,SAAS5vC,EAAEC,GAAG,MAAM,CAACqG,SAAS2iB,EAAE/mB,KAAKlC,EAAEm+B,aAAQ,IAASl+B,EAAE,KAAKA,EAAE,EAAEssC,EAAQsD,gBAAgB,SAAS7vC,GAAG,IAAIC,EAAEqiC,EAAEtqB,WAAWsqB,EAAEtqB,WAAW,CAAC,EAAE,IAAIhY,GAAG,CAAC,QAAQsiC,EAAEtqB,WAAW/X,CAAC,CAAC,EAAEssC,EAAQuD,aAAazM,EAAEkJ,EAAQ5S,YAAY,SAAS35B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQwnB,YAAY35B,EAAEC,EAAE,EAAEssC,EAAQ3S,WAAW,SAAS55B,GAAG,OAAOmiC,EAAEhwB,QAAQynB,WAAW55B,EAAE,EAC3fusC,EAAQlS,cAAc,WAAW,EAAEkS,EAAQjS,iBAAiB,SAASt6B,GAAG,OAAOmiC,EAAEhwB,QAAQmoB,iBAAiBt6B,EAAE,EAAEusC,EAAQ1S,UAAU,SAAS75B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQ0nB,UAAU75B,EAAEC,EAAE,EAAEssC,EAAQ7R,MAAM,WAAW,OAAOyH,EAAEhwB,QAAQuoB,OAAO,EAAE6R,EAAQzS,oBAAoB,SAAS95B,EAAEC,EAAEwB,GAAG,OAAO0gC,EAAEhwB,QAAQ2nB,oBAAoB95B,EAAEC,EAAEwB,EAAE,EAAE8qC,EAAQxS,mBAAmB,SAAS/5B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQ4nB,mBAAmB/5B,EAAEC,EAAE,EAAEssC,EAAQvS,gBAAgB,SAASh6B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQ6nB,gBAAgBh6B,EAAEC,EAAE,EACzdssC,EAAQtS,QAAQ,SAASj6B,EAAEC,GAAG,OAAOkiC,EAAEhwB,QAAQ8nB,QAAQj6B,EAAEC,EAAE,EAAEssC,EAAQrS,WAAW,SAASl6B,EAAEC,EAAEwB,GAAG,OAAO0gC,EAAEhwB,QAAQ+nB,WAAWl6B,EAAEC,EAAEwB,EAAE,EAAE8qC,EAAQpS,OAAO,SAASn6B,GAAG,OAAOmiC,EAAEhwB,QAAQgoB,OAAOn6B,EAAE,EAAEusC,EAAQnS,SAAS,SAASp6B,GAAG,OAAOmiC,EAAEhwB,QAAQioB,SAASp6B,EAAE,EAAEusC,EAAQ9R,qBAAqB,SAASz6B,EAAEC,EAAEwB,GAAG,OAAO0gC,EAAEhwB,QAAQsoB,qBAAqBz6B,EAAEC,EAAEwB,EAAE,EAAE8qC,EAAQhS,cAAc,WAAW,OAAO4H,EAAEhwB,QAAQooB,eAAe,EAAEgS,EAAQ1B,QAAQ,uBCtBla2C,EAAOjB,QAAU,EAAjBiB,oBCAAA,EAAOjB,QAAU,EAAjBiB,kBCMW,SAAS9rC,EAAE1B,EAAEC,GAAG,IAAIC,EAAEF,EAAEI,OAAOJ,EAAEmQ,KAAKlQ,GAAGD,EAAE,KAAK,EAAEE,GAAG,CAAC,IAAIsB,EAAEtB,EAAE,IAAI,EAAEuB,EAAEzB,EAAEwB,GAAG,KAAG,EAAEG,EAAEF,EAAExB,IAA0B,MAAMD,EAA7BA,EAAEwB,GAAGvB,EAAED,EAAEE,GAAGuB,EAAEvB,EAAEsB,CAAc,CAAC,CAAC,SAASqE,EAAE7F,GAAG,OAAO,IAAIA,EAAEI,OAAO,KAAKJ,EAAE,EAAE,CAAC,SAAS8F,EAAE9F,GAAG,GAAG,IAAIA,EAAEI,OAAO,OAAO,KAAK,IAAIH,EAAED,EAAE,GAAGE,EAAEF,EAAE+vC,MAAM,GAAG7vC,IAAID,EAAE,CAACD,EAAE,GAAGE,EAAEF,EAAE,IAAI,IAAIwB,EAAE,EAAEC,EAAEzB,EAAEI,OAAO+oB,EAAE1nB,IAAI,EAAED,EAAE2nB,GAAG,CAAC,IAAInY,EAAE,GAAGxP,EAAE,GAAG,EAAE6T,EAAErV,EAAEgR,GAAG8X,EAAE9X,EAAE,EAAEiY,EAAEjpB,EAAE8oB,GAAG,GAAG,EAAEnnB,EAAE0T,EAAEnV,GAAG4oB,EAAErnB,GAAG,EAAEE,EAAEsnB,EAAE5T,IAAIrV,EAAEwB,GAAGynB,EAAEjpB,EAAE8oB,GAAG5oB,EAAEsB,EAAEsnB,IAAI9oB,EAAEwB,GAAG6T,EAAErV,EAAEgR,GAAG9Q,EAAEsB,EAAEwP,OAAQ,MAAG8X,EAAErnB,GAAG,EAAEE,EAAEsnB,EAAE/oB,IAA0B,MAAMF,EAA7BA,EAAEwB,GAAGynB,EAAEjpB,EAAE8oB,GAAG5oB,EAAEsB,EAAEsnB,CAAc,EAAC,CAAC,OAAO7oB,CAAC,CAC3c,SAAS0B,EAAE3B,EAAEC,GAAG,IAAIC,EAAEF,EAAEgwC,UAAU/vC,EAAE+vC,UAAU,OAAO,IAAI9vC,EAAEA,EAAEF,EAAEoY,GAAGnY,EAAEmY,EAAE,CAAC,GAAG,kBAAkB63B,aAAa,oBAAoBA,YAAY31B,IAAI,CAAC,IAAI1U,EAAEqqC,YAAY1D,EAAQx5B,aAAa,WAAW,OAAOnN,EAAE0U,KAAK,CAAC,KAAK,CAAC,IAAIva,EAAEsa,KAAK2W,EAAEjxB,EAAEua,MAAMiyB,EAAQx5B,aAAa,WAAW,OAAOhT,EAAEua,MAAM0W,CAAC,CAAC,CAAC,IAAIC,EAAE,GAAGlI,EAAE,GAAGG,EAAE,EAAE3nB,EAAE,KAAK2vB,EAAE,EAAE7uB,GAAE,EAAGyC,GAAE,EAAGgO,GAAE,EAAGqV,EAAE,oBAAoByC,WAAWA,WAAW,KAAKuB,EAAE,oBAAoBrB,aAAaA,aAAa,KAAK1B,EAAE,qBAAqB8mB,aAAaA,aAAa,KACnT,SAAS9jB,EAAEpsB,GAAG,IAAI,IAAIC,EAAE4F,EAAEkjB,GAAG,OAAO9oB,GAAG,CAAC,GAAG,OAAOA,EAAE0zB,SAAS7tB,EAAEijB,OAAQ,MAAG9oB,EAAEkwC,WAAWnwC,GAAgD,MAA9C8F,EAAEijB,GAAG9oB,EAAE+vC,UAAU/vC,EAAEmwC,eAAe1uC,EAAEuvB,EAAEhxB,EAAa,CAACA,EAAE4F,EAAEkjB,EAAE,CAAC,CAAC,SAASuD,EAAEtsB,GAAa,GAAV8S,GAAE,EAAGsZ,EAAEpsB,IAAO8E,EAAE,GAAG,OAAOe,EAAEorB,GAAGnsB,GAAE,EAAG4pB,EAAE1F,OAAO,CAAC,IAAI/oB,EAAE4F,EAAEkjB,GAAG,OAAO9oB,GAAG4zB,EAAEvH,EAAErsB,EAAEkwC,UAAUnwC,EAAE,CAAC,CACra,SAASgpB,EAAEhpB,EAAEC,GAAG6E,GAAE,EAAGgO,IAAIA,GAAE,EAAGqZ,EAAE0I,GAAGA,GAAG,GAAGxyB,GAAE,EAAG,IAAInC,EAAEgxB,EAAE,IAAS,IAAL9E,EAAEnsB,GAAOsB,EAAEsE,EAAEorB,GAAG,OAAO1vB,MAAMA,EAAE6uC,eAAenwC,IAAID,IAAIu1B,MAAM,CAAC,IAAI/zB,EAAED,EAAEoyB,SAAS,GAAG,oBAAoBnyB,EAAE,CAACD,EAAEoyB,SAAS,KAAKzC,EAAE3vB,EAAE8uC,cAAc,IAAI5uC,EAAED,EAAED,EAAE6uC,gBAAgBnwC,GAAGA,EAAEssC,EAAQx5B,eAAe,oBAAoBtR,EAAEF,EAAEoyB,SAASlyB,EAAEF,IAAIsE,EAAEorB,IAAInrB,EAAEmrB,GAAG7E,EAAEnsB,EAAE,MAAM6F,EAAEmrB,GAAG1vB,EAAEsE,EAAEorB,EAAE,CAAC,GAAG,OAAO1vB,EAAE,IAAI4nB,GAAE,MAAO,CAAC,IAAInY,EAAEnL,EAAEkjB,GAAG,OAAO/X,GAAG6iB,EAAEvH,EAAEtb,EAAEm/B,UAAUlwC,GAAGkpB,GAAE,CAAE,CAAC,OAAOA,CAAC,CAAC,QAAQ5nB,EAAE,KAAK2vB,EAAEhxB,EAAEmC,GAAE,CAAE,CAAC,CAD1a,qBAAqBiuC,gBAAW,IAASA,UAAUC,iBAAY,IAASD,UAAUC,WAAWC,gBAAgBF,UAAUC,WAAWC,eAAe7nB,KAAK2nB,UAAUC,YAC2Q,IACzPrP,EAD6P1L,GAAE,EAAGC,EAAE,KAAKZ,GAAG,EAAEiB,EAAE,EAAE4B,GAAG,EACvc,SAASnC,IAAI,QAAOgX,EAAQx5B,eAAe2kB,EAAE5B,EAAO,CAAC,SAAS0D,IAAI,GAAG,OAAO/D,EAAE,CAAC,IAAIz1B,EAAEusC,EAAQx5B,eAAe2kB,EAAE13B,EAAE,IAAIC,GAAE,EAAG,IAAIA,EAAEw1B,GAAE,EAAGz1B,EAAE,CAAC,QAAQC,EAAEihC,KAAK1L,GAAE,EAAGC,EAAE,KAAK,CAAC,MAAMD,GAAE,CAAE,CAAO,GAAG,oBAAoBpM,EAAE8X,EAAE,WAAW9X,EAAEoQ,EAAE,OAAO,GAAG,qBAAqBiX,eAAe,CAAC,IAAI3O,EAAE,IAAI2O,eAAetO,EAAEL,EAAE4O,MAAM5O,EAAE6O,MAAMC,UAAUpX,EAAE0H,EAAE,WAAWiB,EAAE0O,YAAY,KAAK,CAAC,MAAM3P,EAAE,WAAW/Y,EAAEqR,EAAE,EAAE,EAAE,SAAS9K,EAAE1uB,GAAGy1B,EAAEz1B,EAAEw1B,IAAIA,GAAE,EAAG0L,IAAI,CAAC,SAASrN,EAAE7zB,EAAEC,GAAG40B,EAAE1M,GAAE,WAAWnoB,EAAEusC,EAAQx5B,eAAe,GAAE9S,EAAE,CAC5dssC,EAAQ54B,sBAAsB,EAAE44B,EAAQp5B,2BAA2B,EAAEo5B,EAAQ94B,qBAAqB,EAAE84B,EAAQh5B,wBAAwB,EAAEg5B,EAAQuE,mBAAmB,KAAKvE,EAAQl5B,8BAA8B,EAAEk5B,EAAQ95B,wBAAwB,SAASzS,GAAGA,EAAE2zB,SAAS,IAAI,EAAE4Y,EAAQwE,2BAA2B,WAAWjsC,GAAGzC,IAAIyC,GAAE,EAAG4pB,EAAE1F,GAAG,EAC1UujB,EAAQyE,wBAAwB,SAAShxC,GAAG,EAAEA,GAAG,IAAIA,EAAE28B,QAAQC,MAAM,mHAAmH9G,EAAE,EAAE91B,EAAE+T,KAAKk9B,MAAM,IAAIjxC,GAAG,CAAC,EAAEusC,EAAQt5B,iCAAiC,WAAW,OAAOie,CAAC,EAAEqb,EAAQ2E,8BAA8B,WAAW,OAAOrrC,EAAEorB,EAAE,EAAEsb,EAAQ4E,cAAc,SAASnxC,GAAG,OAAOkxB,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAIjxB,EAAE,EAAE,MAAM,QAAQA,EAAEixB,EAAE,IAAIhxB,EAAEgxB,EAAEA,EAAEjxB,EAAE,IAAI,OAAOD,GAAG,CAAC,QAAQkxB,EAAEhxB,CAAC,CAAC,EAAEqsC,EAAQ6E,wBAAwB,WAAW,EAC9f7E,EAAQ15B,sBAAsB,WAAW,EAAE05B,EAAQ8E,yBAAyB,SAASrxC,EAAEC,GAAG,OAAOD,GAAG,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,QAAQA,EAAE,EAAE,IAAIE,EAAEgxB,EAAEA,EAAElxB,EAAE,IAAI,OAAOC,GAAG,CAAC,QAAQixB,EAAEhxB,CAAC,CAAC,EAChMqsC,EAAQh6B,0BAA0B,SAASvS,EAAEC,EAAEC,GAAG,IAAIsB,EAAE+qC,EAAQx5B,eAA8F,OAA/E,kBAAkB7S,GAAG,OAAOA,EAAaA,EAAE,kBAAZA,EAAEA,EAAEoxC,QAA6B,EAAEpxC,EAAEsB,EAAEtB,EAAEsB,EAAGtB,EAAEsB,EAASxB,GAAG,KAAK,EAAE,IAAIyB,GAAG,EAAE,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,KAAK,EAAEA,EAAE,WAAW,MAAM,KAAK,EAAEA,EAAE,IAAI,MAAM,QAAQA,EAAE,IAAmN,OAAzMzB,EAAE,CAACoY,GAAG8Q,IAAIyK,SAAS1zB,EAAEowC,cAAcrwC,EAAEmwC,UAAUjwC,EAAEkwC,eAAvD3uC,EAAEvB,EAAEuB,EAAoEuuC,WAAW,GAAG9vC,EAAEsB,GAAGxB,EAAEgwC,UAAU9vC,EAAEwB,EAAEqnB,EAAE/oB,GAAG,OAAO6F,EAAEorB,IAAIjxB,IAAI6F,EAAEkjB,KAAKjW,GAAGqZ,EAAE0I,GAAGA,GAAG,GAAG/hB,GAAE,EAAG+gB,EAAEvH,EAAEpsB,EAAEsB,MAAMxB,EAAEgwC,UAAUvuC,EAAEC,EAAEuvB,EAAEjxB,GAAG8E,GAAGzC,IAAIyC,GAAE,EAAG4pB,EAAE1F,KAAYhpB,CAAC,EACneusC,EAAQ55B,qBAAqB4iB,EAAEgX,EAAQgF,sBAAsB,SAASvxC,GAAG,IAAIC,EAAEixB,EAAE,OAAO,WAAW,IAAIhxB,EAAEgxB,EAAEA,EAAEjxB,EAAE,IAAI,OAAOD,EAAE+Q,MAAMnP,KAAKzB,UAAU,CAAC,QAAQ+wB,EAAEhxB,CAAC,CAAC,CAAC,iBCf7JstC,EAAOjB,QAAU,EAAjBiB,OCFEgE,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAapF,QAGrB,IAAIiB,EAASgE,EAAyBE,GAAY,CAGjDnF,QAAS,CAAC,GAOX,OAHAsF,EAAoBH,GAAUlE,EAAQA,EAAOjB,QAASkF,GAG/CjE,EAAOjB,OACf,CAGAkF,EAAoBzgC,EAAI6gC,QCzBxB,IACIC,EADAC,EAAW9wC,OAAO+wC,eAAkBC,GAAShxC,OAAO+wC,eAAeC,GAASA,GAASA,EAAa,UAQtGR,EAAoB1oB,EAAI,SAASphB,EAAO2nB,GAEvC,GADU,EAAPA,IAAU3nB,EAAQ/F,KAAK+F,IAChB,EAAP2nB,EAAU,OAAO3nB,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP2nB,GAAa3nB,EAAMuqC,WAAY,OAAOvqC,EAC1C,GAAW,GAAP2nB,GAAoC,oBAAf3nB,EAAMyjB,KAAqB,OAAOzjB,CAC5D,CACA,IAAIwqC,EAAKlxC,OAAOk3B,OAAO,MACvBsZ,EAAoBxgB,EAAEkhB,GACtB,IAAIC,EAAM,CAAC,EACXN,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAI5/B,EAAiB,EAAPmd,GAAY3nB,EAAyB,iBAAXwK,KAAyB2/B,EAAelkC,QAAQuE,GAAUA,EAAU4/B,EAAS5/B,GACxHlR,OAAOoxC,oBAAoBlgC,GAAS5P,SAAS4b,GAASi0B,EAAIj0B,GAAO,IAAOxW,EAAMwW,KAI/E,OAFAi0B,EAAa,QAAI,IAAM,EACvBX,EAAoBjwC,EAAE2wC,EAAIC,GACnBD,CACR,MCxBAV,EAAoBjwC,EAAI,CAAC+qC,EAAS+F,KACjC,IAAI,IAAIn0B,KAAOm0B,EACXb,EAAoBc,EAAED,EAAYn0B,KAASszB,EAAoBc,EAAEhG,EAASpuB,IAC5Eld,OAAOuE,eAAe+mC,EAASpuB,EAAK,CAAE/W,YAAY,EAAMF,IAAKorC,EAAWn0B,IAE1E,ECNDszB,EAAoB/vC,EAAI,CAAC,EAGzB+vC,EAAoBhwC,EAAK+wC,GACjBxnB,QAAQynB,IAAIxxC,OAAO6M,KAAK2jC,EAAoB/vC,GAAGgxC,QAAO,CAACC,EAAUx0B,KACvEszB,EAAoB/vC,EAAEyc,GAAKq0B,EAASG,GAC7BA,IACL,KCNJlB,EAAoBvoB,EAAKspB,GAEjB,aAAeA,EAAf,qBCFRf,EAAoBmB,SAAYJ,IAEf,ECHjBf,EAAoBc,EAAI,CAACN,EAAKY,IAAU5xC,OAAOC,UAAUC,eAAe8B,KAAKgvC,EAAKY,SCAlF,IAAIC,EAAa,CAAC,EACdC,EAAoB,UAExBtB,EAAoB7rC,EAAI,CAACgc,EAAKwP,EAAMjT,EAAKq0B,KACxC,GAAGM,EAAWlxB,GAAQkxB,EAAWlxB,GAAKzR,KAAKihB,OAA3C,CACA,IAAI4hB,EAAQC,EACZ,QAAWrB,IAARzzB,EAEF,IADA,IAAI+0B,EAAUpyC,SAASqyC,qBAAqB,UACpCC,EAAI,EAAGA,EAAIF,EAAQ9yC,OAAQgzC,IAAK,CACvC,IAAIC,EAAIH,EAAQE,GAChB,GAAGC,EAAEC,aAAa,QAAU1xB,GAAOyxB,EAAEC,aAAa,iBAAmBP,EAAoB50B,EAAK,CAAE60B,EAASK,EAAG,KAAO,CACpH,CAEGL,IACHC,GAAa,GACbD,EAASlyC,SAASC,cAAc,WAEzBwyC,QAAU,QACjBP,EAAOQ,QAAU,IACb/B,EAAoBgC,IACvBT,EAAO3vC,aAAa,QAASouC,EAAoBgC,IAElDT,EAAO3vC,aAAa,eAAgB0vC,EAAoB50B,GAExD60B,EAAOvO,IAAM7iB,GAEdkxB,EAAWlxB,GAAO,CAACwP,GACnB,IAAIsiB,EAAmB,CAACC,EAAM1xB,KAE7B+wB,EAAOY,QAAUZ,EAAOa,OAAS,KACjC/oB,aAAa0oB,GACb,IAAIM,EAAUhB,EAAWlxB,GAIzB,UAHOkxB,EAAWlxB,GAClBoxB,EAAOtjC,YAAcsjC,EAAOtjC,WAAWtF,YAAY4oC,GACnDc,GAAWA,EAAQvxC,SAASwxC,GAAQA,EAAG9xB,KACpC0xB,EAAM,OAAOA,EAAK1xB,EAAM,EAExBuxB,EAAU5oB,WAAW8oB,EAAiB/qB,KAAK,UAAMipB,EAAW,CAAE1vC,KAAM,UAAWqN,OAAQyjC,IAAW,MACtGA,EAAOY,QAAUF,EAAiB/qB,KAAK,KAAMqqB,EAAOY,SACpDZ,EAAOa,OAASH,EAAiB/qB,KAAK,KAAMqqB,EAAOa,QACnDZ,GAAcnyC,SAASkzC,KAAK3pC,YAAY2oC,EApCkB,CAoCX,MCvChDvB,EAAoBxgB,EAAKsb,IACH,qBAAX3oC,QAA0BA,OAAOqwC,aAC1ChzC,OAAOuE,eAAe+mC,EAAS3oC,OAAOqwC,YAAa,CAAEtsC,MAAO,WAE7D1G,OAAOuE,eAAe+mC,EAAS,aAAc,CAAE5kC,OAAO,GAAO,ECL9D8pC,EAAoB1xC,EAAI,UCKxB,IAAIm0C,EAAkB,CACrB,IAAK,GAGNzC,EAAoB/vC,EAAEyyC,EAAI,CAAC3B,EAASG,KAElC,IAAIyB,EAAqB3C,EAAoBc,EAAE2B,EAAiB1B,GAAW0B,EAAgB1B,QAAWZ,EACtG,GAA0B,IAAvBwC,EAGF,GAAGA,EACFzB,EAASxiC,KAAKikC,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAIrpB,SAAQ,CAACG,EAASmpB,IAAYF,EAAqBF,EAAgB1B,GAAW,CAACrnB,EAASmpB,KAC1G3B,EAASxiC,KAAKikC,EAAmB,GAAKC,GAGtC,IAAIzyB,EAAM6vB,EAAoB1xC,EAAI0xC,EAAoBvoB,EAAEspB,GAEpD5V,EAAQ,IAAI33B,MAgBhBwsC,EAAoB7rC,EAAEgc,GAfFK,IACnB,GAAGwvB,EAAoBc,EAAE2B,EAAiB1B,KAEf,KAD1B4B,EAAqBF,EAAgB1B,MACR0B,EAAgB1B,QAAWZ,GACrDwC,GAAoB,CACtB,IAAIG,EAAYtyB,IAAyB,SAAfA,EAAM/f,KAAkB,UAAY+f,EAAM/f,MAChEsyC,EAAUvyB,GAASA,EAAM1S,QAAU0S,EAAM1S,OAAOk1B,IACpD7H,EAAML,QAAU,iBAAmBiW,EAAU,cAAgB+B,EAAY,KAAOC,EAAU,IAC1F5X,EAAM32B,KAAO,iBACb22B,EAAM16B,KAAOqyC,EACb3X,EAAM6X,QAAUD,EAChBJ,EAAmB,GAAGxX,EACvB,CACD,GAEwC,SAAW4V,EAASA,EAE/D,CACD,EAcF,IAAIkC,EAAuB,CAACC,EAA4B93B,KACvD,IAKI60B,EAAUc,EALVoC,EAAW/3B,EAAK,GAChBg4B,EAAch4B,EAAK,GACnBi4B,EAAUj4B,EAAK,GAGIu2B,EAAI,EAC3B,GAAGwB,EAASG,MAAM38B,GAAgC,IAAxB87B,EAAgB97B,KAAa,CACtD,IAAIs5B,KAAYmD,EACZpD,EAAoBc,EAAEsC,EAAanD,KACrCD,EAAoBzgC,EAAE0gC,GAAYmD,EAAYnD,IAGhD,GAAGoD,EAAsBA,EAAQrD,EAClC,CAEA,IADGkD,GAA4BA,EAA2B93B,GACrDu2B,EAAIwB,EAASx0C,OAAQgzC,IACzBZ,EAAUoC,EAASxB,GAChB3B,EAAoBc,EAAE2B,EAAiB1B,IAAY0B,EAAgB1B,IACrE0B,EAAgB1B,GAAS,KAE1B0B,EAAgB1B,GAAW,CAC5B,EAIGwC,EAAqBC,KAAyB,mBAAIA,KAAyB,oBAAK,GACpFD,EAAmBzyC,QAAQmyC,EAAqB/rB,KAAK,KAAM,IAC3DqsB,EAAmB7kC,KAAOukC,EAAqB/rB,KAAK,KAAMqsB,EAAmB7kC,KAAKwY,KAAKqsB,YChF3EE,uRAAZ,SAAYA,GAQVA,EAAA,UAOAA,EAAA,YAMAA,EAAA,iBACD,CAtBD,CAAYA,IAAAA,EAsBX,KAqKD,MAAMC,EAAoB,WAySV,SAAAC,EAAUztC,EAAY40B,GACpC,IAAc,IAAV50B,GAA6B,OAAVA,GAAmC,qBAAVA,EAC9C,MAAM,IAAI1C,MAAMs3B,EAEpB,CAEgB,SAAA8Y,EAAQC,EAAW/Y,GACjC,IAAK+Y,EAAM,CAEc,qBAAZ3Y,SAAyBA,QAAQ4Y,KAAKhZ,GAEjD,IAME,MAAM,IAAIt3B,MAAMs3B,EAEjB,CAAC,MAAO96B,GAAI,CACd,CACH,CASA,SAAS+zC,EAAgBj3B,EAAoBiS,GAC3C,MAAO,CACLilB,IAAKl3B,EAASod,MACdxd,IAAKI,EAASJ,IACdu3B,IAAKllB,EAET,CAKM,SAAUmlB,EACdxjC,EACAyjC,EACAja,EACAxd,GAcA,YAfA,IAAAwd,IAAAA,EAAa,MAGDka,EAAA,CACVC,SAA6B,kBAAZ3jC,EAAuBA,EAAUA,EAAQ2jC,SAC1Dt0B,OAAQ,GACRu0B,KAAM,IACY,kBAAPH,EAAkBI,EAAUJ,GAAMA,EAAE,CAC/Cja,QAKAxd,IAAMy3B,GAAOA,EAAgBz3B,KAAQA,GAjChCpK,KAAK0U,SAASve,SAAS,IAAI+rC,OAAO,EAAG,IAoC9C,CAKgB,SAAAC,EAAUC,GAIV,IAJW,SACzBL,EAAW,IAAG,OACdt0B,EAAS,GAAE,KACXu0B,EAAO,IACOI,EAKd,OAJI30B,GAAqB,MAAXA,IACZs0B,GAAiC,MAArBt0B,EAAOzT,OAAO,GAAayT,EAAS,IAAMA,GACpDu0B,GAAiB,MAATA,IACVD,GAA+B,MAAnBC,EAAKhoC,OAAO,GAAagoC,EAAO,IAAMA,GAC7CD,CACT,CAKM,SAAUE,EAAUI,GACxB,IAAIC,EAA4B,CAAC,EAEjC,GAAID,EAAM,CACR,IAAIE,EAAYF,EAAKxoC,QAAQ,KACzB0oC,GAAa,IACfD,EAAWN,KAAOK,EAAKH,OAAOK,GAC9BF,EAAOA,EAAKH,OAAO,EAAGK,IAGxB,IAAIC,EAAcH,EAAKxoC,QAAQ,KAC3B2oC,GAAe,IACjBF,EAAW70B,OAAS40B,EAAKH,OAAOM,GAChCH,EAAOA,EAAKH,OAAO,EAAGM,IAGpBH,IACFC,EAAWP,SAAWM,EAEzB,CAED,OAAOC,CACT,CASA,SAASG,EACPC,EACAC,EACAC,EACA3tC,QAAA,IAAAA,IAAAA,EAA6B,CAAC,GAE9B,IAAI,OAAEnI,EAASC,SAASkkB,YAAY,SAAE4xB,GAAW,GAAU5tC,EACvD6tC,EAAgBh2C,EAAOi2C,QACvBjgB,EAASqe,EAAO6B,IAChB7uB,EAA4B,KAE5BsI,EAAQwmB,IASZ,SAASA,IAEP,OADYH,EAAclb,OAAS,CAAE+Z,IAAK,OAC7BA,GACf,CAEA,SAASuB,IACPpgB,EAASqe,EAAO6B,IAChB,IAAIG,EAAYF,IACZG,EAAqB,MAAbD,EAAoB,KAAOA,EAAY1mB,EACnDA,EAAQ0mB,EACJhvB,GACFA,EAAS,CAAE2O,SAAQtY,SAAUu4B,EAAQv4B,SAAU44B,SAEnD,CA+CA,SAASC,EAAUxB,GAIjB,IAAIxnC,EACyB,SAA3BvN,EAAO0d,SAAS84B,OACZx2C,EAAO0d,SAAS84B,OAChBx2C,EAAO0d,SAAS6F,KAElBA,EAAqB,kBAAPwxB,EAAkBA,EAAKM,EAAWN,GASpD,OALAxxB,EAAOA,EAAK7gB,QAAQ,KAAM,OAC1B6xC,EACEhnC,EACsE,sEAAAgW,GAEjE,IAAIkzB,IAAIlzB,EAAMhW,EACvB,CApFa,MAAToiB,IACFA,EAAQ,EACRqmB,EAAcU,aAAY1B,EAAM,GAAAgB,EAAclb,MAAO,CAAA+Z,IAAKllB,IAAS,KAoFrE,IAAIsmB,EAAmB,CACrB,UAAIjgB,GACF,OAAOA,GAET,YAAItY,GACF,OAAOk4B,EAAY51C,EAAQg2C,IAE7BW,MAAAA,CAAOzD,GACL,GAAI7rB,EACF,MAAM,IAAIjjB,MAAM,8CAKlB,OAHApE,EAAO+P,iBAAiBukC,EAAmB8B,GAC3C/uB,EAAW6rB,EAEJ,KACLlzC,EAAOgQ,oBAAoBskC,EAAmB8B,GAC9C/uB,EAAW,IAAI,GAGnBwuB,WAAWd,GACFc,EAAW71C,EAAQ+0C,GAE5BwB,YACAK,cAAAA,CAAe7B,GAEb,IAAIh0B,EAAMw1B,EAAUxB,GACpB,MAAO,CACLE,SAAUl0B,EAAIk0B,SACdt0B,OAAQI,EAAIJ,OACZu0B,KAAMn0B,EAAIm0B,OAGd5lC,KAlGF,SAAcylC,EAAQja,GACpB9E,EAASqe,EAAOwC,KAChB,IAAIn5B,EAAWo3B,EAAemB,EAAQv4B,SAAUq3B,EAAIja,GAChDgb,GAAkBA,EAAiBp4B,EAAUq3B,GAEjDplB,EAAQwmB,IAAa,EACrB,IAAIW,EAAenC,EAAgBj3B,EAAUiS,GACzC5O,EAAMk1B,EAAQJ,WAAWn4B,GAG7B,IACEs4B,EAAce,UAAUD,EAAc,GAAI/1B,GAC1C,MAAOgb,GAKP,GAAIA,aAAiBib,cAA+B,mBAAfjb,EAAM32B,KACzC,MAAM22B,EAIR/7B,EAAO0d,SAASxZ,OAAO6c,EACxB,CAEGg1B,GAAY1uB,GACdA,EAAS,CAAE2O,SAAQtY,SAAUu4B,EAAQv4B,SAAU44B,MAAO,GAE1D,EAuEE5zC,QArEF,SAAiBqyC,EAAQja,GACvB9E,EAASqe,EAAO4C,QAChB,IAAIv5B,EAAWo3B,EAAemB,EAAQv4B,SAAUq3B,EAAIja,GAChDgb,GAAkBA,EAAiBp4B,EAAUq3B,GAEjDplB,EAAQwmB,IACR,IAAIW,EAAenC,EAAgBj3B,EAAUiS,GACzC5O,EAAMk1B,EAAQJ,WAAWn4B,GAC7Bs4B,EAAcU,aAAaI,EAAc,GAAI/1B,GAEzCg1B,GAAY1uB,GACdA,EAAS,CAAE2O,SAAQtY,SAAUu4B,EAAQv4B,SAAU44B,MAAO,GAE1D,EAyDEY,GAAGjvB,GACM+tB,EAAckB,GAAGjvB,IAI5B,OAAOguB,CACT,CC7tBA,IAAYkB,GAAZ,SAAYA,GACVA,EAAA,YACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,aACD,CALD,CAAYA,IAAAA,EAKX,KAyRiC,IAAIz3C,IAAuB,CAC3D,OACA,gBACA,OACA,KACA,QACA,aAoNI,SAAU03C,EAGdC,EACAC,EACAC,GAEA,YAFQ,IAARA,IAAAA,EAAW,KAEJC,EAAgBH,EAAQC,EAAaC,GAAU,EACxD,CAEM,SAAUC,EAGdH,EACAC,EACAC,EACAE,GAEA,IAGIxC,EAAWyC,GAFU,kBAAhBJ,EAA2BnC,EAAUmC,GAAeA,GAEvBrC,UAAY,IAAKsC,GAEvD,GAAgB,MAAZtC,EACF,OAAO,KAGT,IAAI0C,EAAWC,EAAcP,IAmM/B,SAA2BM,GACzBA,EAASE,MAAK,CAAC14C,EAAGC,IAChBD,EAAE24C,QAAU14C,EAAE04C,MACV14C,EAAE04C,MAAQ34C,EAAE24C,MAyCpB,SAAwB34C,EAAaC,GACnC,IAAI24C,EACF54C,EAAEI,SAAWH,EAAEG,QAAUJ,EAAE6C,MAAM,GAAI,GAAGg2C,OAAM,CAAC/vB,EAAGsqB,IAAMtqB,IAAM7oB,EAAEmzC,KAElE,OAAOwF,EAKH54C,EAAEA,EAAEI,OAAS,GAAKH,EAAEA,EAAEG,OAAS,GAG/B,CACN,CArDQ04C,CACE94C,EAAE+4C,WAAW3K,KAAKv/B,GAASA,EAAKmqC,gBAChC/4C,EAAE84C,WAAW3K,KAAKv/B,GAASA,EAAKmqC,kBAG1C,CA3MEC,CAAkBT,GAElB,IAAIU,EAAU,KACd,IAAK,IAAI9F,EAAI,EAAc,MAAX8F,GAAmB9F,EAAIoF,EAASp4C,SAAUgzC,EAAG,CAO3D,IAAI+F,EAAUC,EAAWtD,GACzBoD,EAAUG,EACRb,EAASpF,GACT+F,EACAb,EAEH,CAED,OAAOY,CACT,CAyCA,SAAST,EAGPP,EACAM,EACAc,EACAC,QAF2C,IAA3Cf,IAAAA,EAA2C,SAC3C,IAAAc,IAAAA,EAA4C,SAClC,IAAVC,IAAAA,EAAa,IAEb,IAAIC,EAAeA,CACjBC,EACAjpB,EACAkpB,KAEA,IAAI7qC,EAAmC,CACrC6qC,kBACmB9H,IAAjB8H,EAA6BD,EAAMrD,MAAQ,GAAKsD,EAClDC,eAAuC,IAAxBF,EAAME,cACrBX,cAAexoB,EACfipB,SAGE5qC,EAAK6qC,aAAaE,WAAW,OAC/BxE,EACEvmC,EAAK6qC,aAAaE,WAAWL,GAC7B,wBAAwB1qC,EAAK6qC,aAA7B,wBACMH,EADN,4GAKF1qC,EAAK6qC,aAAe7qC,EAAK6qC,aAAa72C,MAAM02C,EAAWn5C,SAGzD,IAAIg2C,EAAOyD,EAAU,CAACN,EAAY1qC,EAAK6qC,eACnCX,EAAaO,EAAYxxB,OAAOjZ,GAKhC4qC,EAAMnwC,UAAYmwC,EAAMnwC,SAASlJ,OAAS,IAC5Cg1C,GAGkB,IAAhBqE,EAAMjpB,MACN,4FACuC4lB,EAAI,MAE7CqC,EAAcgB,EAAMnwC,SAAUkvC,EAAUO,EAAY3C,KAKpC,MAAdqD,EAAMrD,MAAiBqD,EAAMjpB,QAIjCgoB,EAASroC,KAAK,CACZimC,OACAuC,MAAOmB,EAAa1D,EAAMqD,EAAMjpB,OAChCuoB,cACA,EAaJ,OAXAb,EAAO31C,SAAQ,CAACk3C,EAAOjpB,KAAS,IAAAupB,EAE9B,GAAmB,KAAfN,EAAMrD,MAA0B,OAAX2D,EAACN,EAAMrD,OAAN2D,EAAY/zC,SAAS,KAG7C,IAAK,IAAIg0C,KAAYC,EAAwBR,EAAMrD,MACjDoD,EAAaC,EAAOjpB,EAAOwpB,QAH7BR,EAAaC,EAAOjpB,EAKrB,IAGIgoB,CACT,CAgBA,SAASyB,EAAwB7D,GAC/B,IAAI8D,EAAW9D,EAAK9zC,MAAM,KAC1B,GAAwB,IAApB43C,EAAS95C,OAAc,MAAO,GAElC,IAAK+5C,KAAUC,GAAQF,EAGnBG,EAAaF,EAAMG,SAAS,KAE5BC,EAAWJ,EAAM52C,QAAQ,MAAO,IAEpC,GAAoB,IAAhB62C,EAAKh6C,OAGP,OAAOi6C,EAAa,CAACE,EAAU,IAAM,CAACA,GAGxC,IAAIC,EAAeP,EAAwBG,EAAK/pB,KAAK,MAEjDoqB,EAAmB,GAqBvB,OAZAA,EAAOtqC,QACFqqC,EAAapM,KAAKsM,GACP,KAAZA,EAAiBH,EAAW,CAACA,EAAUG,GAASrqB,KAAK,QAKrDgqB,GACFI,EAAOtqC,QAAQqqC,GAIVC,EAAOrM,KAAK4L,GACjB5D,EAAKwD,WAAW,MAAqB,KAAbI,EAAkB,IAAMA,GAEpD,CAaA,MAAMW,EAAU,YACVC,EAAsB,EACtBC,EAAkB,EAClBC,EAAoB,EACpBC,EAAqB,GACrBC,GAAgB,EAChBC,EAAW5H,GAAoB,MAANA,EAE/B,SAASyG,EAAa1D,EAAc5lB,GAClC,IAAI0pB,EAAW9D,EAAK9zC,MAAM,KACtB44C,EAAehB,EAAS95C,OAS5B,OARI85C,EAASnF,KAAKkG,KAChBC,GAAgBF,GAGdxqB,IACF0qB,GAAgBL,GAGXX,EACJiB,QAAQ9H,IAAO4H,EAAQ5H,KACvBX,QACC,CAACiG,EAAOyC,IACNzC,GACCgC,EAAQz3C,KAAKk4C,GACVR,EACY,KAAZQ,EACAN,EACAC,IACNG,EAEN,CAiBA,SAAS7B,EAIPgC,EACAvF,EACAwC,QAAY,IAAZA,IAAAA,GAAe,GAEf,IAAI,WAAES,GAAesC,EAEjBC,EAAgB,CAAC,EACjBC,EAAkB,IAClBrC,EAA2D,GAC/D,IAAK,IAAI9F,EAAI,EAAGA,EAAI2F,EAAW34C,SAAUgzC,EAAG,CAC1C,IAAIvkC,EAAOkqC,EAAW3F,GAClBxuB,EAAMwuB,IAAM2F,EAAW34C,OAAS,EAChCo7C,EACkB,MAApBD,EACIzF,EACAA,EAASjzC,MAAM04C,EAAgBn7C,SAAW,IAC5CgF,EAAQq2C,EACV,CAAErF,KAAMvnC,EAAK6qC,aAAcC,cAAe9qC,EAAK8qC,cAAe/0B,OAC9D42B,GAGE/B,EAAQ5qC,EAAK4qC,MAkBjB,IAfGr0C,GACDwf,GACA0zB,IACCS,EAAWA,EAAW34C,OAAS,GAAGq5C,MAAMjpB,QAEzCprB,EAAQq2C,EACN,CACErF,KAAMvnC,EAAK6qC,aACXC,cAAe9qC,EAAK8qC,cACpB/0B,KAAK,GAEP42B,KAICp2C,EACH,OAAO,KAGTnE,OAAO8D,OAAOu2C,EAAel2C,EAAMs2C,QAEnCxC,EAAQ/oC,KAAK,CAEXurC,OAAQJ,EACRxF,SAAU+D,EAAU,CAAC0B,EAAiBn2C,EAAM0wC,WAC5C6F,aAAcC,EACZ/B,EAAU,CAAC0B,EAAiBn2C,EAAMu2C,gBAEpClC,UAGyB,MAAvBr0C,EAAMu2C,eACRJ,EAAkB1B,EAAU,CAAC0B,EAAiBn2C,EAAMu2C,eAEvD,CAED,OAAOzC,CACT,CAiHgB,SAAAuC,EAIdI,EACA/F,GAEuB,kBAAZ+F,IACTA,EAAU,CAAEzF,KAAMyF,EAASlC,eAAe,EAAO/0B,KAAK,IAGxD,IAAKk3B,EAASC,GA4ChB,SACE3F,EACAuD,EACA/0B,QADa,IAAb+0B,IAAAA,GAAgB,QACb,IAAH/0B,IAAAA,GAAM,GAENywB,EACW,MAATe,IAAiBA,EAAKkE,SAAS,MAAQlE,EAAKkE,SAAS,MACrD,eAAelE,EAAf,oCACMA,EAAK7yC,QAAQ,MAAO,MAD1B,qIAGsC6yC,EAAK7yC,QAAQ,MAAO,MAAK,MAGjE,IAAIm4C,EAA8B,GAC9BM,EACF,IACA5F,EACG7yC,QAAQ,UAAW,IACnBA,QAAQ,OAAQ,KAChBA,QAAQ,qBAAsB,QAC9BA,QACC,qBACA,CAAC04C,EAAWC,EAAmB7B,KAC7BqB,EAAOvrC,KAAK,CAAE+rC,YAAW7B,WAA0B,MAAdA,IAC9BA,EAAa,eAAiB,gBAIzCjE,EAAKkE,SAAS,MAChBoB,EAAOvrC,KAAK,CAAE+rC,UAAW,MACzBF,GACW,MAAT5F,GAAyB,OAATA,EACZ,QACA,qBACGxxB,EAETo3B,GAAgB,QACE,KAAT5F,GAAwB,MAATA,IAQxB4F,GAAgB,iBAKlB,IAAIF,EAAU,IAAIK,OAAOH,EAAcrC,OAAgB/H,EAAY,KAEnE,MAAO,CAACkK,EAASJ,EACnB,CAjGkCU,CAC9BP,EAAQzF,KACRyF,EAAQlC,cACRkC,EAAQj3B,KAGNxf,EAAQ0wC,EAAS1wC,MAAM02C,GAC3B,IAAK12C,EAAO,OAAO,KAEnB,IAAIm2C,EAAkBn2C,EAAM,GACxBu2C,EAAeJ,EAAgBh4C,QAAQ,UAAW,MAClD84C,EAAgBj3C,EAAMvC,MAAM,GAuBhC,MAAO,CACL64C,OAvBmBK,EAAerJ,QAClC,CAAC9C,EAAIuG,EAA6B3lB,KAAS,IAApC,UAAE0rB,EAAS,WAAE7B,GAAYlE,EAG9B,GAAkB,MAAd+F,EAAmB,CACrB,IAAII,EAAaD,EAAc7rB,IAAU,GACzCmrB,EAAeJ,EACZ14C,MAAM,EAAG04C,EAAgBn7C,OAASk8C,EAAWl8C,QAC7CmD,QAAQ,UAAW,KACvB,CAED,MAAMoE,EAAQ00C,EAAc7rB,GAM5B,OAJEof,EAAKsM,GADH7B,IAAe1yC,OACCiqC,GAECjqC,GAAS,IAAIpE,QAAQ,OAAQ,KAE3CqsC,CAAI,GAEb,CAAC,GAKDkG,SAAUyF,EACVI,eACAE,UAEJ,CA2DM,SAAUzC,EAAWzxC,GACzB,IACE,OAAOA,EACJrF,MAAM,KACN8rC,KAAK7sC,GAAMg7C,mBAAmBh7C,GAAGgC,QAAQ,MAAO,SAChD8sB,KAAK,KACR,MAAOuM,GAQP,OAPAyY,GACE,EACA,iBAAiB1tC,EAAjB,oHAEei1B,EAAK,MAGfj1B,CACR,CACH,CAKgB,SAAA4wC,EACdzC,EACAsC,GAEA,GAAiB,MAAbA,EAAkB,OAAOtC,EAE7B,IAAKA,EAAStzC,cAAco3C,WAAWxB,EAAS51C,eAC9C,OAAO,KAKT,IAAIg6C,EAAapE,EAASkC,SAAS,KAC/BlC,EAASh4C,OAAS,EAClBg4C,EAASh4C,OACTq8C,EAAW3G,EAAS/nC,OAAOyuC,GAC/B,OAAIC,GAAyB,MAAbA,EAEP,KAGF3G,EAASjzC,MAAM25C,IAAe,GACvC,CA2CA,SAASE,EACP3yB,EACA4yB,EACAC,EACAxG,GAEA,MACE,qBAAqBrsB,EAArB,2CACQ4yB,EAAK,YAAavS,KAAKC,UAC7B+L,GAFF,yCAIQwG,EAJR,2HAOJ,CAyBM,SAAUC,EAEd3D,GACA,OAAOA,EAAQiC,QACb,CAAC/1C,EAAOorB,IACI,IAAVA,GAAgBprB,EAAMq0C,MAAMrD,MAAQhxC,EAAMq0C,MAAMrD,KAAKh2C,OAAS,GAEpE,CAIgB,SAAA08C,EAEd5D,EAAc6D,GACd,IAAIC,EAAcH,EAA2B3D,GAK7C,OAAI6D,EACKC,EAAY5O,KAAI,CAAChpC,EAAOswC,IAC7BA,IAAQsH,EAAY58C,OAAS,EAAIgF,EAAM0wC,SAAW1wC,EAAMu2C,eAIrDqB,EAAY5O,KAAKhpC,GAAUA,EAAMu2C,cAC1C,CAKM,SAAUsB,EACdC,EACAC,EACAC,EACAC,GAEA,IAAIzH,OAFU,IAAdyH,IAAAA,GAAiB,GAGI,kBAAVH,EACTtH,EAAKI,EAAUkH,IAEftH,EAAEC,EAAQ,GAAAqH,GAEV9H,GACGQ,EAAGE,WAAaF,EAAGE,SAAS9vC,SAAS,KACtC02C,EAAoB,IAAK,WAAY,SAAU9G,IAEjDR,GACGQ,EAAGE,WAAaF,EAAGE,SAAS9vC,SAAS,KACtC02C,EAAoB,IAAK,WAAY,OAAQ9G,IAE/CR,GACGQ,EAAGp0B,SAAWo0B,EAAGp0B,OAAOxb,SAAS,KAClC02C,EAAoB,IAAK,SAAU,OAAQ9G,KAI/C,IAGI0H,EAHAC,EAAwB,KAAVL,GAAgC,KAAhBtH,EAAGE,SACjC0H,EAAaD,EAAc,IAAM3H,EAAGE,SAaxC,GAAkB,MAAd0H,EACFF,EAAOF,MACF,CACL,IAAIK,EAAqBN,EAAe/8C,OAAS,EAMjD,IAAKi9C,GAAkBG,EAAW5D,WAAW,MAAO,CAClD,IAAI8D,EAAaF,EAAWl7C,MAAM,KAElC,KAAyB,OAAlBo7C,EAAW,IAChBA,EAAWnmC,QACXkmC,GAAsB,EAGxB7H,EAAGE,SAAW4H,EAAWrtB,KAAK,IAC/B,CAEDitB,EAAOG,GAAsB,EAAIN,EAAeM,GAAsB,GACvE,CAED,IAAIrH,WAzKsBR,EAAQ+H,QAAY,IAAZA,IAAAA,EAAe,KACjD,IACE7H,SAAU0H,EAAU,OACpBh8B,EAAS,GAAE,KACXu0B,EAAO,IACS,kBAAPH,EAAkBI,EAAUJ,GAAMA,EAEzCE,EAAW0H,EACXA,EAAW5D,WAAW,KACpB4D,EAWR,SAAyB9D,EAAsBiE,GAC7C,IAAIzD,EAAWyD,EAAap6C,QAAQ,OAAQ,IAAIjB,MAAM,KAYtD,OAXuBo3C,EAAap3C,MAAM,KAEzBC,SAAS64C,IACR,OAAZA,EAEElB,EAAS95C,OAAS,GAAG85C,EAASnK,MACb,MAAZqL,GACTlB,EAAS/pC,KAAKirC,EACf,IAGIlB,EAAS95C,OAAS,EAAI85C,EAAS7pB,KAAK,KAAO,GACpD,CAxBQutB,CAAgBJ,EAAYG,GAC9BA,EAEJ,MAAO,CACL7H,WACAt0B,OAAQq8B,EAAgBr8B,GACxBu0B,KAAM+H,EAAc/H,GAExB,CAuJagI,CAAYnI,EAAI0H,GAGvBU,EACFR,GAA6B,MAAfA,GAAsBA,EAAWlD,SAAS,KAEtD2D,GACDV,GAA8B,MAAfC,IAAuBJ,EAAiB9C,SAAS,KAQnE,OANGlE,EAAKN,SAASwE,SAAS,OACvB0D,IAA4BC,IAE7B7H,EAAKN,UAAY,KAGZM,CACT,OAiBayD,EAAaqE,GACxBA,EAAM7tB,KAAK,KAAK9sB,QAAQ,SAAU,KAKvBq4C,EAAqB9F,GAChCA,EAASvyC,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,KAKlCs6C,EAAmBr8B,GAC7BA,GAAqB,MAAXA,EAEPA,EAAOo4B,WAAW,KAClBp4B,EACA,IAAMA,EAHN,GAQOs8B,EAAiB/H,GAC3BA,GAAiB,MAATA,EAAoBA,EAAK6D,WAAW,KAAO7D,EAAO,IAAMA,EAAzC,GAqDgB9wC,MAqSpC,SAAUk5C,EAAqBvhB,GACnC,OACW,MAATA,GACwB,kBAAjBA,EAAMwhB,QACe,kBAArBxhB,EAAMyhB,YACa,mBAAnBzhB,EAAM0hB,UACb,SAAU1hB,CAEd,CC3/BA,MAAM2hB,EAAgD,CACpD,OACA,MACA,QACA,UAMIC,GAJuB,IAAIj+C,IAC/Bg+C,GAG2C,CAC3C,SACGA,IAEuB,IAAIh+C,IAAgBi+C,GAEpB,IAAIj+C,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MACf,IAAIA,IAAI,CAAC,IAAK,MAwoFlBqD,OAAO,gPC9vGtC,MAAM66C,EACXC,EAAAA,cAAoD,MAK/C,MAAMC,EAAyBD,EAAAA,cAEpC,MA8CK,MAAME,EAAoBF,EAAAA,cAC/B,MAYK,MAAMG,EAAkBH,EAAAA,cAC7B,YAaWI,EAAeJ,EAAAA,cAAwC,CAClEK,OAAQ,KACR7F,QAAS,GACT8F,aAAa,IAOR,MAAMC,EAAoBP,EAAAA,cAAyB,MClFnD,SAASQ,IACd,OAA4C,MAArCR,EAAAA,WAAiBG,EAC1B,CAYO,SAASM,KAQd,OANED,KADFE,GAAU,GAOHV,EAAAA,WAAiBG,GAAiBtgC,QAC3C,CAkDA,SAAS8gC,GACP52C,GAEei2C,EAAAA,WAAiBE,GAAmBU,QAKjDZ,EAAAA,gBAAsBj2C,EAE1B,CAQO,SAAS82C,KACd,IAAI,YAAEP,GAAgBN,EAAAA,WAAiBI,GAGvC,OAAOE,EAq4BT,WACE,IAAI,OAAEQ,GAAWC,GAAqBC,GAAeC,mBACjDvnC,EAAKwnC,GAAkBC,GAAoBF,mBAE3CG,EAAYpB,EAAAA,QAAa,GAsB7B,OArBAW,IAA0B,KACxBS,EAAU3tC,SAAU,CAAI,IAGOusC,EAAAA,aAC/B,SAAC9I,EAAiB5sC,QAAwB,IAAxBA,IAAAA,EAA2B,CAAC,GAKvC82C,EAAU3tC,UAEG,kBAAPyjC,EACT4J,EAAOO,SAASnK,GAEhB4J,EAAOO,SAASnK,EAAEC,EAAA,CAAImK,YAAa5nC,GAAOpP,IAE9C,GACA,CAACw2C,EAAQpnC,GAIb,CAh6BuB6nC,GAGvB,WAEIf,KADFE,GAAU,GAOV,IAAIc,EAAoBxB,EAAAA,WAAiBD,IACrC,SAAErG,EAAQ,OAAE+H,EAAM,UAAE7P,GAAcoO,EAAAA,WAAiBE,IACnD,QAAE1F,GAAYwF,EAAAA,WAAiBI,IAC7BhJ,SAAUsH,GAAqB+B,KAEjCiB,EAAqBhW,KAAKC,UAC5BgW,EAAoBnH,EAASiH,EAAOpD,uBAGlC+C,EAAYpB,EAAAA,QAAa,GAqD7B,OApDAW,IAA0B,KACxBS,EAAU3tC,SAAU,CAAI,IAGOusC,EAAAA,aAC/B,SAAC9I,EAAiB5sC,GAKhB,QALwC,IAAxBA,IAAAA,EAA2B,CAAC,IAKvC82C,EAAU3tC,QAAS,OAExB,GAAkB,kBAAPyjC,EAET,YADAtF,EAAUyH,GAAGnC,GAIf,IAAIQ,EAAO6G,EACTrH,EACAxL,KAAKkW,MAAMF,GACXhD,EACqB,SAArBp0C,EAAQu3C,UASe,MAArBL,GAA0C,MAAb9H,IAC/BhC,EAAKN,SACe,MAAlBM,EAAKN,SACDsC,EACAyB,EAAU,CAACzB,EAAUhC,EAAKN,aAG/B9sC,EAAQzF,QAAU+sC,EAAU/sC,QAAU+sC,EAAUngC,MACjDimC,EACAptC,EAAQ2yB,MACR3yB,EAEJ,GACA,CACEovC,EACA9H,EACA8P,EACAhD,EACA8C,GAKN,CA1E6CM,EAC7C,CA2HO,SAASC,GACd7K,EAAM8K,GAEA,IADN,SAAEH,QAA8C,IAAAG,EAAG,CAAC,EAACA,GAEjD,OAAEP,GAAWzB,EAAAA,WAAiBE,IAC9B,QAAE1F,GAAYwF,EAAAA,WAAiBI,IAC7BhJ,SAAUsH,GAAqB+B,KACjCiB,EAAqBhW,KAAKC,UAC5BgW,EAAoBnH,EAASiH,EAAOpD,uBAGtC,OAAO2B,EAAAA,SACL,IACEzB,EACErH,EACAxL,KAAKkW,MAAMF,GACXhD,EACa,SAAbmD,IAEJ,CAAC3K,EAAIwK,EAAoBhD,EAAkBmD,GAE/C,CAkBO,SAASI,GACdzI,EACAC,EACAyI,EACAT,GAGEjB,KADFE,GAAU,GAOV,IAAI,UAAE9O,GAAcoO,EAAAA,WAAiBE,IAC/B1F,QAAS2H,GAAkBnC,EAAAA,WAAiBI,GAC9CgC,EAAaD,EAAcA,EAAczgD,OAAS,GAClD2gD,EAAeD,EAAaA,EAAWpF,OAAS,CAAC,EAEjDsF,GADiBF,GAAaA,EAAWhL,SACpBgL,EAAaA,EAAWnF,aAAe,KAC9CmF,GAAcA,EAAWrH,MAqC3C,IAEIl7B,EAFA0iC,EAAsB9B,KAG1B,GAAIhH,EAAa,KAAA+I,EACf,IAAIC,EACqB,kBAAhBhJ,EAA2BnC,EAAUmC,GAAeA,EAGpC,MAAvB6I,IAC4B,OADFE,EACxBC,EAAkBrL,eAAQ,EAA1BoL,EAA4BtH,WAAWoH,KAF3C5B,GAAU,GASV7gC,EAAW4iC,CACb,MACE5iC,EAAW0iC,EAGb,IAAInL,EAAWv3B,EAASu3B,UAAY,IAEhC0F,EAAoB1F,EACxB,GAA2B,MAAvBkL,EAA4B,CAe9B,IAAII,EAAiBJ,EAAmBz9C,QAAQ,MAAO,IAAIjB,MAAM,KAEjEk5C,EAAoB,IADL1F,EAASvyC,QAAQ,MAAO,IAAIjB,MAAM,KACdO,MAAMu+C,EAAehhD,QAAQiwB,KAAK,IACvE,CAEA,IAAI6oB,EAAUjB,EAAYC,EAAQ,CAAEpC,SAAU0F,IAmB9C,IAAI6F,EAAkBC,GACpBpI,GACEA,EAAQ9K,KAAKhpC,GACXnE,OAAO8D,OAAO,CAAC,EAAGK,EAAO,CACvBs2C,OAAQz6C,OAAO8D,OAAO,CAAC,EAAGg8C,EAAc37C,EAAMs2C,QAC9C5F,SAAU+D,EAAU,CAClBmH,EAEA1Q,EAAUmH,eACNnH,EAAUmH,eAAeryC,EAAM0wC,UAAUA,SACzC1wC,EAAM0wC,WAEZ6F,aACyB,MAAvBv2C,EAAMu2C,aACFqF,EACAnH,EAAU,CACRmH,EAEA1Q,EAAUmH,eACNnH,EAAUmH,eAAeryC,EAAMu2C,cAAc7F,SAC7C1wC,EAAMu2C,mBAIxBkF,EACAD,EACAT,GAMF,OAAIhI,GAAekJ,EAEf3C,EAAAA,cAACG,EAAgB1P,SAAQ,CACvBxnC,MAAO,CACL4W,SAAQs3B,EAAA,CACNC,SAAU,IACVt0B,OAAQ,GACRu0B,KAAM,GACNpa,MAAO,KACPxd,IAAK,WACFI,GAELgjC,eAAgBrM,EAAe6B,MAGhCsK,GAKAA,CACT,CAEA,SAASG,KACP,IAAI5kB,EA0cC,WAAkC,IAAA6kB,EACvC,IAAI7kB,EAAQ8hB,EAAAA,WAAiBO,GACzBtjB,EAAQ+lB,GAAmB7B,GAAoB8B,eAC/CC,EAAUhC,GAAkBC,GAAoB8B,eAIpD,QAAc/P,IAAVhV,EACF,OAAOA,EAIT,OAAO,OAAP6kB,EAAO9lB,EAAMkmB,aAAN,EAAAJ,EAAeG,EACxB,CAvdcE,GACRvlB,EAAU4hB,EAAqBvhB,GAC5BA,EAAMwhB,OAAU,IAAAxhB,EAAMyhB,WACzBzhB,aAAiB33B,MACjB23B,EAAML,QACN6N,KAAKC,UAAUzN,GACf13B,EAAQ03B,aAAiB33B,MAAQ23B,EAAM13B,MAAQ,KAC/C68C,EAAY,yBACZC,EAAY,CAAEC,QAAS,SAAUC,gBAAiBH,GAsBtD,OACErD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAI,2CACJA,EAAAA,cAAA,MAAI/wC,MAAO,CAAEw0C,UAAW,WAAa5lB,GACpCr3B,EAAQw5C,EAAAA,cAAA,OAAK/wC,MAAOq0C,GAAY98C,GAAe,KAvBtC,KA2BhB,CAEA,MAAMk9C,GAAsB1D,EAAAA,cAAC8C,GAAqB,MAgB3C,MAAMa,WAA4B3D,EAAAA,UAIvCz3C,WAAAA,CAAY0pB,GACV2xB,MAAM3xB,GACN/uB,KAAK+5B,MAAQ,CACXpd,SAAUoS,EAAMpS,SAChBgkC,aAAc5xB,EAAM4xB,aACpB3lB,MAAOjM,EAAMiM,MAEjB,CAEA,+BAAOO,CAAyBP,GAC9B,MAAO,CAAEA,MAAOA,EAClB,CAEA,+BAAOX,CACLtL,EACAgL,GAUA,OACEA,EAAMpd,WAAaoS,EAAMpS,UACD,SAAvBod,EAAM4mB,cAAkD,SAAvB5xB,EAAM4xB,aAEjC,CACL3lB,MAAOjM,EAAMiM,MACbre,SAAUoS,EAAMpS,SAChBgkC,aAAc5xB,EAAM4xB,cAQjB,CACL3lB,WAAuBgV,IAAhBjhB,EAAMiM,MAAsBjM,EAAMiM,MAAQjB,EAAMiB,MACvDre,SAAUod,EAAMpd,SAChBgkC,aAAc5xB,EAAM4xB,cAAgB5mB,EAAM4mB,aAE9C,CAEAnlB,iBAAAA,CAAkBR,EAAY4lB,GAC5B7lB,QAAQC,MACN,wDACAA,EACA4lB,EAEJ,CAEAp8C,MAAAA,GACE,YAA4BwrC,IAArBhwC,KAAK+5B,MAAMiB,MAChB8hB,EAAAA,cAACI,EAAa3P,SAAQ,CAACxnC,MAAO/F,KAAK+uB,MAAM8xB,cACvC/D,EAAAA,cAACO,EAAkB9P,SAAQ,CACzBxnC,MAAO/F,KAAK+5B,MAAMiB,MAClBtzB,SAAU1H,KAAK+uB,MAAM+xB,aAIzB9gD,KAAK+uB,MAAMrnB,QAEf,EASF,SAASq5C,GAAaxM,GAAwD,IAAvD,aAAEsM,EAAY,MAAEr9C,EAAK,SAAEkE,GAA8B6sC,EACtE+J,EAAoBxB,EAAAA,WAAiBD,GAazC,OAREyB,GACAA,EAAkBZ,QAClBY,EAAkB0C,gBACjBx9C,EAAMq0C,MAAMoJ,cAAgBz9C,EAAMq0C,MAAMqJ,iBAEzC5C,EAAkB0C,cAAcG,2BAA6B39C,EAAMq0C,MAAMrhC,IAIzEsmC,EAAAA,cAACI,EAAa3P,SAAQ,CAACxnC,MAAO86C,GAC3Bn5C,EAGP,CAEO,SAASg4C,GACdpI,EACA2H,EACAD,EACAT,GAC2B,IAAA6C,EAC3B,QAJ2B,IAA3BnC,IAAAA,EAA8B,SACc,IAA5CD,IAAAA,EAA+C,WACX,IAApCT,IAAAA,EAAuC,MAExB,MAAXjH,EAAiB,KAAA+J,EACnB,IAAKrC,EACH,OAAO,KAGT,GAAIA,EAAgBiB,OAGlB3I,EAAU0H,EAAgB1H,YACrB,MACL,OAAA+J,EAAA9C,IAAA8C,EAAQC,qBACiB,IAAzBrC,EAAczgD,SACbwgD,EAAgBuC,aACjBvC,EAAgB1H,QAAQ94C,OAAS,GAUjC,OAAO,KAFP84C,EAAU0H,EAAgB1H,OAG5B,CACF,CAEA,IAAImI,EAAkBnI,EAGlB2I,EAAS,OAAHmB,EAAGpC,QAAA,EAAAoC,EAAiBnB,OAC9B,GAAc,MAAVA,EAAgB,CAClB,IAAIuB,EAAa/B,EAAgBgC,WAC9BryC,GAAMA,EAAEyoC,MAAMrhC,SAA+Bw5B,KAAnB,MAANiQ,OAAM,EAANA,EAAS7wC,EAAEyoC,MAAMrhC,OAGtCgrC,GAAc,GADhBhE,GAAU,GAMViC,EAAkBA,EAAgBx+C,MAChC,EACAkR,KAAKgR,IAAIs8B,EAAgBjhD,OAAQgjD,EAAa,GAElD,CAIA,IAAIE,GAAiB,EACjBC,GAAiB,EACrB,GAAI3C,GAAmBT,GAAUA,EAAO+C,oBACtC,IAAK,IAAI9P,EAAI,EAAGA,EAAIiO,EAAgBjhD,OAAQgzC,IAAK,CAC/C,IAAIhuC,EAAQi8C,EAAgBjO,GAM5B,IAJIhuC,EAAMq0C,MAAM+J,iBAAmBp+C,EAAMq0C,MAAMgK,0BAC7CF,EAAgBnQ,GAGdhuC,EAAMq0C,MAAMrhC,GAAI,CAClB,IAAI,WAAEsrC,EAAU,OAAE7B,GAAWjB,EACzB+C,EACFv+C,EAAMq0C,MAAMmK,aACmBhS,IAA/B8R,EAAWt+C,EAAMq0C,MAAMrhC,OACrBypC,QAAqCjQ,IAA3BiQ,EAAOz8C,EAAMq0C,MAAMrhC,KACjC,GAAIhT,EAAMq0C,MAAM9J,MAAQgU,EAAkB,CAIxCL,GAAiB,EAEfjC,EADEkC,GAAiB,EACDlC,EAAgBx+C,MAAM,EAAG0gD,EAAgB,GAEzC,CAAClC,EAAgB,IAErC,KACF,CACF,CACF,CAGF,OAAOA,EAAgBwC,aAAY,CAAC9E,EAAQ35C,EAAOorB,KAEjD,IAAIoM,EACAknB,GAA8B,EAC9BjB,EAAuC,KACvCY,EAAiD,KA0VzD,IAAqBtlC,EAzVbyiC,IACFhkB,EAAQilB,GAAUz8C,EAAMq0C,MAAMrhC,GAAKypC,EAAOz8C,EAAMq0C,MAAMrhC,SAAMw5B,EAC5DiR,EAAez9C,EAAMq0C,MAAMoJ,cAAgBT,GAEvCkB,IACEC,EAAgB,GAAe,IAAV/yB,GAoVZrS,EAlVT,kBACA,GAkVI4lC,GAAc5lC,KAC1B4lC,GAAc5lC,IAAO,GAhVf2lC,GAA8B,EAC9BL,EAAyB,MAChBF,IAAkB/yB,IAC3BszB,GAA8B,EAC9BL,EAAyBr+C,EAAMq0C,MAAMgK,wBAA0B,QAKrE,IAAIvK,EAAU2H,EAAc/4B,OAAOu5B,EAAgBx+C,MAAM,EAAG2tB,EAAQ,IAChEwzB,EAAcA,KAChB,IAAI16C,EAkBJ,OAhBEA,EADEszB,EACSimB,EACFiB,EACEL,EACFr+C,EAAMq0C,MAAMjL,UAOVkQ,EAAAA,cAACt5C,EAAMq0C,MAAMjL,UAAS,MACxBppC,EAAMq0C,MAAM5zB,QACVzgB,EAAMq0C,MAAM5zB,QAEZk5B,EAGXL,EAAAA,cAACiE,GAAa,CACZv9C,MAAOA,EACPq9C,aAAc,CACZ1D,SACA7F,UACA8F,YAAgC,MAAnB4B,GAEft3C,SAAUA,GACV,EAMN,OAAOs3C,IACJx7C,EAAMq0C,MAAMqJ,eAAiB19C,EAAMq0C,MAAMoJ,cAA0B,IAAVryB,GAC1DkuB,EAAAA,cAAC2D,GAAmB,CAClB9jC,SAAUqiC,EAAgBriC,SAC1BgkC,aAAc3B,EAAgB2B,aAC9BG,UAAWG,EACXjmB,MAAOA,EACPtzB,SAAU06C,IACVvB,aAAc,CAAE1D,OAAQ,KAAM7F,UAAS8F,aAAa,KAGtDgF,GACD,GACA,KACL,CAAC,IAEItE,GAAc,SAAdA,GAAc,OAAdA,EAAc,wBAAdA,EAAc,gCAAdA,EAAc,gCAAdA,CAAc,EAAdA,IAAc,IAMdG,GAAmB,SAAnBA,GAAmB,OAAnBA,EAAmB,wBAAnBA,EAAmB,8BAAnBA,EAAmB,8BAAnBA,EAAmB,8BAAnBA,EAAmB,8BAAnBA,EAAmB,wCAAnBA,EAAmB,wBAAnBA,EAAmB,gCAAnBA,EAAmB,gCAAnBA,EAAmB,wBAAnBA,CAAmB,EAAnBA,IAAmB,IAmBxB,SAASJ,GAAqBwE,GAC5B,IAAIC,EAAMxF,EAAAA,WAAiBD,GAE3B,OADUyF,GAAV9E,GAAU,GACH8E,CACT,CAEA,SAASxC,GAAmBuC,GAC1B,IAAItoB,EAAQ+iB,EAAAA,WAAiBC,GAE7B,OADUhjB,GAAVyjB,GAAU,GACHzjB,CACT,CASA,SAASikB,GAAkBqE,GACzB,IAAIxK,EARN,WACE,IAAIA,EAAQiF,EAAAA,WAAiBI,GAE7B,OADUrF,GAAV2F,GAAU,GACH3F,CACT,CAIc0K,GACRC,EAAY3K,EAAMP,QAAQO,EAAMP,QAAQ94C,OAAS,GAKrD,OAHEgkD,EAAU3K,MAAMrhC,IADlBgnC,GAAU,GAIHgF,EAAU3K,MAAMrhC,EACzB,CA4NA,MAAM2rC,GAAyC,CAAC,ECngCpBrF,EAAsB,gBAyS3C,SAAS2F,GAAMC,GACpBlF,GAAU,EAKZ,CAqBO,SAASmF,GAAMC,GAQqB,IAPzCpM,SAAUqM,EAAe,IAAG,SAC5Bn7C,EAAW,KACXiV,SAAUmmC,EAAY,eACtBnD,EAAiBrM,EAAe6B,IAAG,UACnCzG,EACAgP,OAAQqF,GAAa,EAAK,OAC1BxE,GACYqE,EAETtF,KADHE,GAAU,GAQV,IAAIhH,EAAWqM,EAAalhD,QAAQ,OAAQ,KACxCqhD,EAAoBlG,EAAAA,SACtB,KAAM,CACJtG,WACA9H,YACAgP,OAAQqF,EACRxE,OAAMtK,EAAA,CACJkH,sBAAsB,GACnBoD,MAGP,CAAC/H,EAAU+H,EAAQ7P,EAAWqU,IAGJ,kBAAjBD,IACTA,EAAe1O,EAAU0O,IAG3B,IAAI,SACF5O,EAAW,IAAG,OACdt0B,EAAS,GAAE,KACXu0B,EAAO,GAAE,MACTpa,EAAQ,KAAI,IACZxd,EAAM,WACJumC,EAEAG,EAAkBnG,EAAAA,SAAc,KAClC,IAAIoG,EAAmBvM,EAAczC,EAAUsC,GAE/C,OAAwB,MAApB0M,EACK,KAGF,CACLvmC,SAAU,CACRu3B,SAAUgP,EACVtjC,SACAu0B,OACApa,QACAxd,OAEFojC,iBACD,GACA,CAACnJ,EAAUtC,EAAUt0B,EAAQu0B,EAAMpa,EAAOxd,EAAKojC,IASlD,OAAuB,MAAnBsD,EACK,KAIPnG,EAAAA,cAACE,EAAkBzP,SAAQ,CAACxnC,MAAOi9C,GACjClG,EAAAA,cAACG,EAAgB1P,SAAQ,CAAC7lC,SAAUA,EAAU3B,MAAOk9C,IAG3D,CAaO,SAASE,GAAMC,GAGqB,IAHpB,SACrB17C,EAAQ,SACRiV,GACYymC,EACZ,ODnKOrE,GCmKUsE,GAAyB37C,GAAWiV,EACvD,CAuC4B,IAAIyM,SAAQ,SAEP0zB,EAAAA,UAkH1B,SAASuG,GACd37C,EACAiwC,QAAoB,IAApBA,IAAAA,EAAuB,IAEvB,IAAIrB,EAAwB,GA6D5B,OA3DAwG,EAAAA,SAAen8C,QAAQ+G,GAAU,CAACuc,EAAS2K,KACzC,IAAKkuB,EAAAA,eAAqB74B,GAGxB,OAGF,IAAIq/B,EAAW,IAAI3L,EAAY/oB,GAE/B,GAAI3K,EAAQ3jB,OAASw8C,EAAAA,SAMnB,YAJAxG,EAAO/nC,KAAKY,MACVmnC,EACA+M,GAAyBp/B,EAAQ8K,MAAMrnB,SAAU47C,IAMnDr/B,EAAQ3jB,OAASmiD,IADnBjF,GAAU,GAQPv5B,EAAQ8K,MAAMH,OAAU3K,EAAQ8K,MAAMrnB,UADzC81C,GAAU,GAKV,IAAI3F,EAAqB,CACvBrhC,GAAIyN,EAAQ8K,MAAMvY,IAAM8sC,EAAS70B,KAAK,KACtCspB,cAAe9zB,EAAQ8K,MAAMgpB,cAC7B9zB,QAASA,EAAQ8K,MAAM9K,QACvB2oB,UAAW3oB,EAAQ8K,MAAM6d,UACzBhe,MAAO3K,EAAQ8K,MAAMH,MACrB4lB,KAAMvwB,EAAQ8K,MAAMylB,KACpBwN,OAAQ/9B,EAAQ8K,MAAMizB,OACtB/sB,OAAQhR,EAAQ8K,MAAMkG,OACtBgsB,aAAch9B,EAAQ8K,MAAMkyB,aAC5BC,cAAej9B,EAAQ8K,MAAMmyB,cAC7BqC,iBACiC,MAA/Bt/B,EAAQ8K,MAAMmyB,eACgB,MAA9Bj9B,EAAQ8K,MAAMkyB,aAChBuC,iBAAkBv/B,EAAQ8K,MAAMy0B,iBAChCC,OAAQx/B,EAAQ8K,MAAM00B,OACtB1V,KAAM9pB,EAAQ8K,MAAMgf,MAGlB9pB,EAAQ8K,MAAMrnB,WAChBmwC,EAAMnwC,SAAW27C,GACfp/B,EAAQ8K,MAAMrnB,SACd47C,IAIJhN,EAAO/nC,KAAKspC,EAAM,IAGbvB,CACT,+WClfgD,IAAI33C,IAAI,CACtD,oCACA,sBACA,sICcF,IACEM,OAAOykD,qBAHT,GAIC,CAAC,MAAO7jD,IACP,CAgJiE,IAAIyU,IAkCvE,MACMqvC,GAAsB7G,EAAsB,gBAE5B8G,EAAmB,UAEvB9G,EAAY,MA+YxB,SAAU+G,GAAUjB,GAKR,IALS,SACzBpM,EAAQ,SACR9uC,EAAQ,OACR62C,EAAM,OACNt/C,GACgB2jD,EACZkB,EAAahH,EAAAA,SPtaH,IACd11C,EOsa0B,MAAtB08C,EAAWvzC,UACbuzC,EAAWvzC,cPvab,KAAAnJ,EOuayC,CAAEnI,SAAQ+1C,UAAU,MPva7D5tC,EAA8B,CAAC,GAqDxBwtC,GAnDP,SACE31C,EACAg2C,GAEA,IAAI,SACFf,EAAW,IAAG,OACdt0B,EAAS,GAAE,KACXu0B,EAAO,IACLC,EAAUn1C,EAAO0d,SAASw3B,KAAKE,OAAO,IAY1C,OAJKH,EAAS8D,WAAW,MAAS9D,EAAS8D,WAAW,OACpD9D,EAAW,IAAMA,GAGZH,EACL,GACA,CAAEG,WAAUt0B,SAAQu0B,QAEnBc,EAAclb,OAASkb,EAAclb,MAAM8Z,KAAQ,KACnDoB,EAAclb,OAASkb,EAAclb,MAAMxd,KAAQ,UAExD,IAEA,SAAwBtd,EAAgB+0C,GACtC,IAAIxnC,EAAOvN,EAAOC,SAAS6kD,cAAc,QACrCvhC,EAAO,GAEX,GAAIhW,GAAQA,EAAKklC,aAAa,QAAS,CACrC,IAAI1xB,EAAM/gB,EAAO0d,SAAS6F,KACtBkyB,EAAY10B,EAAIhU,QAAQ,KAC5BwW,GAAsB,IAAfkyB,EAAmB10B,EAAMA,EAAI/e,MAAM,EAAGyzC,EAC9C,CAED,OAAOlyB,EAAO,KAAqB,kBAAPwxB,EAAkBA,EAAKM,EAAWN,GAChE,IAEA,SAA8Br3B,EAAoBq3B,GAChDP,EACkC,MAAhC92B,EAASu3B,SAAS/nC,OAAO,GAAU,6DAC0Bq8B,KAAKC,UAChEuL,GACD,IAEL,GAME5sC,KOiXF,IAAI8tC,EAAU4O,EAAWvzC,SACpBwpB,EAAOiqB,GAAgBlH,EAAAA,SAAe,CACzC7nB,OAAQigB,EAAQjgB,OAChBtY,SAAUu4B,EAAQv4B,YAEhB,mBAAEsnC,GAAuB1F,GAAU,CAAC,EACpCtS,EAAW6Q,EAAAA,aACZoH,IACCD,GAAsBN,GAClBA,IAAoB,IAAMK,EAAaE,KACvCF,EAAaE,EAAS,GAE5B,CAACF,EAAcC,IAKjB,OAFAnH,EAAAA,iBAAsB,IAAM5H,EAAQU,OAAO3J,IAAW,CAACiJ,EAASjJ,IAG9D6Q,EAAAA,cAAC6F,GAAM,CACLnM,SAAUA,EACV9uC,SAAUA,EACViV,SAAUod,EAAMpd,SAChBgjC,eAAgB5lB,EAAM9E,OACtByZ,UAAWwG,EACXqJ,OAAQA,GAGd,CAkEA,MAAM4F,GACc,qBAAXllD,QACoB,qBAApBA,OAAOC,UAC2B,qBAAlCD,OAAOC,SAASC,cAEnBilD,GAAqB,gCAKdC,GAAOvH,EAAAA,YAClB,SAAoBwH,EAalBl2B,GAAG,IAKCm2B,GAjBJ,QACE3kB,EAAO,SACP+e,EAAQ,eACR6F,EAAc,QACd7iD,EAAO,MACPo4B,EAAK,OACLpsB,EAAM,GACNqmC,EAAE,mBACFyQ,EAAkB,eAClBC,GAEDJ,EADI9L,EAAImM,GAAAL,EAAAM,KAIL,SAAEpO,GAAasG,EAAAA,WAAiB+H,GAIhCC,GAAa,EAEjB,GAAkB,kBAAP9Q,GAAmBoQ,GAAmB9iD,KAAK0yC,KAEpDuQ,EAAevQ,EAGXmQ,IACF,IACE,IAAIY,EAAa,IAAIrP,IAAIz2C,OAAO0d,SAAS6F,MACrCwiC,EAAYhR,EAAGgE,WAAW,MAC1B,IAAItC,IAAIqP,EAAWE,SAAWjR,GAC9B,IAAI0B,IAAI1B,GACRQ,EAAOmC,EAAcqO,EAAU9Q,SAAUsC,GAEzCwO,EAAUvP,SAAWsP,EAAWtP,QAAkB,MAARjB,EAE5CR,EAAKQ,EAAOwQ,EAAUplC,OAASolC,EAAU7Q,KAEzC2Q,GAAa,EAEf,MAAOjlD,IAOR,CAKL,IAAI2iB,EH/6BD,SACLwxB,EAAMkR,GAEE,IADR,SAAEvG,QAA8C,IAAAuG,EAAG,CAAC,EAACA,EAGnD5H,KADFE,GAAU,GAOV,IAAI,SAAEhH,EAAQ,UAAE9H,GAAcoO,EAAAA,WAAiBE,IAC3C,KAAE7I,EAAI,SAAED,EAAQ,OAAEt0B,GAAWi/B,GAAgB7K,EAAI,CAAE2K,aAEnDwG,EAAiBjR,EAWrB,MALiB,MAAbsC,IACF2O,EACe,MAAbjR,EAAmBsC,EAAWyB,EAAU,CAACzB,EAAUtC,KAGhDxF,EAAUoG,WAAW,CAAEZ,SAAUiR,EAAgBvlC,SAAQu0B,QAClE,CGq5BeiR,CAAQpR,EAAI,CAAE2K,aAErB0G,EAoZF,SACJrR,EAAMkR,GAeA,IAdN,OACEv3C,EACAhM,QAAS2jD,EAAW,MACpBvrB,EAAK,mBACL0qB,EAAkB,SAClB9F,EAAQ,eACR+F,cAQE,CAAC,EAACQ,EAEF/G,EAAWR,KACXhhC,EAAW4gC,KACX/I,EAAOqK,GAAgB7K,EAAI,CAAE2K,aAEjC,OAAO7B,EAAAA,aACJz8B,IACC,GDl3CU,SACdA,EACA1S,GAEA,OACmB,IAAjB0S,EAAMvG,UACJnM,GAAqB,UAAXA,KAVhB,SAAyB0S,GACvB,SAAUA,EAAM1G,SAAW0G,EAAM3G,QAAU2G,EAAM7G,SAAW6G,EAAM5G,SACpE,CASK8rC,CAAgBllC,EAErB,CCy2CUmlC,CAAuBnlC,EAAO1S,GAAS,CACzC0S,EAAMxI,iBAIN,IAAIlW,OACcquC,IAAhBsV,EACIA,EACAhR,EAAW33B,KAAc23B,EAAWE,GAE1C2J,EAASnK,EAAI,CACXryC,UACAo4B,QACA0qB,qBACA9F,WACA+F,kBAEH,IAEH,CACE/nC,EACAwhC,EACA3J,EACA8Q,EACAvrB,EACApsB,EACAqmC,EACAyQ,EACA9F,EACA+F,GAGN,CA5c0Be,CAAoBzR,EAAI,CAC5CryC,UACAo4B,QACApsB,SACA82C,qBACA9F,WACA+F,mBAWF,OAEE5H,EAAAA,cAAA,IAAA7I,GAAA,GACMuE,EAAI,CACRh2B,KAAM+hC,GAAgB/hC,EACtBod,QAASklB,GAAcN,EAAiB5kB,EAd5C,SACEvf,GAEIuf,GAASA,EAAQvf,GAChBA,EAAM3I,kBACT2tC,EAAgBhlC,EAEpB,EAQI+N,IAAKA,EACLzgB,OAAQA,IAGd,IAgVF,IAAKmwC,GAQAG,IARL,SAAKH,GACHA,EAAA,4CACAA,EAAA,sBACAA,EAAA,oCACAA,EAAA,wBACAA,EAAA,+CACD,EAND,CAAKA,KAAAA,GAMJ,KAED,SAAKG,GACHA,EAAA,wBACAA,EAAA,0BACAA,EAAA,2CACD,CAJD,CAAKA,KAAAA,GAIJ,mBC51CD,MAYA,GAZeyH,KAEXC,EAAAA,GAAAA,KAAA,OAAKC,UAAU,SAAQl+C,UACrBm+C,EAAAA,GAAAA,MAAA,MAAAn+C,SAAA,EACEi+C,EAAAA,GAAAA,KAAA,MAAAj+C,UAAIi+C,EAAAA,GAAAA,KAACtB,GAAI,CAACrQ,GAAG,IAAGtsC,SAAC,aACjBi+C,EAAAA,GAAAA,KAAA,MAAAj+C,UAAIi+C,EAAAA,GAAAA,KAACtB,GAAI,CAACrQ,GAAG,UAAStsC,SAAC,cACvBi+C,EAAAA,GAAAA,KAAA,MAAAj+C,UAAIi+C,EAAAA,GAAAA,KAACtB,GAAI,CAACrQ,GAAG,SAAQtsC,SAAC,iBCm6H9B,GA56HiBqnB,IACb82B,EAAAA,GAAAA,MAAA,OACIC,MAAM,6BACNC,SAAS,WACTC,QAAQ,mBACJj3B,EAAKrnB,SAAA,EAETi+C,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,s9tCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mYAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2rvCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8xKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,k8QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+2EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,s8FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,k2CAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,upFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8iIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,q8BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uzBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gwBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qoCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,u/BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ooCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mnBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yuBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,orBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2zEAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,y7DAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,imFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0cAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ssDAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ijBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kuBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,muBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,k/BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mfAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,08BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,o8CAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yrCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,miCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,y8BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mWAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,szBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sWAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,86DAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uhBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0vBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,inBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0uBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gaAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6mBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8mBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iaAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ipBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,igBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0YAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uWAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,obAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+qBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ocAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ycAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iXAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uXAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mYAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0kBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0MAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qkBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8XAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mYAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yeAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8dAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4dAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sOAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iZAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8XAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8MAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,q0CAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wZAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kYAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+hBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4hBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yjBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2TAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qQAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+MAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wOAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ubAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4UAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2TAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2YAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gcAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8MAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4SAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6dAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4OAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8SAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0OAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4RAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4SAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8PAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qVAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8OAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ueAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+ZAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8SAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8EAEN+lD,EAAAA,GAAAA,KAAA,QAAMM,KAAK,UAAUrmD,EAAE,+CACvB+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,OACLrmD,EAAE,m2cAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qzNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0pGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,42BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,47BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,m1DAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,g7FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6uGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,o9HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2wCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,q/BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yhCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,knCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,inCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0iCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8uBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mzBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+mBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gxBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mxCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wlBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uuBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qkEAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2kBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2iBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,88BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,waAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wfAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wwBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2lBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0xBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yaAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gXAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,60BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oqBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2mBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8VAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gZAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kmDAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,o/BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8nBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8gBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0VAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4nBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sdAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wqBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oiBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4SAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6dAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oVAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2UAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kcAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0RAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oaAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+bAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kVAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+MAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,omBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+hBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yhBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wcAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kdAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6bAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+OAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sZAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+OAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sYAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kVAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gQAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2RAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6aAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6XAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iWAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qaAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yOAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wYAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kYAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0PAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+VAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qcAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uXAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kWAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4VAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8TAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6OAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2WAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6XAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gQAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4uBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+bAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4TAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ymBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gaAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8RAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8XAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uQAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6bAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mrCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2UAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qVAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wkBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wwBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,w2GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gXAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8VAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+UAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gOAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+MAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,m8BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ibAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8cAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4lBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0LAEN+lD,EAAAA,GAAAA,KAAA,QAAMM,KAAK,UAAUrmD,EAAE,6CACvB+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gdAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+PAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uYAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,i1NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ihEAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8qBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wmCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0bAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uZAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wOAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2aAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,28BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4PAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sZAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6SAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,spBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+PAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,k5BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,04CAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,q+BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+OAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,89BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kpHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mtFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,szCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qXAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8WAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kqBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,okBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0XAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+EAEN+lD,EAAAA,GAAAA,KAAA,QAAMM,KAAK,UAAUrmD,EAAE,+CACvB+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kTAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+7CAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4gCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6mBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0YAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8jBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+uBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2WAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4TAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ijBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4PAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+rBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ghBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mfAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6wBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oYAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8MAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uQAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+UAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ocAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+MAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2NAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8dAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,y7DAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qhCAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,whBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,s8DAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+VAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8cAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ymBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2MAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6LAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yiBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sHAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oQAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mUAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,ujBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mMAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4mBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mrBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4QAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iuDAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+dAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,o5EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gSAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0jBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4tBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4GAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uGAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+IAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iJAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,oFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,0JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,umBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,gPAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,kFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qVAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2SAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6sBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yOAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sNAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8EAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,swBAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4ZAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uQAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,8JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2JAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qbAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yfAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2WAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wXAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yKAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,+KAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sIAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2FAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,6UAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,mFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,iLAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,yRAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,qMC32Hd,GA7DiBmvB,IACb82B,EAAAA,GAAAA,MAAA,OACIC,MAAM,6BACNC,SAAS,WACTvvC,GAAG,UACHyG,MAAO,IACPC,OAAQ,IACR8oC,QAAQ,iBACJj3B,EAAKrnB,SAAA,EAETi+C,EAAAA,GAAAA,KAAA,SAAAj+C,SAEQ,iFAGRi+C,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,+JACFgmD,UAAU,SAEdD,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,wDACFgmD,UAAU,SAEdD,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,iLACFgmD,UAAU,SAEdD,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,2JACFgmD,UAAU,SAEdD,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,gKACFgmD,UAAU,SAEdD,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,4HACFmM,MAAO,CACHk6C,KAAM,WAGdN,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,4HACFgmD,UAAU,SAEdD,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,6GACFmM,MAAO,CACHk6C,KAAM,cAGdN,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,sJACFgmD,UAAU,SAEdD,EAAAA,GAAAA,KAAA,QACI/lD,EAAE,uLACFgmD,UAAU,WChBtB,GAzCkB72B,IACd82B,EAAAA,GAAAA,MAAA,OACIC,MAAM,6BACNC,SAAS,WACTC,QAAQ,iBACJj3B,EAAKrnB,SAAA,EAETi+C,EAAAA,GAAAA,KAAA,QACIM,KAAK,OACLrmD,EAAE,2HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,w8BAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sFAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,uEAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,2HAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,wEAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,sEAEN+lD,EAAAA,GAAAA,KAAA,QACIM,KAAK,UACLrmD,EAAE,4ECXd,GAtBcsmD,KACZ,MAAMC,EAAW,QACjB,OACEN,EAAAA,GAAAA,MAAA,OAAKD,UAAU,cAAal+C,SAAA,EAC1Bi+C,EAAAA,GAAAA,KAAA,MAAAj+C,SAAI,eACJi+C,EAAAA,GAAAA,KAAA,KAAAj+C,SAAG,sNACHi+C,EAAAA,GAAAA,KAAA,KAAAj+C,SAAG,mGAEHi+C,EAAAA,GAAAA,KAAA,KAAAj+C,SAAG,iCACHm+C,EAAAA,GAAAA,MAAA,MAAAn+C,SAAA,EACEm+C,EAAAA,GAAAA,MAAA,MAAAn+C,SAAA,EAAIi+C,EAAAA,GAAAA,KAACS,GAAO,CAACnpC,MAAOkpC,EAAUjpC,OAAQipC,KAAYR,EAAAA,GAAAA,KAAA,KAAGnjC,KAAK,6FAA6F7U,OAAO,SAAS04C,IAAI,sBAAqB3+C,SAAC,iBACjMm+C,EAAAA,GAAAA,MAAA,MAAAn+C,SAAA,EAAIi+C,EAAAA,GAAAA,KAACW,GAAQ,CAACrpC,MAAOkpC,EAAUjpC,OAAQipC,KAAYR,EAAAA,GAAAA,KAAA,KAAGnjC,KAAK,2KAA2K7U,OAAO,SAAS04C,IAAI,sBAAqB3+C,SAAC,uBAChRm+C,EAAAA,GAAAA,MAAA,MAAAn+C,SAAA,EAAIi+C,EAAAA,GAAAA,KAAA,OAAK9iB,IAAI,aAAa0jB,IAAI,GAAGtpC,MAAOkpC,EAAUjpC,OAAQipC,KAAYR,EAAAA,GAAAA,KAAA,KAAGnjC,KAAK,oDAAoD7U,OAAO,SAAS04C,IAAI,sBAAqB3+C,SAAC,gBAC5Km+C,EAAAA,GAAAA,MAAA,MAAAn+C,SAAA,EAAIi+C,EAAAA,GAAAA,KAACa,GAAO,CAACvpC,MAAOkpC,EAAUjpC,OAAQipC,KAAYR,EAAAA,GAAAA,KAAA,KAAGnjC,KAAK,2BAA2B7U,OAAO,SAAS04C,IAAI,sBAAqB3+C,SAAC,0BAEjIi+C,EAAAA,GAAAA,KAAA,KAAAj+C,SAAG,6CAGC,ECAV,GArBemhC,KAEXgd,EAAAA,GAAAA,MAAA,OAAKD,UAAU,cAAal+C,SAAA,EACxBi+C,EAAAA,GAAAA,KAAA,MAAAj+C,SAAI,wBAGJi+C,EAAAA,GAAAA,KAAA,OAAKC,UAAU,qBAAoBl+C,UAEnCi+C,EAAAA,GAAAA,KAAA,UAAQ9iB,IAAI,qKACZ92B,MAAO,CAAE06C,OAAQ,IAAKn5B,SAAU,QAEhCo5B,MAAM,yBCDd,GAVcC,KAEVd,EAAAA,GAAAA,MAAA,OAAAn+C,SAAA,EACFi+C,EAAAA,GAAAA,KAAA,MAAAj+C,SAAI,iBACJi+C,EAAAA,GAAAA,KAAA,OAAK9iB,IAAI,WAAW0jB,IAAI,aAAatpC,MAAM,MAAMC,OAAO,WCiB1D,GAhBY0pC,KAERjB,EAAAA,GAAAA,KAAChD,GAAM,CAAAj7C,UACLm+C,EAAAA,GAAAA,MAAA,OAAAn+C,SAAA,EACEi+C,EAAAA,GAAAA,KAACD,GAAM,KACPG,EAAAA,GAAAA,MAAC1C,GAAM,CAAAz7C,SAAA,EACLi+C,EAAAA,GAAAA,KAAClD,GAAK,CAACjO,KAAK,SAASvwB,SAAS0hC,EAAAA,GAAAA,KAACO,GAAK,OACpCP,EAAAA,GAAAA,KAAClD,GAAK,CAACjO,KAAK,UAAUvwB,SAAS0hC,EAAAA,GAAAA,KAAC9c,GAAM,OACtC8c,EAAAA,GAAAA,KAAClD,GAAK,CAACjO,KAAK,SAASvwB,SAAS0hC,EAAAA,GAAAA,KAACgB,GAAK,OACpChB,EAAAA,GAAAA,KAAClD,GAAK,CAACjO,KAAK,IAAIvwB,SAAS0hC,EAAAA,GAAAA,KAACO,GAAK,cCJzC,GAZwBW,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBt9B,MAAK+qB,IAAkD,IAAjD,OAAEwS,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS5S,EACpEwS,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,ECHWjD,EAAAA,WAAoB1kD,SAASkoD,eAAe,SACpD5iD,QACHmhD,EAAAA,GAAAA,KAAC7I,EAAAA,WAAgB,CAAAp1C,UACfi+C,EAAAA,GAAAA,KAACiB,GAAG,OAORS","sources":["../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","Navbar.js","svg-logos/CCSLogo.js","svg-logos/Payment.js","svg-logos/Calendar.js","Links.js","Events.js","Admin.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"ed3810f9\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"my-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_app\"] = self[\"webpackChunkmy_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => DataFunctionReturnValue\n  ) => Promise<DataStrategyResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n  fetcherKey: string | null;\n}\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface DataStrategyResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<Record<string, DataStrategyResult>>;\n}\n\nexport type AgnosticPatchRoutesOnNavigationFunctionArgs<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = {\n  path: string;\n  matches: M[];\n  patch: (routeId: string | null, children: O[]) => void;\n};\n\nexport type AgnosticPatchRoutesOnNavigationFunction<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = (\n  opts: AgnosticPatchRoutesOnNavigationFunctionArgs<O, M>\n) => void | Promise<void>;\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  DataStrategyResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      viewTransitionOpts?: ViewTransitionOpts;\n      flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches\n        .slice(0, idx + 1)\n        .every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate: (() => void) | undefined = undefined;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = undefined;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          let nextHistoryUpdatePromise = new Promise<void>((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked, after the url\n              // restoration is also complete.  See:\n              // https://github.com/remix-run/react-router/issues/11613\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true,\n      }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error: discoverResult.error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    abortFetcher(key);\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        abortFetcher(staleKey);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset,\n        });\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    isNavigation: boolean,\n    {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    state: RouterState,\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    fetcherKey: string | null\n  ): Promise<Record<string, DataResult>> {\n    let results: Record<string, DataStrategyResult>;\n    let dataResults: Record<string, DataResult> = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e,\n        };\n      });\n      return dataResults;\n    }\n\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result as Response;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          ),\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n\n    return dataResults;\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    state: RouterState,\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let currentMatches = state.matches;\n\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          // Fetcher results are keyed by fetcher key from here on out, not routeId\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: ResultType.error,\n              error: getInternalRouterError(404, {\n                pathname: f.path,\n              }),\n            } as ErrorResult,\n          });\n        }\n      })\n    );\n\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n\n    await Promise.all([\n      resolveNavigationDeferredResults(\n        matches,\n        loaderResults,\n        request.signal,\n        currentMatches,\n        state.loaderData\n      ),\n      resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    if (!patchRoutesOnNavigationImpl) {\n      return { type: \"success\", matches };\n    }\n\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties\n            );\n          },\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null\n  ): Promise<Record<string, DataResult>> {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      type,\n      null,\n      request,\n      matchesToLoad,\n      matches,\n      null,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    let dataResults: Record<string, DataResult> = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResultResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        dataResults[match.route.id] =\n          await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search\n        ? path.search.replace(/^\\?/, \"?index&\")\n        : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string,\n  includeBoundary = false\n) {\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  initialHydration: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      Object.keys(state.errors)[0],\n      true\n    );\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      pendingActionResult[0]\n    );\n  }\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      initialHydration ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction shouldLoadRouteOnHydration(\n  route: AgnosticDataRouteObject,\n  loaderData: RouteData | null | undefined,\n  errors: RouteData | null | undefined\n) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  let childrenToPatch: AgnosticDataRouteObject[];\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(\n    (newRoute) =>\n      !childrenToPatch.some((existingRoute) =>\n        isSameRoute(newRoute, existingRoute)\n      )\n  );\n\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n\n  childrenToPatch.push(...newRoutes);\n}\n\nfunction isSameRoute(\n  newRoute: AgnosticRouteObject,\n  existingRoute: AgnosticRouteObject\n): boolean {\n  // Most optimal check is by id\n  if (\n    \"id\" in newRoute &&\n    \"id\" in existingRoute &&\n    newRoute.id === existingRoute.id\n  ) {\n    return true;\n  }\n\n  // Second is by pathing differences\n  if (\n    !(\n      newRoute.index === existingRoute.index &&\n      newRoute.path === existingRoute.path &&\n      newRoute.caseSensitive === existingRoute.caseSensitive\n    )\n  ) {\n    return false;\n  }\n\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if (\n    (!newRoute.children || newRoute.children.length === 0) &&\n    (!existingRoute.children || existingRoute.children.length === 0)\n  ) {\n    return true;\n  }\n\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children!.every((aChild, i) =>\n    existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy({\n  matches,\n}: DataStrategyFunctionArgs): ReturnType<DataStrategyFunction> {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) =>\n      Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  state: RouterState | null,\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  fetcherKey: string | null,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<Record<string, DataStrategyResult>> {\n  let loadRouteDefinitionsPromises = matches.map((m) =>\n    m.route.lazy\n      ? loadLazyRouteModule(m.route, mapRouteProperties, manifest)\n      : undefined\n  );\n\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve: DataStrategyMatch[\"resolve\"] = async (handlerOverride) => {\n      if (\n        handlerOverride &&\n        request.method === \"GET\" &&\n        (match.route.lazy || match.route.loader)\n      ) {\n        shouldLoad = true;\n      }\n      return shouldLoad\n        ? callLoaderOrAction(\n            type,\n            request,\n            match,\n            loadRoutePromise,\n            handlerOverride,\n            requestContext\n          )\n        : Promise.resolve({ type: ResultType.data, result: undefined });\n    };\n\n    return {\n      ...match,\n      shouldLoad,\n      resolve,\n    };\n  });\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext,\n  });\n\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n\n  return results;\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  loadRoutePromise: Promise<void> | undefined,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<DataStrategyResult> {\n  let result: DataStrategyResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<DataStrategyResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<DataStrategyResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<DataStrategyResult> = (async () => {\n      try {\n        let val = await (handlerOverride\n          ? handlerOverride((ctx: unknown) => actualHandler(ctx))\n          : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise,\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertDataStrategyResultToDataResult(\n  dataStrategyResult: DataStrategyResult\n): Promise<DataResult> {\n  let { result, type } = dataStrategyResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n        };\n      }\n\n      // Convert thrown data() to ErrorResponse instances\n      result = new ErrorResponseImpl(\n        result.init?.status || 500,\n        undefined,\n        result.data\n      );\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: Record<string, DataResult>,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: Record<string, DataResult>\n): { key: string; result: RedirectResult } | undefined {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isDataStrategyResult(result: unknown): result is DataStrategyResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectDataStrategyResultResult(result: DataStrategyResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveNavigationDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  signal: AbortSignal,\n  currentMatches: AgnosticDataRouteMatch[],\n  currentLoaderData: RouteData\n) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then((result) => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\n\nasync function resolveFetcherDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  revalidatingFetchers: RevalidatingFetcher[]\n) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, routeId, controller } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(\n        controller,\n        \"Expected an AbortController for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, controller.signal, true).then(\n        (result) => {\n          if (result) {\n            results[key] = result;\n          }\n        }\n      );\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n  viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  DataStrategyFunction,\n  PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  PatchRoutesOnNavigationFunction,\n  PatchRoutesOnNavigationFunctionArgs,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        flushSync: flushSync,\n        viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        viewTransition={viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          flushSync: options.flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as useViewTransitionState };\n\n//#endregion\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css'; // Optional for styling\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li><Link to=\"/\">Links</Link></li>\n        <li><Link to=\"/events\">Events</Link></li>\n        <li><Link to=\"/admin\">Admin</Link></li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;","import * as React from \"react\"\nconst CCSLogo = (props) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlSpace=\"preserve\"\n        viewBox=\"0 0 1410 1550\"\n        {...props}\n    >\n        <path\n            fill=\"#FEFEFE\"\n            d=\"M729 1h681.977v1549.924H1.124V1c235.575 0 471.275 0 707.491.434-.178 5.351 1.329 9.488 4.49 13.312 3.474 4.2 6.427 8.829 9.881 13.046 4.523 5.521 9.315 10.823 14.003 16.215.013-.004-.003.018-.061.395.565 1.81 1.19 3.243 1.886 4.99.127.744.18 1.172-.026 1.806 1.246 8.504 4.797 15.351 13.302 18.97.487-.009.676-.092.9.041.037.216.103.648.034 1.019 1.313 1.148 2.695 1.925 4.31 2.756.532.21.729.452.737 1.158 1.42 3.764 2.923 7.147 4.627 10.98-7.147-.155-13.365-.455-18.513-6.046-4.661-5.062-10.296-9.238-15.602-13.685-.926-.777-2.347-.963-3.803-1.556-.635-.16-1.006-.184-1.534-.457-.767-.979-1.377-1.71-1.73-2.603-1.036-1.817-2.228-3.564-3.64-5.111a2329.098 2329.098 0 0 0-18.834-20.409c-1.57-1.68-3.19-3.398-5.066-4.691-3.673-2.53-11.639-2.378-14.028.229-3.627 3.957-2.012 8.062.254 11.886 5.223 8.812 10.377 17.684 16.075 26.186 1.743 2.6 5.167 4.074 8.067 6.243 1.067 1.057 1.889 1.935 2.651 3.172 1.192 1.928 2.443 3.498 4.468 6.038h-37.336l.23-3.971c-1.025-.1-1.845-.312-2.639-.24-12.03 1.092-24.064 2.151-36.074 3.437-1.381.148-2.622 1.605-4.268 2.566-1.285.086-2.231.061-3.383-.24a252.731 252.731 0 0 0-18.05 1.902c-.761.108-1.38 1.234-2.421 1.956-1.082.135-1.806.203-2.764.022-4.487 1.56-8.741 3.363-12.99 5.18-1.597.684-3.123 1.753-4.783 2.028-3.727.618-7.575.567-11.268 1.31-4.325.87-8.538 2.294-13.158 3.554-1.087.153-1.816.23-2.762.019-2.447.429-4.677 1.145-7.124 1.973-.217.112-.623.385-.947.25-.794-.124-1.263-.112-1.957-.358-4.89 1.051-9.493 2.703-14.24 3.538-2.714.477-5.845.142-8.452-.778-2.554-.902-4.545-3.304-7.051-4.473-1.395-.65-3.337-.124-5.032-.129.145.703.29 1.405.4 2.572-.168 4.42-.3 8.377-.784 12.345-7.05 2.477-6.38 2.157-9.127-4.592-1.73-4.25-5.37-8.473-9.274-10.928-7.75-4.873-16.258-8.547-24.487-12.649-2.543-1.268-4.515-.358-4.566 2.456-.058 3.263.586 6.54.957 9.808.405 3.568.848 7.132 1.274 10.697l-1.922.446c-1.182-2.436-2.1-5.054-3.61-7.267-2.261-3.315-4.324-7.47-7.575-9.25-5.855-3.207-12.47-5.103-18.898-7.138-1.818-.575-4.086.27-6.147.465.334 2.255.253 4.677 1.082 6.733 2.352 5.839 5.075 11.528 7.804 17.614-4.92 1.716-6.887-.15-8.993-2.558-6.318-7.224-12.73-14.375-19.376-21.294-1.285-1.339-4.16-2.556-5.68-2.031-8.339 2.876-16.532 6.2-24.646 9.673-1.27.544-2.78 2.822-2.545 3.962.253 1.233 2.28 2.534 3.782 2.995 4.01 1.232 11.309 8.58 11.817 11.8-5.218-2.917-10.744-6.172-16.421-9.137-6.971-3.641-12.879-2.743-18.588 2.541-1.711 1.584-3.208 3.425-5.033 4.854-3.103 2.432-2.968 5.196-1.431 8.358 1.117 2.3 2.096 4.667 3.137 7.004l-.546 1.27c-9.114-10.13-17.012-4.54-23.81 1.682-4.785 4.38-12.08 8.357-9.063 17.789-5.21-.974-10.381-1.108-13.42 3.772-2.628 4.221-4.613 8.858-6.708 13.392-1.342 2.906-.906 5.232 2.192 7.174 3.009 1.886 4.024 4.638 1.453 8.012-7.28 9.556-12.368 20.284-17.653 31.06-8.627 17.59-13.953 36.052-18.32 54.935-.248 1.074.509 2.381.84 3.909-.08.75-.201 1.171-.687 1.657-1.201 2.8-2.04 5.536-2.877 8.273-.51-2.993-.393-5.918.126-8.77 1.205-6.63 2.731-13.202 3.816-19.849.218-1.332-.946-2.89-1.474-4.343-1.518.696-3.97 1.032-4.401 2.148-2.471 6.406-4.463 12.997-6.664 19.766-.047.24-.185.709-.516.807-2.714 8.143-6.162 16.05-7.212 24.265-1.361 10.65-5.761 20.187-12.19 27.571-6.631 7.618-10.15 16.25-13.631 24.963-5.81 14.546-11.95 28.58-22.672 40.434-5.031 5.562-9.703 12.189-12.175 19.17-5.002 14.12-13.8 25.81-21.235 38.45-2.665-1.732-4.862-3.538-7.355-4.717-12.756-6.031-26.262-8.204-40.272-7.131-7.436.568-10.592 5.372-8.044 11.99 1.05 2.727 2.667 5.239 3.679 7.977.457 1.238.67 3.311-.03 4.118-6.787 7.826-4.711 17.65-6.198 26.634-.59 3.564-1.17 7.426-.41 10.854 1.555 7.021 3.314 13.862 1.41 21.105-.243.927.648 2.72 1.518 3.206.816.455 2.388-.087 3.478-.545 3.196-1.342 4.104-3.897 3.967-7.274-.308-7.592-1.122-15.302 4.534-21.75 3.24-3.694 6.075-7.743 9.243-11.505.466-.554 1.876-.76 2.663-.52 2.775.853 5.321 8.014 3.539 10.252-10.781 13.532-14.87 29.799-18.464 46.123-1.528 6.938-.464 14.018 5.749 19.454.753 1.398 1.216 2.618 1.401 4.076.127 2.481.532 4.726.767 7.325-.366 1.378-.561 2.402-1.057 3.513-.666 1.693-1.03 3.298-1.46 5.254-.49 1.713-.915 3.074-1.57 4.546-.115.831 0 1.553.124 2.551-.12.62-.25.962-.678 1.365-.837 2.073-1.376 4.086-1.965 6.34-.05.242-.133.727-.458.867-1.784 7.745-3.244 15.35-4.694 23.274-.06.738-.129 1.157-.525 1.711-.863 1.148-1.84 2.149-1.867 3.175-.257 9.55-.404 19.105-.468 28.66-.03 4.403.036 8.818.348 13.208.432 6.08-1.882 12.542 2.449 18.509.064 1.439.056 2.49-.212 3.828-.27 1.776-.39 3.273-.27 4.75.952 11.716 2.024 23.422 2.918 35.142 1.388 18.181 2.866 36.359 3.937 54.56 1.215 20.646 8.262 39.645 15.681 58.595 3.957 10.106 8.47 20.079 11.359 30.493 3.177 11.45 4.776 23.34 6.78 35.235.244 1.083.768 1.969 1.361 3.187.352 1.426.635 2.52.613 3.86-1.183 5.646.13 10.078 5.302 13.098.03.662.02 1.042-.032 1.81.632 1.228 1.308 2.069 2.063 3.26.718 2.659 1.359 4.967 1.973 7.64.613.913 1.252 1.463 1.933 2.339.061.98.08 1.635.045 2.737.597 3.286 1.255 6.124 1.9 8.964 1.026 4.515 3.28 7.91 8.356 9.228 1.012 2.023 1.57 3.925 2.616 5.504 2.94 4.439 6.08 8.745 9.35 13.356.458 1.08.707 1.91.654 2.927-1.412 8.822-1.214 9.21 6.439 13.108 1.129 2.064 2.004 3.91 2.567 5.95-.222 1.399-.41 2.712.006 3.794 1.554 4.045 3.306 8.014 4.6 12.04a515.851 515.851 0 0 1-11.071-1.007c-5.491-.042-10.518-.025-15.845-.271-4.474.471-8.648 1.207-13.228 1.977-1.761.117-3.117.2-4.751.021-2.883.128-6.258-2.488-8.16 1.794-.658.06-1.042.02-1.508-.337-.701-.481-1.415-.932-1.925-.764-5.807 1.92-11.713 3.63-17.33 6.014-5.217 2.213-8.022 6.006-8.034 12.38-.014 6.992 2.3 12.996 5.234 18.915 3.795 7.656 7.07 15.805 12.184 22.513 6.33 8.304 14.143 15.522 21.645 22.872 4.727 4.63 10.06 8.643 14.021 12.002-11.327 2.11-23.733 4.583-36.2 6.7-12.37 2.1-20.88 8.362-23.746 20.995-.936 4.123-2.725 8.434.723 12.75.067 1.1.077 1.837-.185 2.866-.306 3.41-.34 6.529-.601 9.799.137.766.502 1.38.974 2.319.586.734 1.065 1.144 1.661 1.94.014 1.445-.089 2.502-.576 3.738-.601 1.935-1.263 3.775-.958 5.438 1.36 7.42 2.918 14.807 4.597 22.162.37 1.62 1.524 3.06 2.409 4.838.796.075 1.5-.104 2.414-.366.21-.082.633-.232.997-.296.451-2.017.538-3.97.645-6.322.201-1.446.382-2.494.822-3.64-.158-1.083-.575-2.069-1.165-3.385-.059-1.047.055-1.763.444-2.473.474-.7.673-1.404.904-2.503.153-3.107.274-5.82.333-8.858.063-.745.189-1.164.615-1.627.654-1.383 1.007-2.722 1.34-4.388.096-.743.213-1.16.662-1.658 1.232-2.292 2.267-4.459 3.002-6.722 1.167-3.591 3.255-4.89 6.884-3.23.059-.01.038.107.028.483 2.715 2.642 3.265 5.445 3.198 9.001-.203 10.708.144 21.426.188 32.457.178.855.444 1.395.692 2.363.456 3.329.547 6.373 1.558 9.074.554 1.48 2.658 2.382 4.064 3.544.812-1.593 2.368-3.22 2.298-4.774-.23-5.116.579-9.674 3.963-13.746 1.172-1.41 1.567-3.465 2.402-5.533.212-.478.34-.649.775-.913 1.172-2.135 2.035-4.176 2.983-6.53.335-.66.585-1.008 1.155-1.403 3.535-5.39 6.722-10.75 9.978-16.068 1.358-2.219 2.87-4.328 5.884-1.727.694.405 1.345.526 2.428.651 8.09.134 15.75.264 23.527.669 1.146.087 2.173-.101 3.631-.341 3.43-.955 6.428-1.858 9.79-2.856 1.106-.024 1.848.047 2.662.485 4.971 2.57 6.655 6.433 5.913 11.584-.745 5.167-1.451 10.34-2.178 15.511-.565 4.02-1.134 8.04-1.797 12.377-.344.679-.593 1.041-1.086 1.46-.234.726-.224 1.396-.22 2.363-.399.718-.79 1.138-1.506 1.598-3.096 4.02-5.866 8.001-8.91 12.118.054 1.108.383 2.082 1.087 3.094 1.168-.821 1.96-1.68 3.05-2.89.118-.598-.063-.846-.253-1.021-.01.072.136.088.354.381.692.22 1.167.148 1.868.278 2.078-1.378 3.93-2.96 5.772-4.61-.01-.071.131-.051.479-.023 2.084-1.476 3.594-3.686 5.606-4.335 3.92-1.264 5.395-3.877 5.943-7.596-.009-.089.17-.071.48-.034.72-.59 1.13-1.216 1.537-1.942-.002-.1.198-.078.54-.054 2.381-2.606 4.42-5.237 6.444-7.958-.016-.09.167-.084.516-.077 2.731-4.274 5.114-8.554 7.487-12.926-.01-.092.176-.076.489-.043.713-.608 1.113-1.248 1.496-1.971-.017-.083.152-.079.493-.063 1.176-1.012 2.012-2.039 3.146-3.098 1.016-.64 1.734-1.247 2.831-1.924 2.035-.75 3.64-1.81 5.358-2.047 8.477-1.169 17.024-1.88 25.461-3.268 3.314-.545 6.406-2.435 9.75-3.975.697-.492 1.242-.721 1.972-.687 1.064-.89 1.943-2.046 2.886-3.436.225-.542.475-.733 1.211-.812 1.006-1.535 1.616-3.065 2.208-4.84.02-.583.147-.883.76-1.192 1.178-3.573 1.766-7.16 2.832-10.597.397-1.282 1.914-2.216 3.203-3.238.665.099 1.048.126 1.471.163.041.008.06.09.08.428 1.756 1.663 3.493 2.989 5.48 4.491.998.85 1.746 1.523 2.536 2.498.693.698 1.346 1.095 2.044 1.468.044-.024-.003.065.02.392.723.715 1.423 1.102 2.303 1.62.18.131.504.437.551.748 1.413 1.675 2.78 3.037 4.186 4.75 1.084.985 2.126 1.618 3.455 2.34.68.113 1.073.136 1.759.318 2.723 2.166 5.153 4.172 7.57 6.444.074.607.162.948.034 1.444-.194.553-.171.952-.148 1.35.47-.2.94-.4 1.744-.515 2.491 1.337 4.647 2.589 6.977 3.955.174.116.458.42.514.735.786.618 1.516.923 2.507 1.394.965.597 1.67 1.027 2.406 1.737.452.9.874 1.52 1.327 2.47.753.249 1.474.166 2.489.16.63.3.969.522 1.325 1.051.743 1.015 1.466 1.722 2.213 2.775.744.703 1.465 1.06 2.39 1.454.204.037.593.179.615.529.75.695 1.478 1.04 2.537 1.443 1.682.799 3.034 1.54 4.425 2.617 1.328.518 2.615.697 4.216.92 1.374.736 2.434 1.43 3.554 2.455 6.093 4.004 12.127 7.677 18.273 11.562.326.478.605.614.97.621.024.002.068.02.048.324.615.415 1.25.526 2.177.703.786.386 1.279.706 1.771 1.324.642.446 1.285.595 2.271.81 3.44 2.053 6.536 4.041 9.694 6.364.808.621 1.554.908 2.638 1.25 1.38.436 2.42.816 3.46 1.56 1.399 1.036 2.801 1.71 4.536 2.432.996.168 1.66.287 2.441.622.347.488.639.619 1.3.677 1.06.422 1.817.772 2.685 1.331.317.472.587.62.922.674.002.02.04.008.186.278.724.407 1.302.544 2.105.716.224.035.663.159.781.364.333.464.608.607 1.287.723 3.449 1.706 6.553 3.322 9.698 5.284.78.659 1.522.972 2.59 1.338.972.198 1.618.342 2.337.813.818.612 1.56.898 2.594 1.224.674.118 1.057.195 1.456.573.663.384 1.31.467 2.311.6 1.453.416 2.549.783 3.712 1.518 1.694.752 3.32 1.138 4.967 1.527.02.005.059.01.056.311.632.424 1.268.545 2.288.718 2.145.371 3.906.69 5.856 1.09.189.081.554.267.545.497-.01.23.178.649.378.863.767.31 1.334.407 2.127.544.227.04.669.174.71.46.693.35 1.346.415 2.367.514 1.769.43 3.17.827 4.615 1.505.7.364 1.355.447 2.375.55 1.768.408 3.17.795 4.622 1.464.706.343 1.362.404 2.342.495.75.096 1.178.162 1.676.536 1.044.372 2.019.435 3.372.523 2.097.437 3.814.849 5.598 1.533.722.292 1.377.311 2.365.354.772.082 1.213.14 1.7.516 1.019.381 1.99.443 3.341.526 1.124.158 1.869.294 2.658.696.696.269 1.348.272 2.414.295 1.791.049 3.168.078 4.911.173 1.085.247 1.804.426 2.541.889.72.505 1.42.728 2.493 1.026 2.116.432 3.86.79 5.667 1.474 1.357.39 2.648.452 4.292.577 2.113.122 3.873.183 5.977.23 1.017.104 1.69.221 2.456.664 1.79.932 3.487 1.538 5.262 2.488 1.698.42 3.317.499 5.298.624 1.778.381 3.194.716 4.67 1.364 1.03.407 2 .5 3.355.596 2.13.344 3.874.684 5.68 1.372 3.436 4.257 7.2 6.06 12.307 2.573 1.078.175 1.794.31 2.633.745 2.08.641 4.037.985 6.378 1.335.88-.098 1.375-.203 2.16-.274.679.087 1.066.14 1.607.45.717.456 1.28.654 1.896 1.17 1.023.397 1.993.474 3.383.578 1.24-.097 2.06-.22 3.162-.305.66.111 1.036.183 1.547.53.711.468 1.287.66 1.96 1.244 8.7.46 17.303.526 26.356.6 2.236-.102 4.023-.212 6.134-.31.973.046 1.622.082 2.691.294 3.857.46 7.291.745 10.807 1.397 2.363.4 4.644.431 7.393.476 8.484.012 16.5.012 24.665.254.737-.176 1.324-.594 2.13-1.16.468-.39.718-.633 1.306-.988.708-1.713 1.077-3.316 1.677-5.05.401-.424.573-.715 1.042-1.058.7-.072 1.101-.094 1.915.067 1.281.05 2.15-.084 3.335-.228.943-.016 1.571-.02 2.626.152 2.543.116 4.658.057 6.998.296 1.762-.175 3.3-.648 5.246-1.194 3.451-.414 6.495-.755 9.72-.822 1.083-.146 1.985-.566 3.289-1.057a338.6 338.6 0 0 1 8.874-1.11c1.496-1.339 2.622-2.69 4.163-4.02 4.448.461 8.48.9 12.634 1.694 3.508 1.55 6.906 2.887 10.346-.52 4.469-.439 8.912-2.272 11.525 2.864.07.138.604.04.96.04.037-.011.037.067.081.412 11.617 8.315 24.028 7.526 36.673 3.754 4.165-1.242 8.237-2.796 13.164-4.487a1317.687 1317.687 0 0 1-6.123 6.322c-1.026.501-1.815.783-2.986.975-8.126 1.954-15.9 3.892-23.582 6.143-1.252.367-2.987 2.185-2.906 3.206.098 1.233 1.688 2.931 2.992 3.379 4.764 1.635 9.61 3.583 14.55 4.03 8.326.754 16.747.458 25.128.59 1.959.03 3.918.004 6.716.004-1.141.99-1.48 1.292-1.828 1.585-1.526 1.286-3.055 2.57-4.582 3.854 1.386 1.426 2.62 3.052 4.184 4.243 6.572 5.003 14.111 4.162 21.57 3.16 5.963-.802 11.882-1.926 17.85-2.912-.779 5.038.235 5.917 5.878 6.395 11.23.95 21.224-3.362 31.023-7.674 5.227-2.3 9.61-6.517 14.362-9.916-.013-.046.064.012.412.028 2.737-1.773 5.252-3.42 7.48-5.392 2.221-1.968 4.151-4.264 6.214-6.411 1.846-1.922 3.698-3.836 5.547-5.753l1.155 1.209c-3.558 8.426-9.483 14.836-17.786 19.47 6.392 3.043 12.485 4.76 18.7 2.976 7.933-2.278 15.7-5.183 23.43-8.104 2.962-1.12 5.825-2.757 8.384-4.634 5.579-4.09 10.496-8.763 17.933-10.122 5.497-1.005 10.899-3.81 15.751-6.78 8.4-5.14 15.956-11.739 24.577-16.412 9.344-5.066 15.484-13.358 23.164-20.07 1.03-.9 1.411-2.542 2.272-4.049.605-.56 1.03-.91 1.808-1.195 3.583-4.154 6.812-8.374 10.035-12.644-.006-.05.097-.052.41-.039.741-.626 1.168-1.266 1.592-1.957-.004-.05.098-.058.423-.063.702-.701 1.079-1.397 1.541-2.316.086-.224.33-.638.659-.665 2.16-1.946 4.4-3.616 5.76-5.825 12.606-20.478 24.998-41.115 28.784-65.433 1.498-9.619 3.667-19.457 2.989-29.015-1.016-14.306-4.92-28.275-11.1-41.781-2.09-5.074-3.14-10.47-8.7-13.001-.137-.095-.188-.423-.005-.793-.506-.894-1.195-1.418-1.736-2.095.147-.153-.171.128-.033-.297.347-2.736.555-5.046.809-7.375.046-.019.08-.113.36-.036.36-.246.443-.57.572-.936.047-.042.116-.148.462.002 4.14-2.538 9.062-4.103 10.212-9.887 1.144-2.365 2.125-4.431 3.426-6.468 1.33-.745 2.338-1.52 3.724-2.245 2.205-.948 3.96-2.61 5.872-2.815 5.405-.577 6.253-3.836 5.91-8.539.916-.975 1.684-1.676 2.782-2.417 2.082-1.23 4.077-2.18 5.542-3.656 6.52-6.567 12.6-13.484 15.615-22.522-.032-.036.047.018.407-.01 2.025-1.322 4.447-2.275 5.209-3.974 2.13-4.75 3.778-9.749 5.195-14.769.611-2.167 4.176-4.804.256-6.63-.71-.331-3.361 3.466-5.073 5.397-.161.181-.008.641-.015.959-.014-.014.016.011-.32.017-.839.92-1.342 1.835-1.953 2.974-.282.513-.495.767-1.098 1.009-1.767 2.02-3.185 4.02-4.623 6.003-.02-.017.02.02-.325.018-4.802 5.977-9.262 11.955-13.708 17.95.013.015-.018-.01-.369-.023-3.374 4.083-6.396 8.18-9.539 12.549-.78 1.007-1.44 1.741-2.435 2.508-.728.747-1.12 1.46-1.621 2.453-.769 1.016-1.43 1.754-2.436 2.51-2.043 2.422-3.74 4.824-5.487 7.504-.398.696-.745 1.112-1.44 1.53-1.096 1.356-1.844 2.711-2.605 4.061-.013-.004.017.002-.359-.05-2.805-.03-5.236-.01-7.681-.008-.016-.018-.051-.05-.024-.397.445-1.051.782-1.819 1.29-2.448 9.76-12.08 19.53-24.151 29.318-36.208 7.588-9.348 15.245-18.64 22.754-28.05.935-1.171 1.149-2.918 1.972-4.587.551-.538.828-.888 1.427-1.309 3.433-6.253 6.543-12.436 9.702-18.794.049-.175.306-.434.693-.42.78-.27 1.394-.472 1.532-.849 2.936-7.994 5.042-16.403 8.878-23.933 7.06-13.859 15.154-27.191 22.773-40.768 3.227-5.75 6.317-11.304 6.904-18.362.508-6.112 2.624-12.552 5.711-17.87 3.834-6.605 6.475-13.135 7.191-20.751.274-2.91 2.681-5.62 4.117-8.422l2.28.864c-1.079 4.01-2.09 8.04-3.265 12.02-.601 2.038-1.76 3.94-2.136 6-.166.915.982 2.07 1.533 3.116 1.043-.823 2.659-1.44 3.04-2.5 3.015-8.393 5.52-16.976 8.717-25.295 3.95-10.282 8.104-20.525 6.35-31.793-.795-5.112-.5-9.35 3.275-13.213 1.155-1.18 1.36-3.289 2.063-5.293.154-.746.244-1.172.66-1.747 1.333-7.436 2.341-14.723 3.338-22.4-.124-1.151-.235-1.912-.21-2.872.136-.197.344-.63.696-.724 1.334-6.058 2.47-12.003 3.239-17.995.43-3.353-.661-6.923 3.03-9.403.965-.648.764-3.033 1.125-4.936.12-.727.216-1.138.65-1.655 2.435-3.89 3.836-7.643-.219-11.506-.1-1.078-.145-1.798.02-2.752-4.407-7.893-5.786-16.363-6.219-25.12-.064-1.286-1.163-2.522-1.83-4.186-.106-1.762-.165-3.118.024-4.721-1.154-3.802-2.556-7.357-4.038-11.292-.106-1.412-.131-2.445.1-3.701.102-1.721-.054-3.218-.239-5.154.051-2.765.132-5.09.552-7.504 2.645-1.71 4.452-1.4 5.252 1.448.8 2.851 1.216 5.812 2.053 8.65 1.18 3.998.703 8.824 5.979 12.36 0-3.582 0-6.064.005-8.859.083-.722.16-1.132.585-1.674.532-1.562.718-2.99.96-4.784.113-1.35.169-2.335.628-3.215.888 2.525 1.26 4.976 1.894 7.357.453 1.701 1.259 3.309 2.038 5.245.147.91.163 1.532-.102 2.29.028 1.498.337 2.863.721 4.667.231 3.422.387 6.406.203 9.547.07 1.735.48 3.31.96 5.333.15 3.427.23 6.408.122 9.803-.173 2.523-.158 4.631-.401 7.032-.082 3.099.095 5.906.253 9.18-.126 6.054-.232 11.64-.617 17.383-.358 1.49-.44 2.823-.553 4.546-.08 1.69-.125 2.991-.443 4.45-.193 1.184-.115 2.21-.07 3.594-.15 1.07-.27 1.78-.75 2.572-1.41 2.893-1.917 6.096-3.608 8.447-5.513 7.667-5.672 7.655 1.004 13.888-.58 1.88-1.066 3.414-1.843 4.843-.38.587-.47 1.279-.525 2.39-.002 2.655-.037 4.891-.298 7.434-.4 2.054-.574 3.802-.909 5.865-.36 1.47-.56 2.626-1.068 3.948-.683 1.93-1.058 3.693-1.53 5.77-.233.729-.37 1.145-.824 1.519-.385.61-.452 1.263-.598 2.283-.475 1.788-.872 3.207-1.579 4.606-.348.66-.386 1.34-.462 2.346-.158.744-.277 1.164-.72 1.63-.74 1.703-1.157 3.36-1.614 5.332-.042.738-.045 1.161-.264 1.774-.918.685-1.619 1.181-2.468 1.442-.48-.681-.811-1.126-1.143-1.9-.403-.953-.806-1.576-1.208-2.2-.293.506-.585 1.012-.906 1.86-.01.8.01 1.257-.176 1.882.204.78.611 1.393 1.201 2.085.183.08.532-.112.589.313.185 2.426.313 4.428.17 6.675-.089 2.084.095 3.92.205 6.11-.132 1.072-.19 1.79-.576 2.612-.869.925-1.553 1.686-1.93 2.576-4.246 10.044-8.005 20.324-12.778 30.11-5.119 10.492-10.711 20.74-18.289 29.881-3.121 3.765-4.675 9.085-6.102 13.944-2.822 9.612-3.951 19.775-9.812 28.34-.122.178.376.78.515 1.47-.454.714-.838 1.141-1.551 1.631-2.406 3.215-4.428 6.407-6.587 9.502-.902 1.294-2.04 2.443-3.172 3.554-1.432 1.404-3.464 2.43-4.376 4.091-4.833 8.812-9.462 17.74-13.994 26.71-.836 1.655-.902 3.698-1.323 5.561l2.104.757 14.65-29.018c1.167 1.929 1.087 3.418 1.353 4.842.4 2.137 1.175 3.998 4.228 2.243.724.028 1.137.087 1.576.499 1.212 1.762 2.396 3.171 3.708 4.732l-2.64 9.795 2.224.677c1.313-3.23 2.626-6.46 3.928-9.735-.011-.044.079-.053.426-.087 6.937-10.455 13.912-20.659 19.995-31.368 4.7-8.274 8.284-17.182 12.426-26.003.06-.195.195-.581.526-.668.544-.855.757-1.624 1.099-2.72.964-2.272 1.799-4.218 2.968-6.24 3.237-7.105 6.147-14.13 8.992-21.183.067-.167-.593-.629-.83-1.295.449-1.448.814-2.554 1.486-3.635.423-.634.54-1.292.715-2.263.196-.714.332-1.116.769-1.601.61-1.417.919-2.75 1.261-4.399.151-.722.269-1.128.689-1.606.638-1.405.974-2.736 1.366-4.416 0-.803-.057-1.259-.038-1.63.076.086.302.119.639.058.654-1.736.971-3.412 1.345-5.402.176-.72.296-1.128.744-1.63 1.292-3.41 2.255-6.724 3.252-10.391-.053-.806-.14-1.26-.065-1.906.25-.336.337-.48.745-.688.684-1.73 1.048-3.394 1.46-5.415.148-1.07.248-1.784.65-2.606.608-1.755.91-3.401 1.251-5.4.166-1.048.294-1.744.694-2.541.181-.802.09-1.503.059-2.568.37-1.298.68-2.232 1.168-3.291.333-.377.437-.648.765-1.102.64-1.825 1.009-3.485 1.436-5.522.773-3.369 1.488-6.36 2.502-9.502.708-2.143 1.116-4.136 1.557-6.417.068-.672.103-1.057.415-1.57.341-1.13.406-2.13.53-3.414.127-.661.194-1.04.577-1.596.99-4.494 1.667-8.81 2.388-13.519.15-1.443.255-2.493.694-3.688.639-3.398.944-6.653 1.292-10.296-.07-1.147-.182-1.906-.247-3.032.102-1.104.158-1.84.27-2.444.055.133.339.076.608-.04.35-1.114.431-2.11.56-3.495.16-1.166.273-1.942.49-2.928-.173-.553-.451-.896-.73-1.239-.39.457-.781.913-1.372 1.637-1.093 1.328-1.985 2.39-3.11 3.727 0-8.522-.103-16.528.022-24.53.236-15.156.602-30.31 1.003-45.819.059-1.078.03-1.804.333-2.773.099-7.854-.136-15.464-.368-23.434-.077-1.314-.158-2.27-.006-3.495.091-5.07.176-9.89-.24-14.667-1.042-11.976-2.047-23.966-3.597-35.882-.814-6.26-2.74-12.377-4.211-18.751-.049-.192-.303-.497-.162-.845.066-1.089-.009-1.83.108-2.75-.213-.88-.618-1.578-1.037-2.6-.116-.966-.218-1.607-.165-2.427-.105-.825-.364-1.472-.678-2.137-.055-.019-.164.02-.077-.262-.033-.654-.154-1.026-.092-1.574-.222-.858-.626-1.542-1.002-2.588-.082-1.328-.193-2.291-.098-3.474.79-.203 1.404-.294 1.952-.144.669.183 1.282.568 1.92.866.054-.856.11-1.713.227-3.005-.032-2.79-.127-5.146-.012-7.698-.17-1.149-.551-2.1-1.002-3.064-.07-.011-.126.118.003-.224.028-1.06-.073-1.777.015-2.672-.226-.85-.64-1.526-1.062-2.481-.099-.642-.19-1.004-.218-1.723-.544-1.563-1.15-2.77-1.802-4.233-.25-.523-.456-.79-.642-1.372-.463-1.231-.947-2.147-1.347-3.399-.008-.783-.1-1.232-.157-2.077-2.626-6.175-5.285-11.954-8.009-18.01-.22-.624-.376-.968-.43-1.673-1.05-2.603-2.203-4.846-3.412-7.093-.056-.004-.08.106-.017-.18-.136-.608-.336-.93-.585-1.61-1.28-3.901-2.51-7.445-3.485-11.178-.909-3.755-1.878-7.398-3.285-10.862-1.688-4.158-3.75-8.164-5.774-12.373-.123-.138-.481-.228-.487-.533-.186-.888-.366-1.47-.33-2.237-.518-1.478-1.252-2.771-2.077-4.218-.092-.152-.392-.344-.419-.643-.404-.743-.782-1.188-1.146-1.89-.143-.555-.3-.853-.473-1.48-.596-1.24-1.177-2.153-1.78-3.326-.331-.666-.642-1.071-.963-1.777-.275-.589-.54-.877-.778-1.419-.127-.552-.28-.85-.344-1.36.087-.211-.031-.654.133-.914-2-4.165-4.166-8.07-6.467-12.07-.135-.095-.43.058-.497-.31-3.018-5.634-5.968-10.902-8.817-16.513-.854-1.488-1.81-2.633-2.93-4.059-1.371-2.092-2.58-3.904-3.71-6.009-.65-1.098-1.38-1.902-2.27-2.964-.943-1.162-1.726-2.067-2.521-3.313-.673-.886-1.333-1.43-2.124-2.172-.628-.583-1.126-.967-1.44-1.486.185-.135.23-.59.483-.83 1.049-.93 1.855-2.227 2.641-2.216 9.471.141 19.07-.376 28.366 1.043 6.795 1.037 13.19 4.688 19.798 7.144.033-.03-.024.039-.026.389 6.966 3.488 12.197 8.759 16.796 14.608 4.579 5.822 9.491 11.584 12.874 18.092 4.508 8.673 6.148 18.217 7.017 28.171 1.601 18.357 5.3 36.56-1.04 54.751-.57 1.637.454 3.83.737 5.764l1.621-.1c.465-.995 1.13-1.946 1.363-2.993 2.473-11.141 5.422-22.216 7.093-33.48.977-6.585-.117-13.478-.273-20.608.027-1.128.049-1.88.346-2.931-.536-5.161-1.347-10.023-2.204-15.186-.091-.705-.137-1.109.051-1.733-3.83-15.42-13.152-27.722-21.821-40.401-7.573-11.077-18.649-17.694-30.051-23.888-1.207-.655-2.953-.316-4.81-.449-1.078-.078-1.796-.146-2.575-.561-2.138-1.307-4.17-2.975-6.298-3.11-11.7-.739-23.375-.942-34.834 2.564-2.742.84-5.944.173-9.111-.063-1.045-.83-1.912-1.4-2.787-2.193-.007-.225-.288-.576-.257-.894-.627-.677-1.285-1.034-2.114-1.552-.171-.159-.582-.384-.583-.73-1.031-1.035-2.062-1.725-3.28-2.613-.802-.556-1.415-.914-2.123-1.593-.795-.804-1.496-1.288-2.346-1.522-.045.084.058-.082.136-.54-.255-.609-.485-.926-.68-1.62-1.554-3.072-3.142-5.77-4.868-8.775-1.452-2.154-2.767-4-4-6.215.853-.996 1.825-2.295 2.358-2.135 2.313.696 4.497 1.819 5.68 2.331 2.535-.928 4.305-2.23 5.925-2.065 11.224 1.144 19.741-4.63 28.627-10.624 1.416-.123 2.447-.192 3.627-.007 1.02-.573 1.892-1.4 2.934-2.391.395-.385.633-.59 1.251-.692.895-.76 1.423-1.605 2.029-2.534.076-.085.245-.238.55-.044 3.528-2.73 6.75-5.655 10.035-8.52.06.057-.051-.068.29.016.814-.602 1.286-1.29 1.767-1.966.01.011-.008-.012.345.07 3.448-2.642 6.542-5.366 9.65-8.074.015.015-.015-.015.341.048 2.023-1.734 3.689-3.53 5.58-5.552 1.028-.912 1.832-1.598 2.93-2.079.86-.39 1.426-.987 2.268-1.754 1.328-.926 2.38-1.68 3.773-2.209 7.317-2.919 14.293-6.064 21.728-9.24 6.726-.02 12.994-.01 19.336.304 1.408.643 2.744.984 4.448 1.401 1.355.253 2.341.43 3.325.957 5.666 4.41 22.275 8.334 26.283 6.058-1.426-1.114-2.643-2.065-4.094-3.29-1.789-1.726-3.345-3.179-4.912-4.983-.806-.594-1.602-.837-2.696-1.245-1.936-.95-3.574-1.734-5.274-2.86-4.856-2.866-9.618-5.551-15.63-3.33-.86-.057-1.43-.12-2.06-.489-2.246-.681-4.434-1.056-6.848-1.426-.532-.011-.829-.07-1.207-.495-2.946-.116-5.802.093-8.985.351-1.208.068-2.09.088-3.11-.193-2.126.511-4.113 1.325-6.443 2.19-.808.065-1.272.076-1.855-.206-1.06.13-2.001.553-3.252 1.137-.943.454-1.574.75-2.498.786-1.914.527-3.536 1.313-5.498 2.214-2.085.898-3.83 1.682-5.654 2.148-.599.161-1.12.641-1.69 1.068-.05-.054-.019.09-.352-.087-1.245.68-2.156 1.537-3.253 2.55-.186.156-.602.404-.956.221-1.149-.141-1.943-.1-2.905-.28-.77.46-1.373 1.142-2.217 2.04-1.309.94-2.374 1.662-3.801 2.28-1.832 1.267-3.303 2.639-4.922 4.247-.202.584-.256.932-.613 1.348-1.325.68-2.35 1.291-3.597 1.676-1.33.795-2.437 1.818-3.688 3.032-.358.441-.613.633-1.279.718-2.452 1.648-4.538 3.347-6.77 5.298-.167.62-.187.987-.149 1.453.059.1-.101-.067-.43-.135-.81.597-1.29 1.262-2.055 2.077-1.397 1.408-2.509 2.667-3.91 3.857-.647.104-1.004.278-1.732.428-2.846 1.563-5.322 3.15-8.088 4.896-1.236.715-2.182 1.272-3.476 1.643-1.61.657-2.87 1.499-4.32 2.486-.186.146-.594.388-.922.191-.837-.192-1.346-.188-2.063-.44-1.741.554-3.274 1.362-5.008 2.39-.72.488-1.238.757-1.813.74-.725.076-1.393.44-2.492.91-3.067-.04-5.702-.188-8.292-.626-.699-.583-1.442-.875-2.536-1.232-.805-.003-1.26.059-1.81-.02a.947.947 0 0 1-.11-.815c-.813-.971-1.746-1.582-2.957-2.374-1.354-.789-2.431-1.398-3.61-1.922-.101.084.075-.113.175-.423-.357-1.036-.814-1.763-1.258-2.848-3.618-4.47-7.249-8.581-11.076-12.816-.45-.372-.74-.432-1.153-.588-.297-.611-.511-.938-.643-1.584-.044-.74-.172-1.162-.06-1.724-.188-.71-.616-1.281-1.162-2.24-.268-1.726-.416-3.064-.328-4.818.277-3.547.32-6.677.64-10.111.367-8.025.555-15.749.43-23.467-.018-1.132-1.522-2.24-2.53-3.63-.299-.695-.407-1.12-.188-1.677-.805-2.377-1.937-4.622-3.238-7.14-.394-1.107-.62-1.939-.592-2.948-.635-.991-1.524-1.806-2.316-2.676.099-.055-.069.096.054-.27-.893-1.872-1.909-3.378-3.05-5.17-.659-.849-1.192-1.414-1.862-2.273-1.014-1.821-1.892-3.348-2.594-5.219-.45-.895-1.075-1.445-1.974-2.197-4.336-2.469-8.397-4.737-12.51-7.375-1.159-.59-2.265-.81-3.663-1.178-1.647-1.227-3.003-2.305-4.353-3.75-.617-1.1-1.113-2.273-1.881-2.491-6.46-1.836-12.904-3.863-19.494-5.051-3.137-.566-7.103-.543-8.705 4.101-.937.649-1.66 1.067-2.749 1.291-1.615.325-2.867.843-4.372 1.478-.721.414-1.19.711-2.007 1.026-1.04 1.405-1.729 2.792-2.614 4.427-1.184 1.31-2.173 2.375-3.51 3.464-1.57.079-3.1.636-3.966.107-7.352-4.495-15.564-8.178-21.618-14.06-8.847-8.597-19.634-12.58-30.51-16.975-6.453-2.607-14.248-4.174-18.715-8.825-5.36-5.581-11.817-8.508-18.047-11.814-23.792-12.626-47.734-25.018-72.061-36.568-11.383-5.404-23.773-8.684-35.705-12.93-7.003-2.493-14.263-1.647-21.466-2.122-10.996-.724-21.848-3.488-32.8-5.132-2.815-.422-5.773.107-9.027.219-1.082-.047-1.803-.112-2.589-.5-5.507-4.827-9.483-10.289-11.6-17.125-1.646-5.316-3.593-10.54-5.507-15.77-.342-.936-1.172-1.694-1.892-2.843-.125-.748-.135-1.186.138-1.812-.156-2.26-.03-4.727-1.147-6.327-2.783-3.987-6.132-7.58-9.164-11.4.09-.07-.074.088.018-.272-.633-.799-1.358-1.239-2.013-1.747.069-.07-.05.085.01-.28-3.607-1.567-7.274-2.769-11.276-3.987-.757.067-1.18.152-1.607.146-.004-.09.081-.248.024-.578C741.426 25.81 736.935 11.962 729 1m96.086 58.21-3.332-.073c.413.623.826 1.247 1.883 2.242 2.43.617 4.86 1.233 7.817 2.263 6.245 2.568 11.39 8.358 19.269 6.57-1.993-2.32-4.278-4.133-6.879-5.049-4.144-1.459-8.498-2.32-13.266-3.882-1.703-.514-3.406-1.029-5.492-2.072m-396.29 1381.904A65.81 65.81 0 0 0 430 1439s.025.018.7.002c1.196-4.005-1.451-7.042-5.915-6.734-1.465.102-3.01.747-4.368.451-14.061-3.06-23.582 4.718-32.035 13.953-5.097 5.57-2.757 13.894 4.232 16.248 4.208 1.417 8.906 1.437 13.401 1.923 4.106.445 8.317.307 12.312 1.191 1.432.317 3.462 2.964 3.337 4.381-.44 4.96-5.796 9.13-11.3 9.585-8.414.695-12.515-1.185-14.713-6.741-1.644-4.155-4.255-4.96-8.23-3.013-1.967.965-4.289 1.209-6.42 1.754 0 0-.024.03 0-.664-2.145-3.698-4.816-1.845-6.51-.016-4.293 4.634-9.392 6.589-15.602 7.523-10.377 1.56-20.443-4.16-23.321-14.31-1.653-5.829-1.007-6.4 4.91-6.864 4.912-.385 9.761-1.55 15.222-2.505.394.048.789.095 1.393.83 7.173 3.367 14.46 1.701 21.694.34.822-.156 1.835-1.463 2.034-2.391.921-4.302-3.133-10.935-7.812-12.945 0 0 .055-.087.078-.752A73.717 73.717 0 0 0 371 1439s.017-.022.033-.727c-3.756-4.136-8.455-6.75-13.998-5.987-10.988 1.514-20.683 6.192-28.084 14.57-10.142 11.48-10.058 22.093-2.88 31.906 4.552 6.22 12.133 9.917 20.204 10.12 12.842.322 25.75.057 35.953-9.85 3.925 4.767 8.09 8.99 15.477 9.102.714.1 1.428.201 2.367.92 1.694-.213 3.387-.427 5.914-.86 2.016.007 4.032.014 6.469.568 3.554-1.143 7.301-1.904 10.592-3.568 2.01-1.018 3.32-3.422 4.953-5.194 0 0-.01-.008.7.057 4.56-2.926 8.422-6.356 8.375-12.205 1.38 1.223 2.527 2.239 3.899 3.871-.054.428-.108.856-.799 1.334.258 1.358.052 3.143.847 4.008 7.408 8.06 16.3 12.915 27.644 11.918 4.432-.39 8.95-.461 13.262-1.422 6.891-1.536 14.169-2.783 17.292-10.68 1.075-2.719.863-4.847-1.775-6.4-2.309-1.36-4.372-1.686-5.446 1.519 0 0-.042-.033-.75-.057-.918.705-1.844 1.403-2.755 2.117-5.79 4.538-12.838 5.7-19.583 5.009-9.066-.928-16.02-8.94-17.36-18.119-.13-.897 1.324-2.87 2.147-2.93 7.27-.542 14.56-.848 21.848-1.053 5.923-.166 11.853-.022 17.777-.156 4.409-.1 5.6-2.51 3.826-6.318-8.585-18.414-20.64-22.233-37.76-13.847-3.088 1.512-5.583 4.234-8.389 6.354 0 0 .044.037-.657-.077l-14.692 18.738c-3.457-7.18-10.662-9.817-18.812-10.492-5.709-.472-11.454-.51-17.21-.816 0 0-.08-.005.235-.73 1.495-3.798 4.342-5.832 8.364-5.673 3.425.135 6.82.993 10.247 1.16 3.734.182 7.542.06 9.552-4.084 0 0 .095.057.77.087m-185.47-31.082c-1.602 1.424-3.451 2.664-4.708 4.347-.69.922-.987 3.149-.388 3.8 1.047 1.137 3.616 2.532 4.337 2.041 4.603-3.134 9.132-6.483 13.162-10.313 2.415-2.295 1.016-5.413-1.553-6.612-1.6-.746-4.539-.259-6.038.83-1.834 1.333-2.79 3.873-4.139 5.876 0 0 .016.013-.673.03m1027.149 120.833c3.312.939 6.58 2.468 9.943 2.72 21.842 1.639 40.564-18.998 42.16-38.86.884-11.016.245-22.157.233-33.242-.009-7.182.02-14.37-.293-21.542-.082-1.871-1.516-5.314-2.095-5.265-3.421.29-6.865 1.166-10.066 2.437-.582.232-.123 3.2-.068 4.902.235 7.236 2.017 14.842.364 21.612-2.032 8.317-10.36 11.906-17.633 15.698-6.039 3.148-12.138-2.984-10.787-8.721 2.466-10.475 4.578-21.035 6.676-31.591.257-1.29-.099-3.081-.887-4.068-.55-.688-2.57-.909-3.505-.455-3.38 1.644-6.873 3.322-9.664 5.746-.826.718 1.071 4.02.769 5.99-1.142 7.435-2.622 14.819-4.075 22.201-2.207 11.206-1.345 17.829 10.91 19.952 4.29.743 9.392-1.14 13.654-2.937 3.719-1.568 6.689-4.837 10.15-7.11 4.122-2.708 5.48-2.201 5.443 2.502-.054 6.905-.643 13.818-1.277 20.702-.726 7.876-3.875 14.353-10.365 19.466-5.273 4.153-10.692 6.32-17.386 6.028-7.284-.319-12.222-3.422-14.93-10.326-.329-.84-3.363-1.638-4.226-1.067-3.368 2.228-3.58 7.22-.522 9.976 2.063 1.86 4.564 3.232 7.477 5.252m-1084.337-112.89c-.022-3.375-.11-6.75-.053-10.123.14-8.474.305-16.948.545-25.42.1-3.58-1.749-5.104-5.287-4.131-7.664 2.107-8.99 4.495-6.925 12.304.295 1.111.451 2.286.482 3.437.392 14.71.734 29.423 1.126 44.133.123 4.588.63 9.18.485 13.756-.352 11.1-1.073 22.19-1.362 33.291-.029 1.083 2.055 3.276 2.906 3.157 5.909-.828 8.972-4.57 9.132-10.699.056-2.144-.384-4.296-.434-6.448-.149-6.458-.348-12.92-.202-19.373.027-1.216 1.302-2.757 2.426-3.536 7.38-5.11 15.365-6.271 23.566-2.37 1.602.763 3.323 3.415 3.278 5.15-.28 10.68-1.176 21.343-1.53 32.023-.056 1.668 1.206 4.32 2.558 4.905 3.199 1.387 9.965-3.884 10.088-7.522.177-5.216.131-10.44.194-15.66.048-3.906-.113-7.83.228-11.71.577-6.576-.952-11.997-6.626-16.053-6.759-4.831-14.348-2.398-21.506-2.512-3.959-.062-7.96 2.52-13.12 4.32 0-6.665 0-13.329.03-20.92m767.285 27.01c5.189 3.683 11.062 4.785 17.31 5.412 6.147.617 12.501.162 18.326 3.484 6.768 3.86 7.575 5.253 4.66 12.616-.367.928-.632 1.9-1.036 2.812-3.284 7.397-8.318 12.018-17.039 12.16-8.117.13-15.992-.654-23.279-4.238-2.48-1.22-4.17-3.96-6.46-5.692-1.306-.99-4.153-2.235-4.484-1.84-1.922 2.296-4.05 4.911-4.548 7.697-.247 1.38 2.54 3.926 4.478 4.96 7.2 3.84 15.007 5.524 23.14 6.599 18.942 2.502 35.334-6.718 42.115-24.453 3.952-10.337-1.325-20.08-12.305-21.868-7.935-1.292-15.978-2.043-24.002-2.613-7.476-.532-12.853-6.642-10.457-12.311 3.819-9.033 19.42-15.204 27.545-9.858 3.432 2.258 6.271 1.457 9.083-.74 1.084-.848 2.845-2.5 2.607-3.038-.573-1.298-1.974-2.624-3.339-3.119-14.175-5.144-36.645 1.775-45.17 15.172-4.313 6.777-3.93 12.725 2.855 18.858m-423.924-5.32c-.57 2.744-1.461 5.465-1.653 8.235-.83 11.964 6.351 20.173 13.778 28.079 9.384 9.987 22.037 12.921 34.764 12.962 10.268.032 20.634-2.61 30.743-4.98 2.02-.473 4.678-5.419 4.191-7.693-.723-3.38-4.082-1.098-6.199-.088-12.201 5.83-24.777 6.56-37.821 3.37-13.545-3.311-26.608-17.84-27.482-31.558-.378-5.93-.576-12.157 3.823-17.064 9.67-10.785 21.704-16.17 36.266-14.706 4.058.408 7.999 2.116 11.956 3.348 4.046 1.259 6.88-1.01 8.053-4.042 1.456-3.764-1.886-4.63-4.895-5.034-3.278-.44-6.542-1.203-9.829-1.308-11.831-.376-23.116 1.756-33.773 7.25-9.848 5.077-18.15 11.419-21.922 23.23m-418.174 33.814c-8.243-5.996-12.756-14.433-14.542-24.133-1.141-6.2-1.17-12.923 3.373-18.063 8.45-9.562 18.839-15.833 32.07-15.08 5.541.316 11.022 2.017 16.483 3.29 2.728.638 7.783-1.359 7.967-3.984.103-1.478-1.292-3.858-2.632-4.467-2.478-1.126-5.392-1.56-8.16-1.74-18.6-1.203-35.489 3.037-50.123 15.268-7.454 6.229-15.517 24.085-9.04 34.713 3.418 5.61 6.994 11.25 11.312 16.16 7.487 8.515 17.786 11.031 28.663 12.94 13.206 2.319 25.31-1.855 37.657-4.592 1.845-.409 4.284-5.301 3.777-7.505-.792-3.445-3.996-1.22-6.164-.21-17.055 7.942-33.719 7.258-50.641-2.597m934.677-39.612c-10.98 1.967-20.697 6.798-27.229 15.747-9.409 12.89-7.42 28.372 6.32 35.892 5.97 3.268 12.524 3.77 19.212 3.153 12.52-1.153 24.604-3.413 30.968-16.048 1.866-3.706 2.272-8.163 3.243-12.3 3.227-13.745-7.011-21.18-16.907-25.055-4.411-1.728-9.79-.985-15.607-1.389m-256.863 32.473c-.816 2.408-1.046 5.295-2.552 7.138-5.134 6.28-16.794 8.268-23.923 4.303-1.24-.69-2.672-2.453-2.677-3.725-.037-11.032-.024-22.079.562-33.09.18-3.398.332-7.051-3.305-6.687-3.393.34-7.9 2.715-9.364 5.525-1.52 2.915.125 7.425.208 11.241.128 5.895.4 11.81.053 17.684-.284 4.775.888 15.002 6.572 17.02 3.657 1.297 7.723 2.652 11.443 2.294 6.312-.608 12.483-2.612 18.743-3.883 1.427-.29 4.028-.474 4.305.123 3.008 6.473 6.501 2.362 10.037.807 2.493-1.097 2.903-2.408 2.221-5.069-1.133-4.42-2.117-9.004-2.21-13.538-.198-9.63.344-19.274.232-28.908-.015-1.299-1.993-3.614-3.172-3.687-6.464-.399-8.665 2.192-8.272 8.568.47 7.635.775 15.28 1.099 23.884m-474.036-9.05c-.087-2.141-.58-4.358-.194-6.41 2.078-11.067-4.756-16.233-15.029-16.82-8.012-.459-16.217-.884-22.089 4.1-2.729-1.67-4.798-4.013-6.806-3.96-5.73.149-8.337 4.499-6.84 10.066.255.947.365 1.963.36 2.945-.05 8.277-.17 16.554-.216 24.83-.039 7.154-.008 14.306-.008 19.666 1.908-1.463 4.5-3.665 7.311-5.54 2.203-1.47 4.564-2.231 4.23-5.863-.766-8.359-1.19-16.76-1.435-25.153-.179-6.143 2.076-8.664 8.003-9.986 2.26-.505 4.498-1.285 6.784-1.469 9.11-.733 16.023-.978 15.07 12.487-.643 9.085-.718 18.224-.604 27.334.019 1.515 2.283 4.257 3.55 4.281 5.053.098 9.059-5.142 8.745-10.348-.388-6.445-.64-12.899-.832-20.16m874.268-21.074c-7.544 2.308-13.379 7.082-18.475 12.885-6.927 7.887-8.706 17.419-3.698 26.083 5.012 8.672 14.375 12.876 24.584 12.615 7.042-.18 14.07-1.79 21.052-3.053 4.905-.888 8.402-3.873 9.942-8.687.387-1.21.327-3.34-.417-3.939-.917-.736-2.937-.745-4.166-.265-1.277.499-2.184 1.952-3.245 2.996-6.164 6.066-14.505 6.914-21.775 5.622-8.923-1.586-15.518-7.82-17.303-17.741-.804-4.47.366-6.66 4.94-7 4.3-.319 8.623-.426 12.936-.448 8.126-.041 16.253-.008 24.377.104 3.827.052 3.971-1.595 2.877-4.708-4.827-13.733-16.813-19.515-31.629-14.464m-572.344 40.46c1.526 7.04 3.96 9.255 10.78 9.92.97.094 1.907.64 2.87.674 4.221.148 8.558.816 12.64.093 4.462-.79 8.69-2.905 13.06-4.457 5.267 5.761 6.2 5.999 11.9 1.633 1.02-.78 1.558-2.951 1.398-4.378-.559-5.011-2.096-9.966-2.198-14.964-.172-8.45.601-16.917.661-25.38.014-1.9-1.064-5.303-2-5.434-2.617-.367-5.832-.041-8.006 1.308-1.39.863-1.914 4.042-1.858 6.157.229 8.616.962 17.219 1.185 25.834.046 1.762-.898 3.906-2.076 5.283-5.55 6.492-14.383 8.32-23.005 5.479-3.392-1.118-5.025-2.997-4.865-6.494.49-10.67.839-21.349 1.55-32.004.302-4.521-1.748-6.74-6.034-5.578-6.202 1.68-7.16 3.096-6.585 9.626.072.825-.019 1.664-.005 2.495.167 9.78.339 19.56.588 30.188m289.986-23.252c-1.162-2.9-1.933-6.043-3.563-8.65-4.079-6.526-9.95-11.284-17.847-10.85-12.126.667-21.763 6.52-29.665 15.916-9.57 11.38-6.484 27.364 5.8 33.802 14.386 7.539 28.353 3.833 42.137-1.342 2.215-.832 3.433-4.653 4.777-7.264.377-.732-.121-2.608-.793-3.019-.956-.585-2.578-.677-3.666-.287-1.151.414-1.983 1.674-3 2.507-7.694 6.303-16.516 8.635-25.855 5.253-8-2.896-12.513-9.586-14.277-17.862-.741-3.478 1.467-5.527 4.678-5.675 7.293-.335 14.611-.108 21.907-.41 6.456-.265 12.896-.936 19.367-2.119m339.41-25.983c.218-3.948.818-7.924.533-11.836-.222-3.055-2.04-4.093-5.266-2.332-7.938 4.335-8.01 4.2-6.77 13.428.066.494.083.996.104 1.495.186 4.43 1.46 9.154-6.144 8.8-1.782-.083-3.772 4.308-5.667 6.64 1.99.51 4.045.846 5.948 1.579 1.72.662 4.648 1.703 4.687 2.67.34 8.526.795 17.136-.041 25.597-1.037 10.483 3.858 16.778 13.46 14.784 5.46-1.134 10.72-3.502 15.839-5.823 1.475-.67 2.483-2.999 3.063-4.777.355-1.086-.13-3.262-.927-3.705-1.006-.558-2.944-.245-4.07.404-1.837 1.058-3.14 3.2-5.038 3.952-2.303.912-5.295 1.689-7.4.919-1.353-.495-2.098-3.838-2.325-5.987-.61-5.752-.62-11.565-1.186-17.322-.818-8.335 1.386-10.668 9.55-9.625.825.105 1.66.168 2.49.18 7.56.119 12.801-6.381 11.255-13.553-4.746 4.073-10.931 4.625-16.61 4.674-6.374.055-7.906-3.381-5.486-10.162m-535.635 29.197c-.271 7.125-.745 14.25-.754 21.376-.009 6.539 4.58 11.799 9.84 10.665 6.58-1.418 12.967-3.87 19.28-6.285 1.378-.528 2.41-2.672 3.006-4.29.426-1.156.22-3.632-.34-3.844-1.304-.496-3.224-.425-4.472.226-2.03 1.06-3.595 2.977-5.579 4.162-5.343 3.191-9.219 1.1-9.553-5.018-.325-5.963-1.016-11.94-.841-17.889.284-9.695-.42-11.246 10.132-9.5 8.155 1.349 13.908-4.634 13.136-12.857-1.77.793-3.495 1.804-5.357 2.333-2.047.582-4.237.636-6.334 1.067-10.954 2.253-13.069-.122-10.4-10.611 1.203-4.73 2.662-10.092-2.055-14.16-2.46 1.121-4.606 2.02-6.679 3.063-3.48 1.752-5.308 3.995-3.832 8.392 1.028 3.06 1.078 6.568.92 9.844-.055 1.148-2.176 3.25-3.112 3.123-4.569-.616-6.042 2.912-8.106 5.512-1.822 2.296 0 3.925 1.955 3.437 7.083-1.765 9.263 1.448 8.974 7.837-.037.813.199 1.638.17 3.417m-27.643-42.894c-.117 9.564-.177 19.13-.366 28.693-.185 9.33-.445 18.658-.786 27.983-.151 4.145-.782 8.277-.835 12.42-.069 5.395 1.839 6.543 6.764 4.455 6.432-2.726 7.882-5.19 7.227-12.177-.726-7.745-2.777-15.243-1.746-23.314.82-6.428-1.023-13.156-1.198-19.764-.116-4.408.747-8.832.95-13.26.39-8.484.776-16.973.867-25.464.054-5.117 1.678-10.617-2.67-15.572-2.003 1.195-4.023 2.047-5.583 3.422-1.825 1.608-4.64 3.695-4.609 5.533.15 8.752 1.12 17.49 1.985 27.045m416.797 25.888c-3.796 3.198-7.95 6.063-11.316 9.664-7.523 8.047-7.405 22.739-.22 30.445 5.14 5.514 11.821 6.403 18.247 8.157 10.29 2.809 19.443-1.327 28.378-5.75 1.039-.513 1.6-2.014 2.342-3.087.179-.258.276-.633.268-.95-.045-1.655-.136-3.307-.211-4.96-1.607.445-3.504.485-4.777 1.397-12.447 8.912-21.642 9.125-32.122.536-9.417-7.72-9.078-21.741 1.023-28.327 4.154-2.709 8.94-3.984 14.192-2.365 7.203 2.222 13.192.41 16.417-4.674.642-1.013 1.165-2.697.743-3.612-.377-.82-2.098-1.291-3.28-1.42-2.465-.267-4.97-.129-7.45-.293-7.698-.512-15.299-.662-22.234 5.239m-286.298 14.815c-.19 9.867-.443 19.734-.488 29.601-.006 1.27.732 3.138 1.713 3.7 2.319 1.327 9.92-3.547 9.853-6.385-.17-7.286-.278-14.618-1.212-21.827-.812-6.269.037-12.306 4.372-13.65 5.06-1.567 11.086-3.077 15.84-1.69 4.591 1.342 6.766-.013 9.463-2.449 2.826-2.552 2.125-6.297-1.59-7.001-6.736-1.277-13.519-1.657-19.882 1.901-1.844 1.031-3.837 1.796-5.513 2.567-1.663-1.914-2.932-4.654-4.38-4.752-2.357-.161-5.332.842-7.104 2.415-1.513 1.343-2.292 4.166-2.34 6.357-.073 3.42.747 6.86 1.268 11.213m332.454 2.88c-.048.828-.226 1.674-.12 2.482.376 2.858 1.401 5.75 1.167 8.543-.452 5.377-1.834 10.673-2.365 16.049-.334 3.374 2.214 4.64 5.254 3.015 6.169-3.294 7.32-6.731 7.176-13.76-.242-11.85.404-23.72.601-35.582.017-1.006-.48-2.87-.834-2.894-2.283-.152-5.093-.681-6.777.399-2.487 1.594-5.666 4.293-5.89 6.763-.417 4.597 1.082 9.369 1.788 14.985m-894.894-13.154c.126-1.643.059-3.33.415-4.923.94-4.207-.89-6.264-4.835-4.77-2.568.971-4.923 2.677-7.114 4.386-.822.641-1.349 2.263-1.252 3.37.37 4.24 1.046 8.453 1.613 12.676.565 4.206 1.77 8.446 1.546 12.61-.287 5.327-1.744 10.588-2.656 15.884-.611 3.55 1.684 5.72 4.79 4.586 4.38-1.596 7.65-6.86 7.584-11.592-.144-10.456-.11-20.914-.09-32.227m909.53-38.553c-1.83-.436-4.48-1.858-5.35-1.136-3.523 2.923-6.63 6.396-9.575 9.929-.653.782-.341 2.772.173 3.915.19.426 2.527.468 3.382-.088 3.591-2.336 7.14-4.795 10.375-7.59.973-.842.879-2.917.996-5.03m37.564-474.002c-6.12 2.952-6.64 9.53-9.599 14.54 4.888-3.573 10.307-6.754 9.599-14.54M683.46 1341.57c2.49 3.88 11.995 4.903 16.425.554-5.347-.398-10.694-.796-16.425-.554M927.09 109.426l6.59 4.03.802-2.1c-2.379-.868-4.758-1.737-7.391-1.93M179.704 962.568l.856-.817c-.113-.118-.318-.345-.326-.339-.3.254-.583.53-.53 1.156m1001.776-638.09s.032-.027 0 0z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M736.976 44.011c-4.675-5.396-9.467-10.698-13.99-16.22-3.454-4.216-6.407-8.845-9.88-13.045-3.162-3.824-4.669-7.96-4.04-13.312C715.354 1 721.71 1 728.532 1c8.403 10.962 12.894 24.81 26.163 31.49-9.864-2.83-16.123-9.451-20.009-18.634-3.992-9.437-8.933-11.907-17.927-12.295-4.413-.191-6.671 2.658-4.406 6.308 5.372 8.655 11.713 16.704 17.55 25.076 2.502 3.589 4.724 7.372 7.073 11.066z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M736.99 44.007c-2.363-3.69-4.585-7.473-7.087-11.062-5.837-8.372-12.178-16.421-17.55-25.076-2.265-3.65-.007-6.499 4.406-6.308 8.994.388 13.935 2.858 17.927 12.295 3.886 9.183 10.145 15.805 20.067 18.964.366-.116.281.043.307.475.778.643 1.531.855 2.665 1.158 1.664.337 2.948.583 4.279 1.153.797.483 1.548.643 2.657.89 1.306.28 2.253.471 3.2.662 0 0 .119-.154.008.252.58.861 1.272 1.315 1.963 1.77 0 0 .163-.158.003.266 3.26 6.137 6.68 11.85 10.1 17.561.009.438.019.876-.025 2.01-.004 1.816.045 2.936-.134 4.188.225.669.677 1.206 1.243 2.116 1.036 3.345 1.957 6.315 2.666 9.565.324.823.86 1.367 1.523 2.256.313 1.052.5 1.76.47 2.742.255.874.728 1.473 1.327 2.408 2.86 4.064 5.596 7.792 8.308 11.858 5.224 7.487 11.302 13.65 19.596 17.3 1.173.516 2.542 1.395 3.055 2.47 4.59 9.62 15.21 14.758 18.636 25.376.63 1.95 4.605 4.432 6.384 3.997 2.267-.553 5.254-3.672 5.506-5.952.849-7.693 1.483-15.704-5.381-21.68-1.1-.958-1.969-2.284-2.648-3.593-.635-1.227-.877-2.657-1.292-3.998 1.492-.399 3.26-1.511 4.423-1.062 3.46 1.336 7.4 2.588 9.865 5.124 8.302 8.541 17.428 16.758 23.67 26.71 8.662 13.808 14.86 29.147 22.44 43.662 1.59 3.047 4.22 5.884 7.039 7.873 3.423 2.415 7.554 3.828 11.427 6.006.766.703 1.483 1.075 2.517 1.515 1.697 1.075 3.078 2.082 4.502 3.435 2.053 1.403 4.063 2.46 6.048 3.575-.025.06.062-.036-.006.294-.408 1.142-.747 1.954-1.47 2.763-1.016-.113-1.768-.039-2.263-.36-5.265-3.423-10.485-6.914-15.724-10.375-3.593-2.372-7.045-3.04-10.635.237-9.222 8.416-18.324 16.991-27.937 24.943-4.88 4.037-8.447 8.522-10.524 14.437-2.634 7.501-.33 15.325 7.028 17.97 10.89 3.914 22.022 8.725 33.99 3.511.946 4.29.793 4.607-2.944 5.671a4357.103 4357.103 0 0 1-18.578 5.246c-6.225 1.743-12.462 3.754-18.796.452-7.47-3.893-15.027-7.635-22.348-11.792-13.762-7.815-27.309-11.68-41.43-.568-3.564 2.804-8.237 4.168-12.285 6.403-1.79.989-4.769 2.728-4.615 3.725.307 1.988 2.062 4.19 3.83 5.434 5.505 3.872 11.726 6.814 16.892 11.062 13.37 10.993 7.18 25.883-.572 35.75-.277.351-.868.453-1.307.682-9.361 4.882-21.838 3.48-28.726-4.595-6.193-7.26-14.722-7.74-22.686-10.106-1.073-.32-3.004.572-3.79 1.522-.57.69-.137 2.48.268 3.633.367 1.044 1.301 1.888 1.867 3.154.48.884 1.079 1.435 1.775 2.158.097.173.27.531.172.89 1.278 1.748 2.653 3.136 4.047 4.566.02.04.09.101-.014.446.566.782 1.236 1.22 1.897 1.694-.007.037.067.028-.007.387 2.338 2.692 4.75 5.025 7.392 7.558.76.794 1.291 1.386 1.735 2.337.629.707 1.345 1.054 2.246 1.505.185.103.539.335.538.683.706.707 1.414 1.065 2.145 1.451.024.027.092.044.059.426 1.004.685 2.042.989 3.351 1.39.637.217 1.002.337 1.413.846 1.468.571 2.89.754 4.739.972 3.677.149 6.927.263 10.325.663 1.048.18 1.948.075 3.165-.006.733.085 1.15.145 1.693.576 2.517.693 4.91 1.016 7.303 1.336 1.772.236 4.17-.185 5.212.812 5.753 5.504 11.357 11.153 8.934 20.468-.601 2.31-1.78 5.89 2.776 7 .556.614.898 1.05 1.104 1.847 2.708 5.655 6.114 6.564 9.933 2.848 1.043-.431 1.796-.74 2.91-.966.283 1.682.741 3.595.026 4.824-2.193 3.77-5.073 7.141-7.246 10.92-3.103 5.394-5.405 11.394-12.643 12.647-.5.086-.821 1.21-1.495 1.937-.634.171-1 .258-1.732.197-1.62 2.082-2.874 4.313-4.239 6.765-.11.222-.36.65-.667.743-2.283.726-4.26 1.358-6.583 2.057-1.458.704-2.569 1.34-4.01 2.037-.544 3.445-3.872 3.851-6.147 5.742-3.107-.366-7.29 2.905-7.555-3.12.432-.444.678-.698 1.291-.871 2.863-1.454 5.58-2.736 7.747-4.643.921-.81 1.315-3.203.804-4.378-.499-1.146-2.597-2.496-3.752-2.305-5.544.918-10.459.112-14.92-3.482-.774-.624-2.227-.426-3.373-.566-10.878-1.335-21.758-2.662-32.882-4.02-2.14 3.6-8.212 5.867-12.037 5.356-5.954-.797-12.03-.679-18.399-1.007-1.037-.105-1.732-.153-2.568-.563-6.03-1.363-11.92-2.364-18.139-3.437-1-.077-1.673-.082-2.548-.388-7.687-2.818-15.582-4.518-22.565-8.032-12.162-6.12-23.762-13.357-35.596-20.13-9.553-5.47-19.103-10.945-28.785-16.586-.13-.169-.469-.426-.482-.763-6.783-4.417-14.024-7.894-20.208-12.724-8.37-6.538-17.552-11.418-27.256-15.238-4.501-1.772-8.54-6.192-14.569-4.047-1.453-.176-2.571-.303-3.787-.804-6.476-1.545-12.864-2.677-19.234-3.9-14.24-2.735-28.408-1.954-42.488 1.027-1.472.311-2.662 1.955-4.212 3.09-.375.198-.52.286-1.037.224-2.485.66-4.559 1.606-6.724 2.243-2.583.76-5.245 1.253-7.797 1.844 4.215-5.555 7.966-10.5 12.024-15.558 1.408-1.054 2.51-1.996 3.967-3.026 5.375-2.214 10.234-5.52 15.449-6.24 14.785-2.038 29.699-3.299 44.601-4.258 4.852-.312 9.882.98 14.728 2.018 7.914 1.695 15.886 3.34 23.571 5.819 9.533 3.074 18.934 6.66 28.133 10.626 6.476 2.791 12.445 6.733 18.774 9.891 8.7 4.341 18.168 7.474 26.153 12.84 12.836 8.625 25.415 17.899 36.839 28.289 12.881 11.716 26.692 21.808 41.874 30.114 1.644.9 4.194.143 6.324.154-.743-2.153-1.002-5.764-2.315-6.2-5.05-1.678-6.914-6.307-10.357-9.4-3.926-3.528-8.225-6.665-12.522-9.749-7.481-5.369-15.085-10.566-22.771-16.138-8.226-6.026-16.429-11.601-24.388-17.504-15.024-11.143-32.133-18.547-48.443-27.384-2.328-1.26-4.622-2.675-7.096-3.56-10.57-3.782-21.347-7.03-31.774-11.164-11.434-4.534-23.325-5.868-35.389-6.801-13.782-1.066-27.062 2.265-40.367 4.777-8.886 1.677-17.483 4.913-26.169 7.584-1.179.362-2.215 1.398-3.157 2.292-4.75 4.51-8.862 10.01-14.297 13.404-8.108 5.063-7.379 13.63-10.42 21.042-.042.7.006 1.104-.148 1.819-1.599 4.134-2.995 7.957-4.516 12.126l-3.029-.57c-2.362-7.758-4.499-14.774-6.58-22.2-.701-3.423-1.628-6.404-2.178-9.453-1-5.535-2.061-11.084-2.58-16.675-.951-10.22-3.146-20.68-1.892-30.671 2.085-16.613 4.707-33.467 14.14-48.107.704-1.092.93-2.48 1.496-3.675 2.521-5.327 4.697-10.868 7.737-15.884 3.396-5.605 7.59-10.727 11.76-16.12 2.184-2.27 4.045-4.48 5.906-6.69l-1.183-1.242c-4.584.371-7.947 2.89-10.907 6.776-1.55.864-2.792 1.633-3.94 2.523-6.522 5.054-10.555 12.054-15.302 18.625-6.858 9.492-11.27 20.063-13.583 31.047-2.741 13.017-4.188 26.553-4.12 39.853.08 15.32 2.174 30.657 3.966 45.92.446 3.799 3.097 7.34 4.883 11.328 3.238 4.915 7.414 9.139 9.097 14.193 1.542 4.628 4.122 8.147 6.545 12.1 12.475 20.36 30.488 35.865 46.207 53.372 1.238 1.378 3.31 2.007 4.983 3.042-.012.057.104.04.092.379 1.458 1.91 2.794 3.638 4.419 5.028a12219.758 12219.758 0 0 0 48.447 41.246c6.702 5.673 13.36 11.423 20.355 16.721 11.44 8.666 22.873 17.15 32.33 28.23 11.372 13.323 20.4 27.832 24.936 44.687 4.083 15.175 7.044 30.481 6.417 46.578-.815 20.922-7.261 39.335-19.835 55.738-7.455 9.724-15.187 19.252-23.113 28.597-8.451 9.964-17.147 19.73-26.005 29.335-3.667 3.977-8.032 7.31-12.394 10.995-1.373 1.115-2.433 2.17-3.79 3.09-.658.519-1.018 1.171-1.502 1.85-.124.025-.195.266-.495.14-.66.527-1.02 1.18-1.501 1.852-.12.02-.21.247-.535.14-9.497 7.625-17.46 16.593-27.81 23.183-9.666 6.155-17.946 14.495-26.78 21.939-3.716 3.13-7.288 6.43-11.01 9.662-.085.009-.134.173-.44.137-.742.576-1.178 1.189-1.673 1.79-.06-.01-.07.11-.39.088-.745.619-1.173 1.258-1.65 1.888-.05-.01-.046.09-.396.08-3.766 3.295-7.184 6.601-10.648 9.897-.046-.011-.013.078-.335.07-.73.654-1.137 1.318-1.603 1.973-.057-.008-.04.107-.36.071-.734.626-1.146 1.288-1.62 1.941-.063-.007-.047.118-.388.083-2.028 1.747-3.844 3.425-5.383 5.327-9.568 11.826-14.09 26.186-19.636 39.981-1.536 3.82-1.435 8.297-2.17 12.727-.067.61-.047.966-.313 1.54-.788 6.1-2.768 12.368-1.362 17.751 1.296 4.957.923 8.31-2.6 12.282 1.668.329 2.714.535 4.12.806 1.09.055 1.821.045 2.691.232.703.06 1.266-.075 2.256-.153 2.15.041 3.873.025 5.797.309 3.022 1.665 5.844 3.03 8.963 4.537-1.333 2.798-2.43 4.819-3.238 6.949-.295.777.097 1.814.176 2.732.985-.25 1.97-.5 3.277-.73.74-.08 1.157-.184 1.87-.089 4.275-1.1 8.221-2.527 12.255-3.636 1.911-.526 3.99-.443 5.993-.635 0 1.985.22 4.002-.054 5.948-.355 2.514-1.106 4.973-1.686 7.455l1.088 1.094c2.195-1.093 4.622-1.88 6.54-3.336 5.264-3.995 10.314-8.27 15.5-12.414.05.021-.015-.068.333-.086 4.406-2.21 6.997-7.913 13.339-5.363.252 3.318.403 6.63.809 9.91.142 1.152.91 2.227 1.392 3.338 1.165-.769 2.683-1.29 3.427-2.352 2.068-2.958 3.838-6.127 5.683-9.237 3.428-5.776 6.802-11.584 10.242-17.353 2.534-4.248 4.789-8.735 7.859-12.561 1.49-1.858 4.76-3.59 6.86-3.234 1.603.271 3.264 3.78 3.771 6.095.735 3.355.515 6.931.583 10.416.066 3.397 2.186 3.931 4.123 2.153 1.892-1.737 2.82-4.522 4.298-7.07.18-.386.232-.549.624-.737 2.696-3.76 5.544-7.278 7.311-11.274 4.458-10.08 7.723-20.746 12.823-30.466 3.864-7.362 9.69-13.731 14.958-20.29.984-1.226 4.766-2.095 5.022-1.696 1.232 1.922 2.814 4.686 2.24 6.511-2.184 6.933-2.895 13.809-1.025 20.796.494 1.843 2.169 3.37 3.301 5.043 1.31-1.31 3.272-2.394 3.82-3.97 2.326-6.697 3.625-13.804 6.434-20.268 4.538-10.442 9.931-20.515 15.046-30.702 1.66-3.303 3.58-6.476 5.501-9.921.122-.213.262-.683.605-.701 4.114-3.433 7.885-6.847 12.032-10.236 1 .39 1.622.755 2.12 1.54-.537 2.505-.704 4.675-1.406 6.656-3.18 8.971-5.45 18.095-4.583 27.688.141 1.565 1.254 3.544 2.531 4.318.772.468 3.358-.618 4.046-1.697 3.795-5.946 8.425-11.72 10.589-18.272 4.5-13.626 7.248-27.823 11.475-41.551 2.5-8.12 6.219-15.907 9.94-23.576.76-1.565 3.982-1.935 6.069-2.856.847 2.085 2.45 4.202 2.366 6.248-.133 3.228-1.696 6.376-2.053 9.624-.16 1.453 1.14 3.066 1.776 4.606 1.258-.976 2.639-1.833 3.737-2.964.909-.936 1.423-2.242 2.217-3.307 9.135-12.257 10.76-27.135 14.529-41.644.081-1.068.08-1.786.321-2.772 1.454-4.028 2.91-7.73 3.83-11.56 2.523-10.51 5.037-20.934 13.64-28.58 1.206-1.072 1.539-3.128 2.331-4.724.055.005.046-.105.357-.096.804-.596 1.297-1.2 2.147-1.89 5.151-2.263 9.457-6.62 15.903-3.443a2196.377 2196.377 0 0 0-3.814 14.08c-.083 1.094-.101 1.826-.348 2.769-.58 1.562-.93 2.913-1.28 4.264l1.129.99c1.899-1.3 4.387-2.199 5.595-3.97 5.27-7.722 10.918-15.327 15.04-23.66 7.622-15.41 14.272-31.3 21.378-46.973.05.017-.013-.07.32-.102 2.632-2.407 4.574-5.381 7.314-7.012 3.872-2.304 7.664-6.323 12.974-3.195-.09.468-.05.73-.198 1.215-.848 4.481-1.597 8.714-1.925 12.979-.123 1.6.73 3.274 1.138 4.914 1.45-.94 3.278-1.588 4.278-2.877 2.92-3.76 5.409-7.85 8.248-11.677 4.74-6.391 9.48-12.792 14.479-18.98 5.782-7.157 11.654-14.261 17.852-21.055 3.918-4.294 9.176-4.44 14.928-3.063-1.574 3.601-2.801 6.969-4.478 10.095-1.82 3.393-2.39 6.665-.624 10.896 2.146-1.213 4.011-2.147 5.753-3.272 13.704-8.843 19.894-23.935 29.865-35.914.046.01.036-.083.359-.069.743-.64 1.162-1.295 1.63-1.939.049.01.037-.089.378-.065 5.56-4.367 9.008-10.993 16.46-12.568 5.017-1.061 10-2.284 14.998-3.435l1.16 1.968c-2.698 3.492-5.7 6.8-7.981 10.545-1.418 2.327-3.132 5.97-2.244 7.863 1.404 2.993 4.688 1.732 7.14-.175.87-.677 2.1-.889 2.979-1.557 7.76-5.9 15.503-11.821 23.197-17.807 5.059-3.936 10.027-7.989 15.35-11.995.713-.115 1.113-.225 1.879-.158 3.488-.825 6.545-2.209 9.746-2.755 9.743-1.661 19.523-5.986 29.473-.184-.315 1.198-.64 2.438-1.045 3.676-.08 0-.119.156-.473.111-3.527 2.029-7.008 3.768-9.762 6.298-1.687 1.55-2.259 4.314-3.331 6.532 2.445.44 4.994 1.557 7.319 1.203 9.735-1.48 16.907-7.676 24.413-13.486 4.158-3.22 9.242-6.24 14.29-7.094 8.944-1.512 18.198-1.874 27.284-1.57 4.384.148 9.329 1.643 12.739 6.171-2.242 1.86-4.312 3.464-6.253 5.212-3.306 2.975-3.11 4.742.784 6.548 3.58 1.66 7.341 2.947 10.857 4.726 5.46 2.762 9.649.75 13.586-3.052.065.013.056-.12.452-.07 1.62-.442 2.813-1.25 4.072-1.368 4.36-.41 8.952-1.502 13.056-.571 3.795.86 7.165 3.854 10.565 6.143 5.457 3.675 10.785 7.543 16.181 11.652 2.952 2.645 5.891 4.968 8.968 7.595.694 1.2 1.25 2.095 1.833 3.388.416 1.575.804 2.75 1.39 4.53-2.923 0-5.36-.218-7.729.09-1.184.156-2.911 1.077-3.181 2.004-.302 1.036.405 3.022 1.316 3.626 2.343 1.553 5.04 2.571 7.611 3.834.016.03.084.036-.001.397 5.198 4.757 7.501 4.954 12.022 1.304.79-.073 1.245-.085 1.703.19.63.268 1.257.247 2.3.307 3.417.458 6.419.837 9.628 1.493 1.522.956 2.836 1.635 4.397 2.559 2.72 2.576 5.193 4.907 7.613 7.585 2.569 3.066 5.19 5.785 8.041 8.672.494.44.758.713.969 1.367.069 1.137.191 1.893.189 2.884-.411.442-.696.649-1.393.763-2.417.785-5.56 1.203-6.147 2.655-.8 1.975.065 4.97 3.922 4.946 1.072 1.143 1.862 2.133 2.58 3.48 1.044.962 2.16 1.566 3.57 2.287.589.417.883.716 1.231 1.335 3.579 2.313 7.104 4.306 10.712 6.323.083.023.144.183.07.507.665 1.676 1.403 3.028 2.307 4.693 1.724 3.01 3.563 5.595 4.729 8.453.624 1.53.663 4.815-.013 5.117-4.768 2.131-2.342 4.936-2.03 8.417 1.277 14.195 1.71 28.473 2.184 42.729.111 3.36-.826 6.754-1.326 10.48.106.76.256 1.173.268 1.978-.181 1.783-.223 3.174-.664 4.572-.995 1.94-1.592 3.872-2.47 6.054-.554 1.864-.828 3.478-1.137 5.423-.117.99-.2 1.65-.592 2.527-1.496 3.861-2.82 7.468-3.837 11.16-1.28 4.656-2.015 9.478-3.517 14.054-2.285 6.964-5.026 13.778-7.59 20.638-.017-.018.019.014-.336-.007-7.994 6.061-11.699 14.66-15.35 23.518-.048.191-.287.505-.634.518-9.06 9.112-17.732 18.251-26.508 27.288-2.888 2.974-6.048 5.684-9.206 8.676-.322.517-.522.874-1.098 1.267-.662 1.095-.947 2.154-1.326 3.49-.441.739-.788 1.2-1.54 1.513-1.885.547-3.366 1.24-5.108 2.086-.639.29-1.017.426-1.697.344-.797.421-1.29 1.062-2.045 1.913-2.076 1.468-3.892 2.726-6.024 3.834-.892.437-1.468 1.025-2.349 1.766-5.583 3.478-10.731 7.038-16.172 10.073a796.687 796.687 0 0 1-28.247 15.018c-8.51 4.308-16.995 8.804-25.876 12.211-10.474 4.018-20.704 8.305-29.578 15.248-3.168 2.479-5.892 5.524-8.856 8.276-.038-.035.012.054-.32.024-.793.63-1.257 1.29-1.733 1.938-.014-.012.009.015-.339-.004-5.778 7.898-11.21 15.816-16.633 23.739-.088.128-.065.327-.125.48-3.46 8.771-3.245 17.917-1.895 26.924.812 5.415 1.935 11.536 5.089 15.693 6.957 9.17 14.862 17.74 23.154 25.753 13.707 13.246 29.183 24.191 46.598 32.168 4.597 2.106 9.371 3.828 14.162 6.022 1.683 1.39 3.268 2.483 4.871 3.932-1.286 5.875 1.031 7.956 6.645 6.324-.38-1.39-.76-2.778-.808-4.062.732.344 1.132.582 1.603 1.15 2.609 2.178 5.145 4.027 7.724 6.215.762.71 1.481 1.083 2.522 1.478 1.005.45 1.688.879 2.383 1.658.486 1.796 1.265 3.216 1.38 4.689.416 5.32 5.85 8.462 10.7 5.976.212.054.626-.093.756.223 1.023 1.207 1.917 2.098 2.81 2.99 0 0 .318-.28.15.184.412 1.028.993 1.59 1.574 2.153 0 0 .051.328.153.79 2.559 4.81 5.017 9.157 7.586 13.87 1.506 4.349 3.069 8.282 4.253 12.327 1.76 6.006 3.986 12.009 4.667 18.163.844 7.62 1.131 15.494.186 23.074-1.51 12.1-2.527 24.711-6.868 35.897-5.618 14.478-14.25 27.794-21.693 41.551-1.836 3.395-4.094 6.562-6.159 9.833 0 0-.243.414-.653.65-.788.927-1.165 1.618-1.542 2.31 0 0-.102.006-.422.052-.741.68-1.161 1.315-1.581 1.949 0 0-.103.001-.435.05-3.572 4.225-6.811 8.403-10.051 12.58-.425.35-.85.701-1.788 1.244-6.715 6.305-12.386 13.11-19.25 18.358-8.619 6.589-18.103 12.084-27.43 17.693-5.341 3.213-11.048 5.85-16.712 8.485-2.935 1.365-6.246 1.916-9.192 3.261-9.469 4.325-16.329 13.19-27.22 15.248-4.746.897-9.117 3.873-13.864 4.647-5.106.831-10.453.188-15.695.188 6.656-5.254 11.394-10.998 14.53-18.013.661-1.477.302-3.41.413-5.133-2.083.475-4.725.307-6.146 1.543-4.673 4.063-8.973 8.568-13.26 13.053-1.269 1.327-2.02 3.148-3.01 4.743 0 0-.076-.058-.43-.068-2.682 1.458-4.873 3.237-7.366 4.334-8.724 3.844-17.36 8.07-26.421 10.894-4.668 1.454-10.164.255-15.285.255l-.197-1.747c3.317-1.684 6.794-3.13 9.865-5.184 1.062-.71 1.113-2.932 1.625-4.462-1.735-.241-3.593-.98-5.175-.592-1.822.447-3.405 1.881-5.084 2.9-8.876 5.384-18.936 5.758-28.822 6.493-5.933.442-11.102-2.007-15.848-6.43 4.085-1.57 8.226-2.507 8.39-8.741-17.56 3.994-34.482 3.898-50.487-5.032 2.122-.724 4.317-.83 6.45-1.247 6.407-1.253 13.057-1.986 17.75-7.383l2.965-1.058c3.78-1.937 7.11-3.443 10.06-5.497 1.027-.716 1.11-2.785 1.624-4.236-1.503-.145-3.008-.396-4.51-.381-.573.005-1.12.662-1.713.95-14.915 7.202-30.086 11.106-46.19 3.699-.994-.457-2.255-.33-3.391-.475 0 0 0-.078-.09-.49-.124-1.245-.16-2.078.195-2.878 2.418-.59 4.488-1.101 6.465-1.86 4.458-1.709 9.041-3.227 13.198-5.508 1.298-.712 1.393-3.617 2.038-5.519-1.746-.488-3.898-1.888-5.175-1.32-10.71 4.756-20.772 1.444-30.723-2.236-2.319-.857-4.055-3.289-6.629-5.48 5.798-1.103 10.411-1.6 14.743-2.978 1.938-.616 3.313-3.003 4.944-4.586-1.937-1.046-3.864-2.967-5.812-2.988-8.363-.088-16.731.382-25.278.606-.18-.042-.55-.054-.66-.372-1.478-1.332-2.846-2.347-4.488-3.46-.757-.408-1.24-.716-1.766-1.392-3.221-5.755-2.965-6.164 2.694-8.524 1.584-.66 2.677-2.499 3.995-3.797-.892-.726-1.783-1.452-2.994-2.233-.75-.051-1.182-.046-1.837-.322-3.767-1.296-7.312-2.313-11.18-3.413-.767-.114-1.21-.145-1.846-.497-3.02-1.22-5.848-2.12-8.89-3.086 1.333-2.306 2.297-3.974 3.197-5.703-.063-.061.069.056.396-.012 3.516-2.563 2.306-4.595-.557-6.008-2.035-1.003-4.455-1.215-6.509-2.19-5.227-2.484-10.345-5.197-15.512-8.193-.116-1.113-.227-1.852-.208-3.001-.635-2.48-.874-5.772-2.27-6.372-3.188-1.368-6.941-1.418-10.857-2.072-1.456-.079-2.518-.09-3.763-.401-1.74-.698-3.299-1.095-5.171-1.58-.747-.137-1.18-.187-1.757-.545-1.88-2.352-3.617-4.396-5.166-6.22 2.429-1.506 3.937-2.44 5.861-3.4 2.053-.22 3.691-.417 5.725-.507 4.325-.488 8.249-1.12 12.184-1.668a785.481 785.481 0 0 1 15.897-2.032c1.449-.086 2.5-.192 3.937-.213 4.204-.534 8.027-1.67 11.841-1.642 4.985.036 9.963.993 15.266 1.647.77.114 1.215.137 1.892.478 8.42 2.686 16.61 5.054 25.057 7.633 1.056.55 1.852.888 2.863 1.502 5.742 2.75 11.268 5.223 16.985 7.76.19.064.59.101.69.43 3.45 2.016 6.8 3.702 10.429 5.581 1.987 1.505 3.695 2.819 5.51 4.437.794.715 1.48 1.125 2.388 1.675.648.436 1.077.73 1.617 1.354 3.473 2.354 6.835 4.38 10.326 6.694 1.277 1.177 2.425 2.068 3.672 3.285 3.831 3.337 7.563 6.347 11.539 9.589 2.125 1.644 3.99 3.08 5.943 4.383.086.058 1.523-1.45 1.41-1.621-1.195-1.813-2.568-3.51-3.917-5.217-.198-.25-.532-.39-.836-.93-1.988-2.489-3.942-4.63-5.934-6.734-.037.037.046-.026-.026-.356-3.68-4.147-7.29-7.964-10.961-12.065-.629-.752-1.197-1.22-1.9-1.915-.436-.39-.737-.552-1.03-.733.008-.017.016-.054-.034-.39-2.699-2.489-5.218-4.825-8.018-6.754-7.276-5.01-14.333-10.512-22.147-14.506-5.036-2.574-11.257-2.832-17.206-4.22-.622-.15-.983-.208-1.479-.588-5.009-6.8-12.601-5.747-19.601-7.295-.758-.086-1.195-.104-1.941-.395-8.588-.734-16.867-1.584-25.142-1.538-7.2.04-14.395 1.093-21.917 1.675-.752.034-1.181.092-2.028.117-3.535 1.243-6.653 2.52-9.768 3.833.003.037.077.034-.33.017-3.576.71-6.788 1.288-9.904 2.196-6.757 1.968-13.893 3.253-20.097 6.366-10.173 5.105-19.832 11.274-29.474 17.365-2.766 1.747-4.727 4.767-7.415 7.208-6.87 3.36-11.741 8.257-14.879 15.166-2.478 1.757-4.624 3.444-6.771 5.131l-1.461-.983c1.244-2.41 2.193-5.04 3.783-7.194 7.166-9.71 14.122-19.616 21.903-28.817 8.324-9.845 18.127-18.032 29.93-23.824 6.99-3.43 13.332-8.176 20.38-12.323 8.173-2.51 15.956-4.963 23.678-7.592 1.709-.582 3.207-1.783 5.098-2.75.688-.14 1.079-.23 1.864-.166 12.167-2.658 24.073-4.216 36.206-3.73.96.038 1.934-.251 3.197-.343.691.082 1.088.118 1.629.508 5.324 1.413 10.511 2.444 15.683 3.545 2.653.564 5.28 1.253 8.22 2.127a82.308 82.308 0 0 0 5.333 2.353c7.864 3.115 15.948 5.767 23.556 9.414 12.948 6.207 25.565 13.1 38.384 19.58 8.84 4.468 17.74 8.822 26.692 13.059 15.47 7.32 31.382 13.532 48.492 15.517 6.773.786 13.967 1.97 20.768-2.028 1.866-.584 3.342-1.345 4.902-1.837 14.987-4.728 28.032-12.854 38.958-23.928 5.118-5.186 12.01-9.926 11.394-18.94-.084-1.23 1.245-2.558 1.919-3.84l1.233.357c.446 6.863.648 13.753 1.405 20.582.757 6.827-3.093 13.817.979 20.779 1.696-1.705 3.26-3.501 3.664-5.528 1.031-5.179 1.205-10.535 2.326-15.688 4.368-20.072-4.139-36.037-16.545-50.317-9.35-10.763-20.835-19.027-33.756-25.476-11.685-5.832-22.71-12.97-34.179-19.257-5.7-3.125-11.741-5.63-17.945-8.518-1.394-.825-2.471-1.547-3.674-2.59-3.19-1.948-6.253-3.576-9.51-5.213-.192-.01-.44-.303-.439-.656-3.038-3.051-5.755-6.328-9.22-8.265-2.79-1.56-3.525-6.463-7.934-5.171.121-.122-.121.121-.07-.227-4.171-5.98-9.375-10.332-16.355-12.817-.703-.694-1.131-1.3-1.506-2.271-1.991-4.46-4.033-8.559-9.046-9.734.063-.067-.039.088-.001-.269-.668-.786-1.374-1.215-2.008-1.723.071-.08-.05.097-.018-.258-.66-.796-1.352-1.237-1.967-1.744.077-.067-.057.086-.004-.277-2.663-5.78-5.2-11.299-8.153-16.584-2.35-4.208-5.21-8.13-7.969-12.3-.126-.12-.11-.468.037-.876.115-1.066.177-1.745.038-2.38-1.928-8.84-4.937-17.603-5.546-26.53-.65-9.548.583-19.294 1.71-28.869.75-6.378 2.738-12.612 4.209-18.902.385-1.646.908-3.259 1.317-5.135.051-.566.153-.882.613-1.262 4.156-5.403 7.954-10.74 11.78-16.02.03.06-.054-.042.3.008 7.326-7.02 14.394-14 21.213-21.216 2.163-2.29 3.66-5.207 5.504-7.793.043.044-.058-.025.292 0 .802-.65 1.254-1.326 1.729-1.972.022.029-.036-.016.331.017 2.879-1.474 5.636-2.69 7.837-4.561 2.545-2.163 4.6-4.901 6.962-7.543.093-.153.448-.198.805-.101.913-.576 1.47-1.248 2.158-2.034.13-.113.474-.085.848.046 9.787-4.77 19.16-9.748 28.63-14.54 4.63-2.343 9.566-4.098 14.111-6.582 2.684-1.466 4.872-3.837 7.388-5.935.105-.133.443-.122.807-.002.938-.54 1.514-1.201 2.184-2 .095-.138.43-.16.817 0 1.998-.47 3.778-.844 5.193-1.774 6.357-4.174 13.639-7.2 18.118-14.213.516-.34.84-.492 1.505-.638 4.17-3.5 8.284-6.75 11.727-10.6 2.266-2.534 3.564-5.935 5.298-9.121.002-.174.259-.408.622-.412 3.486-5.708 6.9-11.279 9.605-17.175 1.273-2.775 1.185-6.174 1.68-9.56.106-.593.245-.917.798-1.285.654-2.87.894-5.697 1.078-8.829.068-.904.192-1.503.72-2.178 2.198-3.572 3.476-7.02-.613-10.317-.084-1.25-.06-2.17.138-3.467-.5-1.289-1.174-2.201-1.971-3.232-.124-.118-.106-.46.036-.872.35-5.021-1.686-8.189-5.877-9.972.084-.054-.066.079-.011-.275-.875-2.067-3.256-4.04.868-4.84 11.568-2.246 23.11-4.694 35.013-4.105 3.487.172 7.024-.048 10.456.461 8.749 1.297 17.45 2.903 26.437 4.342.61.04.956.125 1.56.491 2.883.714 5.508 1.146 8.404 1.53.625.026.98.1 1.571.462 5.15 2.071 10.016 4.002 14.99 5.597 4.9 1.572 9.91 2.804 14.845 4.22-.026.033.007-.045.019.32 3.676 2.126 7.339 3.888 10.974 5.68-.029.03.012-.041.012.322 4.002 2.796 8.003 5.228 11.977 7.683-.026.022.014-.034-.007.315 4.256 5.508 8.417 10.77 12.897 15.745.999 1.109 3.12 1.207 4.724 1.771.41-1.452 1.367-2.996 1.143-4.343-1.36-8.164-8.068-12.963-12.545-19.17-.3-.414-1.555-.139-2.32-.243.046-.059-.022.073-.01-.277-5.914-5.491-11.216-11.755-17.925-15.49-8.375-4.663-17.755-7.745-26.99-10.564-7.25-2.214-14.94-2.992-22.69-4.342-.592-.01-.93-.084-1.446-.508a201.502 201.502 0 0 0-15.262-3.785c-3.331-.69-6.707-1.343-10.089-1.523-1.48-.078-3.026 1.066-4.933 1.746-1.448-.014-2.506-.118-3.662-.615-4.742-.733-9.447-1.713-14.012-1.265-6.604.65-13.147 2.153-19.64 3.623-6.668 1.51-13.423 2.932-19.822 5.266-9.865 3.597-19.576 7.685-29.114 12.081-4.077 1.88-7.555 5.06-11.398 7.793-.094.145-.438.175-.836.025-4.929 1.905-9.665 3.608-13.935 6.108-4.924 2.883-9.435 6.468-14.261 9.864-.137.115-.493.093-.847-.015-.916.545-1.477 1.197-2.164 1.978-.125.128-.485.127-.858 0a594.12 594.12 0 0 0-24.127 14.728c-.915.588-1.206 2.145-1.837 3.192-.05-.06.072.04-.294-.014-1.432 1.02-2.497 2.091-3.66 3.059-.096-.104.112.09-.244.03-.838.603-1.32 1.267-1.83 1.892-.027-.04.046.024-.334-.048-2.09 1.358-3.801 2.788-5.595 4.12-.084-.096.103.078-.256.028-.773.671-1.189 1.393-1.725 1.987-.122-.128.124.126-.234.062-.78.65-1.202 1.364-1.753 1.943-.13-.135.124.14-.233.078-.766.657-1.175 1.376-1.692 1.955-.108-.14.08.16-.275.077-.805.614-1.255 1.31-1.81 1.877-.104-.128.114.12-.244.054-.792.644-1.227 1.355-1.755 1.942-.093-.125.107.114-.247.046-1.813 1.983-3.271 4.034-4.77 6.294-.04.209-.386.457-.723.452-1.988 2.065-3.638 4.137-5.34 6.164-.052-.045.067.021-.286.01-.794.68-1.234 1.372-1.715 2.283-.04.22-.378.512-.697.475-.698.638-1.077 1.314-1.443 2.035.013.045-.078.018-.442-.02-5.056 2.216-5.567 6.77-6.62 11.37-.726.757-1.321 1.243-2.234 1.634-.748-.002-1.18.092-1.993.18-1.295-.304-2.191-.772-3.123-.857-1.282-.115-2.59.06-3.888.11.51 1.283.902 2.633 1.576 3.823.377.666 1.222 1.066 1.793 1.864-.303.565-.543.852-1.135 1.115-2.889 2.522-5.85 4.771-7.884 7.672-6.708 9.567-13.539 19.101-19.445 29.164-5.142 8.761-9.08 18.229-13.58 27.37-3.747 7.609-7.569 15.182-11.302 22.799-2.488 5.075-4.88 10.197-7.317 15.479 0 .181-.223.468-.577.508-.797 1.019-1.24 1.997-1.712 2.949-.028-.026.036.012-.318.01-.83.425-1.415.777-1.764 1.29-10.523 15.425-21.051 30.846-31.504 46.318-2.28 3.373-4.277 6.935-6.548 10.637-.439.672-.734 1.117-1.378 1.534-.732.71-1.116 1.448-1.727 2.405-1.473 2.008-2.72 3.797-4.313 5.559-.707.73-1.066 1.49-1.628 2.426-.66.723-1.115 1.27-1.927 1.807-6.476 8.367-12.597 16.745-18.754 25.12-.036-.006-.015.063-.351.067-5.479 5.962-10.569 11.964-15.778 17.862-4.508 5.105-9.151 10.091-13.777 15.14-.042.011-.061.096-.39.07-.78.603-1.231 1.232-1.724 1.843-.04-.018-.005.064-.363.037-5.133 3.954-9.908 7.935-14.957 12.052-1.082.751-1.889 1.366-3.03 1.9-1.45.647-2.565 1.374-3.97 2.147-.36.39-.43.736-.662 1.348-1.151.989-2.14 1.712-3.478 2.353-1.88 1.199-3.412 2.48-5.125 3.83-.181.07-.511.275-.836.173-.915.456-1.506 1.014-2.341 1.693-.573.28-.9.437-1.556.464-.923.433-1.518.997-2.286 1.647-.172.086-.477.32-.803.222-.935.419-1.544.937-2.457 1.636-3.566 2.351-6.828 4.521-10.442 6.533-3.842 1.555-7.333 3.269-11.159 5.022-1.707.767-3.078 1.495-4.834 2.137-4.36 1.546-8.338 3.179-12.65 4.932-1.213.474-2.09.828-3.363 1.054-1.74.099-3.084.327-4.786.328-1.54.35-2.722.926-3.839 1.554.066.051.016.209-.375.055-1.765.048-3.14.25-4.806.285-.889.315-1.486.796-2.5 1.395-2.649.397-4.88.676-7.516.713-2.578.318-4.754.878-7.14 1.536-.209.1-.654.228-1.056.075-1.836-.065-3.269.021-5.067.03-3.503-.08-6.64-.02-9.776-.094-29.18-.687-58.36-1.39-87.539-2.125-1.307-.033-2.598-.515-3.91-.607-5.246-.368-10.497-.664-16.133-1.02-1.407-.175-2.429-.316-3.527-.82-1.433-.576-2.79-.788-4.52-1.043-1.617-.087-2.862-.13-4.458-.295-1.066.91-1.78 1.944-2.495 2.977 1.958.726 3.917 1.452 6.243 2.248 1.337.307 2.307.543 3.352 1.1.832.436 1.59.552 2.724.77 1.687.16 2.996.217 4.431.639 1.73 1.145 3.263 2.359 4.949 2.631 6.05.979 12.152 1.64 18.235 2.42 4.572.584 9.145 1.164 14.088 1.811 1.12.064 1.87.062 2.846.363 1.623.766 2.99 1.471 4.422 1.651 6.232.78 12.508 1.228 18.72 2.126 20 2.89 39.961 3.37 60.297-.324 4.14-.31 7.984-.307 11.615-1.187 6.832-1.655 13.595-3.652 20.289-5.808 10.143-3.267 20.376-6.366 30.233-10.37 5.675-2.305 10.683-6.25 16.03-9.427.037.03.013-.063.376.01 2.34-.765 4.319-1.601 6.59-2.112.51.524.725.721.837 1.258-5.3 4.12-10.558 7.825-15.675 11.713-3.046 2.314-5.873 4.917-8.837 7.368-.038-.022-.016.062-.376.023-2.765 1.976-5.17 3.99-7.61 5.987-.035-.018-.026.06-.385.001-2.772 1.962-5.184 3.983-7.637 5.985-.041-.019-.007.064-.349.011-1.427.972-2.513 1.997-3.642 3.006-.043-.016-.002.067-.337.013-.8.603-1.268 1.26-1.774 1.888-.04-.03.027.043-.315.005-2.17 1.263-3.996 2.565-6.123 3.917-.76.666-1.22 1.281-2.04 1.962-3.958 1.768-7.475 3.672-11.168 5.13-8.143 3.218-16.193 6.919-24.625 9.084-7.462 1.916-15.47 1.592-23.092 3.03-10.123 1.91-20.205 3.482-30.541 2.915-2.654-.146-5.33.149-7.988.036-14.58-.619-29.164-1.196-43.733-2.022-4.764-.27-9.473-1.642-14.233-1.814-8.231-.298-16.149-1.367-23.546-5.336-3.915-2.1-8.047-3.827-12.172-5.497-13.653-5.53-27.34-10.977-41.029-16.42-10.408-4.138-19.927-9.702-27.874-17.669-3.606-3.614-8.188-5.703-12.636-4.036-8.794 3.295-17.417.238-26.08.699-2.16.114-4.33-.003-6.493.04-4.068.081-7.465 1.401-9.841 5.175-1.453-.544-2.551-1.479-3.544-1.378-4.228.427-8.822.287-12.546 1.976-6.542 2.968-7 4.815-2.26 9.8 5.061 5.322 11.124 9.693 16.78 14.824.801.626 1.573.908 2.533 1.255.188.066.523.283.54.636 2.06 1.381 4.105 2.41 6.118 3.513-.032.072.074-.045.088.301 1.71 1.375 3.405 2.403 5.37 3.5.616.201.962.336 1.325.81.779.632 1.542.924 2.324 1.24.02.023.08.033.077.38 5.227 3.516 10.398 6.792 15.726 9.79 1.564.881 3.569.978 5.69 1.58 3.269 2.037 6.22 3.928 9.205 6.144 1.64 1.764 3.244 3.202 4.871 5.085-.424 6.845-.87 13.244-1.388 19.916-.237.611-.4.95-.9 1.31-.783.966-1.23 1.911-1.865 3.08-.723.782-1.26 1.338-2.168 1.86-2.078.741-3.786 1.517-5.771 2.352-.657.102-1.034.145-1.855.039-7.584 1.21-14.726 2.57-22.295 3.96-2.69.123-4.953.213-7.56.122-1.255.406-2.164.993-3.292 1.741-.636.504-1.056.845-1.835 1.124-1.545 1.216-2.73 2.493-4.104 4.027-.617 1.147-1.046 2.039-1.474 2.93 0 0-.17-.004-.467.04-.697.689-1.096 1.333-1.494 1.977 0 0-.185-.016-.512.038-2.718 4.355-5.109 8.656-7.5 12.957 0 0-.183-.006-.497.043-2.361 2.69-4.409 5.333-6.456 7.975 0 0-.2-.023-.51.022-.718.683-1.127 1.322-1.535 1.961 0 0-.179-.018-.51.04-1.99 1.956-3.586 3.912-5.32 5.738-2.016 2.124-4.153 4.135-6.237 6.196 0 0-.141-.02-.482.033-2.11 1.51-3.879 2.968-5.647 4.425-.475.073-.95.146-2.079-.253.172-2.129.94-3.819 1.838-5.437 1.144-2.065 2.392-4.073 3.595-6.106.392-.42.783-.841 1.43-1.747a7.889 7.889 0 0 0 .216-2.23c.25-.364.498-.726 1.183-1.468 1.376-4.143 1.913-8.07 3.345-11.64 2.815-7.017 2.927-14.182 1.992-21.444-.554-4.303-3.39-6.454-7.689-6.691-.741-.072-1.483-.143-2.93-.268-4.802.412-8.92 1.401-12.993 1.24-9.24-.366-18.451-1.387-27.687-1.912-1.467-.083-3.755.589-4.38 1.66-3.6 6.169-6.813 12.563-10.157 18.88-.25.348-.5.696-1.177 1.397-1.268 2.43-2.109 4.506-2.95 6.582-.127.171-.254.342-.793.821-2.703 3.698-5.705 6.824-7.073 10.551-1.278 3.48-.821 7.599-1.128 11.436l-2.205.1c-.647-3.712-1.294-7.424-1.835-11.442.041-.725-.025-1.145 0-1.983-.293-11.05-1.673-21.777-.652-32.272.54-5.547-1.037-7.422-5.133-9.153 0 0 .021-.118-.004-.424-2.42-3.856-4.989-3.257-6.65.027-1.63 3.223-2.434 6.865-3.601 10.324-.118.417-.235.833-.635 1.744-.634 1.75-.985 3.007-1.337 4.264-.125.419-.25.838-.573 1.848-.623 3.416-1.05 6.24-1.59 9.415.039.791.188 1.233.337 1.675-.114.716-.228 1.432-.38 2.83-.034 1.494-.03 2.308-.329 3.334-.967 2.62-1.629 5.03-2.582 8.496l-6.255-30.788c.103-1.058.206-2.115.365-3.923-.608-5.162-1.271-9.575-1.934-13.988-.01-.736-.02-1.473.056-3 .71-4.506 1.401-8.21 1.94-11.937 1.023-7.081 4.759-12.338 11.15-15.268 14.221-6.519 29.685-7.777 44.888-10.107 1.599-.245 3.102-1.118 4.65-1.7-1.079-1.679-1.767-4.06-3.305-4.915-6.176-3.437-11.616-7.528-15.652-13.446-1.28-1.876-3.115-3.427-4.877-4.912-7.124-6.002-13.828-12.365-18.034-20.855-1.673-3.379-2.694-7.119-4.627-10.323-4.076-6.759-6.67-13.853-6.86-21.805-.153-6.388 1.966-9.823 7.993-12.196 5.347-2.105 10.732-4.116 16.1-6.168.384.04.768.079 1.833.207 3.033.006 5.385-.078 8.15-.015 2.639-.353 4.865-.851 7.488-1.413 1.731-.141 3.065-.22 4.596-.084 1.064.06 1.932-.094 3.142-.277 1.02-.13 1.7-.231 2.847-.196 5.676.06 10.883-.018 16.503-.035 5.942.589 11.47 1.784 17.44.22 2.233.03 4.03-.074 6.183-.142 2.44-3.835 1.375-5.894-4.254-8.75-.036.057.06-.035.024-.383-1.733-2.726-3.43-5.104-5.202-7.72-.233-.552-.48-.762-.866-1.183-.66-.852-1.268-1.39-1.872-2.287-.538-1.688-1.08-3.019-1.551-4.7-2.393-7.35-4.897-14.335-7.308-21.353-2.185-6.356-4.533-12.674-6.332-19.141-2.388-8.585-4.939-17.203-6.273-25.981-1.509-9.93-2.163-20.044-2.394-30.096-.155-6.744.757-13.566 1.757-20.269 1.429-9.582.58-19.094 3.409-28.945 5.669-19.738 13.514-38.312 22.707-56.468 1.408-2.781 2.822-6.337 7.48-6.243-.902 4.427-1.82 8.434-2.525 12.478-1.7 9.768-3.074 19.6-5.026 29.315-1.244 6.188-2.443 12.235-.447 18.844-.863 11.913-1.76 23.394-2.198 34.892-.078 2.041 1.756 4.155 2.706 6.235l1.928-.546c.131-1.505.263-3.01.478-4.888.054-1.13.023-1.888.303-2.857.748-2.77 1.472-5.32 1.57-7.893.3-7.913.36-15.835.831-23.98 1.779-9.874 3.131-19.54 4.736-29.163 1.525-9.15 2.637-18.451 5.179-27.328 2.534-8.85 6.449-17.327 10.062-25.838 5.677-13.37 14.377-24.865 23.129-36.303 1.999-2.612 3.933-5.28 6.046-7.797 2.83-3.374 5.805-6.627 8.983-10.155 2.144-2.48 4.043-4.72 5.9-6.997 4.155-5.096 10.391-6.61 15.865-9.525 8.461-4.506 16.39-10.007 24.817-14.584 10.284-5.585 20.779-10.797 31.31-15.906 16.09-7.804 28.639-20.111 41.695-31.874 8.98-8.091 16.855-16.746 21.691-28.052 1.868-4.367 2.095-7.2-1.94-9.701-3.077-1.91-6.445-3.367-9.74-4.907-11.067-5.17-22.455-9.744-33.157-15.58-10.702-5.835-20.731-12.904-31.044-19.45-3.746-2.378-6.812-1.917-9.391 1.862-3.092 4.528-6.108 9.138-9.56 13.384-8.793 10.815-17.742 21.504-26.758 32.134-7.801 9.2-17.295 16.383-28.005 22.345-3.022.092-5.832 1.018-8.302.454-9.733-2.221-16.877-8.954-23.698-15.535-6.04-5.827-10.902-12.878-16.248-19.418-2.293-2.806-3.674-5.373-8.76-3.216-9.947 4.217-18.437 11.83-29.76 12.893-4.82.453-9.594 1.378-14.39 2.09l-.56-1.315c1.672-1.951 3.094-4.214 5.065-5.79 4.27-3.415 9.448-5.899 13.094-9.837 4.282-4.623 7.308-10.405 10.932-15.647 1.81-2.617 1.438-4.608-.813-6.972-5.932-6.228-11.572-12.735-17.32-19.137-5.975-6.654-11.814-13.438-18.03-19.857-1.04-1.072-4.495-1.503-5.48-.656-6.776 5.828-13.527 11.806-16.943 20.881-2.494 5.963-6.065 11.23-5.46 17.996-.063.38-.006.538-.064 1.023-.198.773-.28 1.22-.601 1.525-.738-.37-1.235-.599-1.733-.828-.463-1.22-.926-2.441-1.7-4.237-3.057-8.46-5.394-16.247-2.06-24.718 2.048-5.201 3.198-10.767 4.6-16.208 2.1-8.15 5.764-15.465 11.342-21.775 3.288-3.72 1.36-12.494-3.424-14.144-1.482-.511-4.102-.358-5.042.613-7.838 8.1-15.977 16.166-14.476 28.991.212 1.81.042 3.662.099 5.493.096 3.124-1.465 4.692-4.028 5.24-.39-5.936-.52-11.533-1.164-17.07-1.665-14.308-1.774-28.346 5.052-41.638.772-1.503.865-3.763.376-5.405-.71-2.384-2.477-4.434-3.365-6.788-2.422-6.42-.307-9.675 6.463-9.93 15.467-.586 30.37 1.275 43.684 10.157 1.465.978 3.57.998 5.444 1.883 1.805 2.17 3.415 4.079 5.308 5.643 6.018 4.97 12.394 9.534 18.177 14.758 17.33 15.659 30.983 34.575 45.796 52.458 5.082 6.135 10.109 12.317 15.134 18.5 2.185 2.687 4.268 2.8 6.515.046 3.397-4.164 7.012-8.158 10.284-12.417 5.124-6.669 10.038-13.499 15.367-20.357 1.485-1.38 2.644-2.663 3.974-4.14.293-.514.415-.835.866-1.214 2.493-2.395 4.463-4.96 6.87-7.013 3.236-2.76 3.37-5.306.45-8.253-.673-.68-1.15-1.554-1.657-2.708-1.296-2.138-2.65-3.906-4.078-5.99-.349-1.124-.623-1.932-.885-3.11-7.92-16.853-15.954-33.29-23.74-49.844-3.777-8.031-6.863-16.39-10.691-24.395-2.558-5.348-3.884-10.668-3.842-16.652.024-3.473-1.843-6.953-2.82-10.442-.35-1.25-.862-2.54-.829-3.8.257-9.71.904-19.417.889-29.124-.015-9.533-.654-19.065-1.065-28.596-.034-.798-.416-1.582-.56-2.782.346-3.298.614-6.187 1.25-9.135.44-1.16.514-2.26.664-3.768 1.29-5.258 2.586-10.09 3.692-14.967.766-3.377 1.27-6.813 1.89-10.223 0 0 .138-.47.508-.823 1.062-1.796 1.817-3.211 2.432-4.685 2.14-5.12 4.23-10.26 6.339-15.392l1.881.649c-.864 4.112-1.91 8.196-2.552 12.342-1.235 7.975-2.241 15.985-3.404 23.894-.06-.086-.256-.005-.63.094-.648 1.672-1.226 3.26-1.149 4.815.556 11.186.723 22.43 2.073 33.526.908 7.475 3.53 14.743 5.418 22.096.65 2.533 2.203 4.684 4.823 3.178 1.045-.601 1.33-3.86.811-5.557-.962-3.15-2.77-6.043-4.178-9.281.047-.238.033-.722.287-.98 1.475-2.973 2.946-5.705-.214-8.602-.402-9.16-.808-17.878-1.219-26.596-.237-5.038-.483-10.076-.659-15.506.53-3.985.993-7.578 1.456-11.17.122-.422.243-.843.615-1.802 1.346-4.526 3.04-8.458 3.429-12.515 1.37-14.281 7.469-27.077 13.115-39.773 5.727-12.88 13.54-24.849 20.719-37.052 1.96-3.33 2.199-6.397-.781-8.355-5.054-3.32-3.802-6.795-1.474-10.823 1.57-2.714 2.68-5.726 4.472-8.27 1.948-2.767 4.434-4.585 8.441-3.606 2.74.668 5.775.128 10.719.128-8.055-4.607-5.57-8.726-2.03-12.973 4.337-5.203 9.366-9.21 16.052-11.104 5.167-1.464 7.294 2.55 10.548 4.877 2.388 1.707 4.266.423 4.155-2.512-.06-1.58-.756-3.237-1.519-4.672-4.016-7.553-4.055-7.532 2.203-13.475.361-.343.73-.68 1.098-1.015 5.622-5.126 10.877-6.1 17.309-2.487 5.158 2.899 9.919 6.497 14.976 9.587 1.217.743 2.913.702 4.388 1.022.061-1.392.735-3.26.084-4.097-4.41-5.658-8.277-12.1-16.695-14.122 1.775-1.786 3.756-3.352 5.971-4.44 4.427-2.173 9.068-3.916 13.462-6.149 4.554-2.314 8.717-2.153 12.072 1.669 6.28 7.152 12.021 14.793 18.532 21.718 1.822 1.937 5.553 2.078 8.408 3.042.577-2.359 2.18-5.055 1.535-7.012-1.775-5.39-4.548-10.448-6.788-15.696-.461-1.08-.32-2.417-.456-3.636 1.04-.06 2.156-.398 3.105-.134 4.64 1.296 9.408 2.355 13.803 4.255 5.101 2.207 10.294 4.565 11.59 11.168.523 2.663 2.09 5.28 3.743 7.501.902 1.213 2.966 2.02 4.529 2.057.624.016 1.978-2.599 1.847-3.9-.426-4.248-1.391-8.441-2.132-12.659-.455-2.589-.88-5.183-1.426-8.419 9.193 4.337 17.144 8.318 25.288 11.857 6.566 2.853 10.113 7.593 10.684 14.919.381.889.89 1.474 1.515 2.315.26.604.405.95.425 1.665.659 4.087 2.664 7.266 6.663 6.617 4.423-.717 2.571-4.868 2.736-7.752.026-.453-.284-.925-.386-1.698-.088-.677-.228-1.044-.368-1.41.132-3.957.264-7.914.802-12.301 1.82-.159 3.368-.166 4.624.435 4.2 2.012 8.296 4.241 12.521 6.769.955 1.131 1.73 2.035 2.7 2.604 6.423 3.766 10.886 8.477 9.609 16.783-.362 2.354-.053 5.23 1.042 7.282 1.342 2.515 3.64 5.963 5.87 6.24 3.78.472 4.59-3.393 4.774-6.753.32-5.844.698-11.685 1.089-18.15 3.4 2.028 6.975 3.956 10.33 6.213 5.31 3.572 10.471 7.364 15.813 11.335.71.768 1.302 1.264 1.936 2.172.223 3.67.56 6.928.544 10.185-.015 2.966-.648 5.939-.543 8.892.05 1.418 1.175 2.798 1.813 4.194 1.338-.673 3.13-1.014 3.916-2.09 1.421-1.947 2.265-4.322 3.31-6.537 1.45-3.078 2.865-6.175 4.018-8.666 4.145 3.63 7.52 6.586 11.01 9.818.702.783 1.29 1.291 1.904 2.144 1.155 1.748 2.187 3.243 3.433 4.533 3.756 3.892 5.243 8.16 2.99 13.437-.76 1.781-1.762 4.201-1.128 5.67 1.072 2.48 3.36 4.434 5.136 6.61 1.466-1.902 3.479-3.6 4.28-5.75 1.421-3.813 2.108-7.901 3.168-12.205.4-1.137.734-1.944 1.413-2.682 1.455.387 2.567.706 3.671 1.036-.007.012.016-.002.056.338 4.63 3.848 9.218 7.356 13.836 11.065.03.202.151.593.165.943 1.667 2.773 3.32 5.196 4.962 7.646-.012.027.028-.017.015.423-.36 3.518-.865 6.589-1.012 9.677-.182 3.811 2.878 5.383 5.68 5.478 1.406.048 2.913-2.917 4.581-4.72.354-.752.501-1.302.972-1.985 1.79-3.368 3.257-6.602 5.109-9.9 5.336 3.014 10.287 6.091 15.46 9.456 3.914 4.107 5.348 8.228 3.45 13.65-.966 2.762-.544 6.131-.199 9.163.116 1.021 1.93 2.567 2.97 2.567 1.09.001 2.818-1.366 3.164-2.479 1.608-5.17 3.449-10.395 4.007-15.726.472-4.504 2.27-4.91 5.94-3.552a184.155 184.155 0 0 0 7.034 7.045c.218.087.621.327.729.64 1.122.58 2.136.845 3.401 1.345 4.7 4.016 7.27 8.48 5.798 14.597-.256 1.066-.2 2.607.407 3.38.798 1.016 2.263 1.963 3.488 2.027.824.043 2.346-1.396 2.498-2.343.946-5.885 1.594-11.818 2.713-17.81 2.101-.299 3.83-.522 5.734-.462 5.46 4.714 10.962 8.918 15.927 13.682 2.053 1.97 2.892 5.176 4.407 7.747.74 1.257 1.765 2.347 2.661 3.513 1.057-.833 2.66-1.459 3.07-2.537A79.592 79.592 0 0 0 765.28 221c1.144-5.14 2.603-5.921 7.364-3.598 5.313 2.592 10.628 5.195 16.051 7.54 1.528.662 3.44.435 5.637.664-.85-3.139-1.405-5.183-1.804-7.536-.58-.935-1.313-1.562-2.35-2.389-.922-1.462-1.54-2.726-1.895-4.287-1.614-2.984-3.49-5.67-5.354-8.691-.035-.776-.084-1.217-.093-2.022-.925-2.448-1.791-4.586-2.871-6.61a1235.231 1235.231 0 0 0-10.075-18.516c-1.658-2.982-3.165-6.142-5.337-8.719-2.139-2.537-5.032-4.439-7.827-6.86-1.488-1.457-2.743-2.675-3.964-4.237-1.545-2.227-2.815-4.563-4.769-5.898-4.248-2.9-5.594-6.83-6.293-11.69-.595-4.132-2.532-8.071-3.835-12.469-.026-1.116-.091-1.86-.072-2.971-.51-1.54-1.104-2.714-1.731-4.185-.147-.68-.261-1.062-.311-1.836-1.373-4.037-2.64-7.763-4.297-11.305-1.658-3.545-3.53-7.019-5.626-10.321-3.183-5.014-5.656-10.81-12.393-12.69-.196-.078-.52-.347-.52-.7-.76-.634-1.52-.916-2.602-1.31-1.3-.555-2.28-1-3.259-1.443-.821-.879-1.643-1.757-2.674-3.157-1.11-1.497-2.011-2.471-2.808-3.781-.849-1.142-1.803-1.948-2.87-2.98-.203-.364-.295-.505-.25-.955-.466-.79-1.07-1.272-1.678-1.787-.004-.032-.058-.072.013-.393-.516-.868-1.102-1.416-1.83-2.29-4.198-7.1-8.245-13.88-12.312-20.647-1.866-3.104-3.456-6.378-.683-9.605 2.14-2.489 8.555-2.207 11.522.524 2.777 2.556 5.308 5.433 7.643 8.407 5.854 7.455 11.341 15.244 20.133 19.679.61.731 1.219 1.462 1.87 2.788 1.057 1.389 2.073 2.183 3.356 3.174 2.2 2.053 4.131 3.91 6.011 6.098.567.718 1.187 1.105 2.144 1.6 3.446 2.794 6.556 5.48 9.619 8.521.656.727 1.359 1.1 2.276 1.521.215.05.611.24.637.618 1.096.648 2.165.917 3.608 1.228 1.366.163 2.36.284 3.378.751 2.291 2.464 4.557 4.582 7.037 6.918.49.76.766 1.303 1.035 2.201 1.423 3.665 2.758 7.02 4.303 10.274 2.443 5.145 5.027 10.223 7.53 15.666.046.78.112 1.224.14 2.019 1.605 2.015 3.25 3.68 4.933 5.443.04.1.226.204.2.557 3.99 6.946 7.84 13.648 12.148 20.043.915 1.358 3.493 1.594 5.305 2.348.27-1.803 1.169-3.796.692-5.374-1.568-5.184-3.634-10.217-5.495-15.32.014-.013.04-.042.417-.084 1.918.542 3.604.893 4.975 1.748 10.76 6.712 18.641 16.054 25.028 26.924 3.426 5.832 7.538 11.285 11.655 16.67 1.107 1.447 3.361 2.017 5.089 2.99l1.644-1.702c-2.99-5.4-5.639-11.026-9.05-16.145-5.307-7.965-11.201-15.536-16.715-23.367-4.195-5.959-8.187-11.45-16.252-13.36-4.11-.973-6.762-2.373-8.431 1.367-3.415-4.163-7.107-8.087-10.114-12.48-3.52-5.144-6.74-10.549-9.534-16.119-2.171-4.328-3.49-9.084-5.324-13.977-.816-1.556-1.496-2.785-1.97-4.339-.548-1.624-1.302-2.923-2.259-4.506-1.132-.813-2.062-1.341-2.991-1.87-.092-.325-.289-.566-.82-1.127-1.568-1.195-2.905-1.986-4.242-2.777 0 0-.066-.432.182-.751-.54-.932-1.328-1.544-2.405-2.301-1.289-1.26-2.288-2.375-3.196-3.832-.57-.797-1.231-1.252-2.017-1.9-.126-.196-.28-.632-.102-.957-.415-.886-1.01-1.447-1.714-2.205-.11-.196-.209-.634-.077-.988-.533-1.161-1.2-1.969-1.992-3.047-.224-.66-.32-1.047-.254-1.758-.412-.884-.986-1.443-1.785-2.056-.225-.054-.686-.07-.686-.07-.053-.428-.106-.856-.142-1.97-.627-2.123-1.273-3.56-1.919-4.997 0 0 .016-.022.003-.018M416.33 572.1l11.802 18.95c.836-1.185 1.764-2.124 2.251-3.253 2.623-6.072.906-12.325-4.799-18.001-10.57-10.518-23.894-16.456-37.248-22.322-1.27-.558-2.798-.534-4.3-.796-1.366 4.3 1.908 5.217 4.065 6.663 9.181 6.156 18.43 12.212 28.229 18.76m-37.373-29.645c-1.419-4.86-3.28-5.873-8.614-4.692.595 5.73 3.929 7.796 8.614 4.692m527.615 737.548-1.594 5.61c1.363.222 3.335 1.104 3.958.528 1.262-1.166 1.791-3.123 2.622-4.754-1.454-.579-2.908-1.158-4.986-1.384z\"\n        />\n        <path\n            fill=\"#902C2A\"\n            d=\"M538.892 1252.674c-.719-.18-1.438-.36-2.61-.965-2.116-.686-3.778-.948-5.745-1.282-.718-.092-1.133-.111-1.776-.43-7.224-2.103-14.196-4.007-21.223-5.678-6.212-1.477-12.485-2.695-18.731-4.028 0 0-.365-.186-.613-.617-3.711-1.852-7.187-3.248-10.638-4.7-9.736-4.094-19.462-8.211-29.394-12.586-10.067-5.419-19.932-10.57-29.965-16.015-8.583-4.865-16.998-9.438-25.413-14.01a310.693 310.693 0 0 0-3.603-2.332c-.805-.5-1.188-.753-1.548-1.286-4.903-3.038-9.83-5.795-14.758-8.552-.338-.222-.676-.444-1.24-.894a2.102 2.102 0 0 1-.52-.82c-1.201-.86-2.297-1.4-3.393-1.94-.705-.43-1.41-.86-2.427-1.778-1.044-.788-1.778-1.088-2.512-1.388 0 0-.284-.304-.497-.755-2.994-2.355-5.774-4.26-8.554-6.164-2.43-2.007-4.861-4.013-7.586-6.518-1.207-1.041-2.119-1.584-3.182-2.294-.36-.383-.592-.574-.927-1.067-1.834-1.56-3.585-2.79-5.336-4.02 0 0-.324-.305-.502-.769-.895-.847-1.611-1.23-2.328-1.614 0 0 .047-.089.015-.397-.72-.684-1.408-1.061-2.097-1.438-.749-.673-1.497-1.346-2.519-2.535-2.008-1.84-3.742-3.165-5.477-4.49 0 0-.018-.082-.017-.427-.868-.944-1.736-1.543-2.793-2.343-.732-.69-1.275-1.18-1.883-2.004-2.785-2.669-5.504-5.005-8.227-7.385-.003-.044-.089-.022-.102-.339-.639-.733-1.263-1.151-2.11-1.823-6.14-6.12-12.06-11.986-17.966-18.167-.62-.698-1.253-1.081-1.902-1.532-.017-.068-.153-.101-.125-.419-.596-.737-1.219-1.157-1.843-1.633 0-.057-.114-.075-.084-.396-.617-.735-1.262-1.15-1.908-1.618 0-.054-.109-.066-.082-.385-.623-.73-1.272-1.142-1.918-1.61.003-.054-.106-.076-.072-.399-.595-.776-1.225-1.23-1.836-1.726.019-.041-.07-.017-.058-.35-.937-1.16-1.886-1.983-3.051-3.053-1.878-2.332-3.54-4.42-4.893-6.698 1.153-5.15-3.333-5.208-5.794-7.332 1.144-1.75 1.94-4.143 3.168-4.391 4.02-.812 8.193-1.042 12.316-1.131 7.245-.157 14.525-.432 21.732.118 3.692.282 7.539 1.74 10.804 3.575 3.703 2.082 6.525 5.773 10.27 7.727 10.896 5.682 22 10.98 33.145 16.163 7.11 3.307 14.413 6.207 21.677 9.172 5.19 2.119 10.45 4.073 15.699 6.045 3.693 1.387 7.325 3.249 11.155 3.898a290.704 290.704 0 0 0 25.051 3.133c14.846 1.204 29.713 2.234 44.591 2.908 6.094.276 12.24-.564 18.361-.891 6.622-.354 13.248-.622 19.863-1.073 6.1-.416 12.42-.162 18.228-1.733 11.08-2.999 21.973-6.799 32.718-10.863 4.337-1.64 8.08-4.85 12.42-7.371.82-.42 1.313-.811 2.174-1.097 3.856.96 7.343 1.814 11.024 2.74.195.072.447.404.533.796 1.012.583 1.937.774 3.237.89 2.591.668 4.807 1.414 6.693 2.277-.525.434-.72.75-.915 1.065a24.297 24.297 0 0 1 2.372-1.202c1.122.102 1.865.29 2.606.783.316.793.633 1.28 1.24 2.067 4.4.442 8.511.573 12.621.724 8.39.309 16.78.628 25.576.957 3.443-.033 6.479-.078 9.853-.177.531-.176.724-.298 1.138-.347.221.074.539.414.581.788 5.576 2.4 11.11 4.425 17.966 6.935-4.897 3.636-9.158 6.538-13.108 9.815-3.38 2.803-9.104 1.886-11.29 7.03-2.124 1.332-3.878 2.66-5.958 3.994-.76.02-1.196.033-1.98.064-6.128 6.327-11.908 12.635-17.826 19.23-1.043 1.43-1.948 2.575-3.175 3.757-.773.68-1.224 1.321-1.81 2.248-1.05 1.426-1.966 2.568-3.185 3.855-4.789 6.432-9.689 12.48-13.53 19.137-1.312 2.276.032 6.085.163 9.193 3.333-.29 7.464.525 9.793-1.156 2.762-1.992 3.973-6.135 5.892-9.677 1.026-1.763 2.016-3.197 3.344-4.67 1.107-1.018 1.877-1.995 2.645-2.976-.001-.002.002.003.373-.002 3.409-1.009 6.645-1.806 6.99-6.003 1.45-1.004 2.535-2.005 3.628-3.002.008.005-.001-.01.4-.012 3.874-.725 7.554-.926 9.729-4.495.437-.717 1.698-.889 2.481-1.448 1.828-1.306 3.597-2.695 5.394-4.045.004.005-.005-.005.35-.035 2.786-2.007 5.219-3.983 7.969-5.988 1.095-.354 1.873-.68 3.003-1.029 2.146-1.645 3.938-3.268 6.096-4.9 1.1-.01 1.832-.013 2.57.417.753 3.315.619 7.057 2.424 8.907 4.4 4.51 10.015 6.69 16.73 6.89 4.247.126 9.832-.244 11.565 6.116 2.631 9.658 7.224 13.051 16.966 13.736 1.712.12 3.614 1.299 4.833 2.563.398.412-.814 2.887-1.776 3.998-1.989 2.296-2.125 3.72 1.242 4.594.019.242.042.729.048 1.113 1.334 1.128 2.662 1.873 4.323 2.62.774.006 1.216.01 1.894.286 4.058 1.897 7.88 3.524 11.816 5.199-5.221 7.732-5.173 8.96.21 10.637.76.706 1.254 1.288 1.749 2.244 1.47 6.318 6.039 6.81 11.41 6.637 7.934.45 15.451.885 22.631 1.3-4.073 4.362-12.143.241-16.163 6.902 9.465 12.61 23.43 11.672 36.997 12.818-1.989 1.858-3.99 3.136-6.167 3.94-2.582.955-5.314 1.503-8.42 2.234-8.026.359-15.61.861-23.2.999-4.091.074-8.194-.477-12.64-.828-1.058-.111-1.769-.139-2.78-.422-2.755-.582-5.224-1.273-7.658-1.167-7.334.319-14.655.948-22.337 1.44-1.068.044-1.78.104-2.91.013-7.196.812-13.971 1.774-20.746 2.736l.07 1.094h40.18c-1.706 1.484-3.56 1.745-5.388 2.131-5.386 1.14-10.763 2.329-16.143 3.499-.629.004-1.257.007-2.288-.257-1.487-.07-2.573.127-3.659.325-.402.022-.803.044-1.712-.122-1.692.049-2.876.284-4.383.486-.752.005-1.181.045-2.007-.015-1.976.716-5.327-1.71-5.503 2.686-2.353.554-4.275 1.14-6.204 1.163-8.286.105-16.576-.012-24.862.092-1.717.021-3.426.643-5.362 1.079-.584.146-.813.349-.91.7a8.567 8.567 0 0 1-2.455-.438c-2.538-.521-4.567-.711-6.942-.999-1.064-.105-1.78-.114-2.806-.385-8.424-.21-16.538-.158-24.653-.105-.376-.072-.751-.144-1.552-.576-3.102-.7-5.779-1.04-8.455-1.38-.387-.053-.774-.105-1.584-.523-9.534-2.723-18.599-5.288-27.774-7.367-6.567-1.488-13.282-2.324-19.931-3.45a21.526 21.526 0 0 1-2.613-.6c-2.485-.635-4.374-1.023-6.639-1.506-1.403-.198-2.43-.3-3.653-.715-2.119-.626-4.041-.94-6.292-1.326-.757.025-1.185.121-1.613.218m85.394 10.036c2.99.047 6.01.348 8.953-.002.986-.117 1.773-1.898 2.651-2.919-1.015-.607-2.006-1.68-3.048-1.733-3.15-.159-6.318.08-10.474.017h-14.827l-.094 1.774c5.324.958 10.647 1.917 16.839 2.863z\"\n        />\n        <path\n            fill=\"#8F2D2A\"\n            d=\"M1211.252 369.89c.783.904 1.566 1.809 2.507 3.357.836 1.386 1.514 2.13 2.192 2.872 1.21 1.811 2.419 3.623 3.756 6.051 1.039 1.767 1.95 2.916 2.862 4.065 2.95 5.269 5.901 10.537 8.615 16.294.138 1.125.513 1.762.952 2.627.065.228.173.69.177.934.107.577.32.81.813 1.247 1.23 2.653 2.287 5.002 3.362 7.672.593.515 1.168.71 1.744.903.152.298.304.596.333 1.489.213.856.55 1.117.887 1.378.31.406.62.81.787 1.769.557 1.489 1.259 2.426 1.96 3.363.158.298.315.596.31 1.538.332 1.03.826 1.416 1.32 1.802 0 0 .3.192.29.695.649 1.686 1.307 2.869 1.964 4.052.18.582.36 1.164.4 2.34.006.976.153 1.36.475 2.071 1.21 3.26 2.11 6.25 3.314 9.114 1.77 4.21 3.755 8.328 5.65 12.485 1.229 3.543 2.458 7.087 3.594 11.283.16.97.412 1.286.665 1.601 0 0 .025-.11-.04.26 1.1 2.61 2.265 4.848 3.43 7.087.157.345.313.69.434 1.687.739 3.072 1.512 5.49 2.06 8.246-2.822 3.543-3.011 7.143-.671 10.263.592.79 3.709-.315 5.669-.53.004.02.04.04.038.359.36.783.723 1.246 1.085 1.71.484.917.968 1.833 1.27 3.439.085 1.636.352 2.582.82 3.73.41.722.62 1.245.807 2.198.689 2.461 1.401 4.49 2.114 6.52 0 0 .057-.13-.042.251-.083 1.187-.067 1.993-.13 3.135-.748.83-1.416 1.325-2.256 1.637-.332-.473-.493-.764-.68-1.413-.863-2.043-1.699-3.73-2.535-5.415l-1.888.867c.744 1.687 1.488 3.374 2.226 5.387-.039.759-.071 1.192-.291 1.884-.012 1.451.165 2.642.465 4.12.432 1.055.74 1.823.996 2.965-.424 3.106-1.894 6.2 2.281 7.427 0 0 .11-.039.004.333-.083.885-.06 1.399-.286 2.161.526 2.749 1.302 5.249 2.077 7.748 0 0 .254.305.13.954-.023 3.604-.118 6.581.216 9.51 1.256 11.034 2.652 22.054 3.884 33.42-3.11 3.325-5.405 6.651-5.379 11.396.039.468.076.652-.004.804-.118-.033-.327-.162-.699-.108-1.007 1.317-1.675 2.565-2.27 3.847-.835 1.8-1.615 3.625-2.632 5.129-1.441-4.138-2.443-8.065-4.043-11.73-.449-1.03-2.76-1.91-4.014-1.691-.815.141-1.264 2.392-1.878 3.697-.08 2.326-.16 4.652-.466 7.644-.07 2.161.083 3.656.236 5.15.026 1.033.05 2.066.01 3.874.024 2.433.115 4.091.106 6.117.366 2.084 1.79 4.424 1.145 5.413-4.18 6.407 2.808 10.41 3.126 16.113.217 1.067.309 1.791.175 2.646.082.76.389 1.39.807 2.433.188 2.423.265 4.431-.016 6.42-1.6-.499-2.84-.979-4.507-1.624a809.847 809.847 0 0 0-.49 8.535c.165 2.602.323 4.843.25 7.21.076.714.383 1.301.793 2.218.159.786.214 1.242-.012 2-.282 9.35-.282 18.4-.282 28.623l1.453-5.699c.958.78 1.553 1.266 2.168 2.143-.184 1.41-.387 2.427-.852 3.595-.223 1.444-.184 2.737-.152 4.425.095 1.162.198 1.929.3 2.696 0 0-.207.433-.705.716-.657 1.423-.817 2.563-1.033 4.097-.724 7.342-1.391 14.29-2.058 21.238-.09.426-.181.852-.67 1.652-4.205 4.248-8.162 7.966-8.309 14.049-.046 1.899-.946 3.789-1.524 5.661-1.935 6.277-5.074 12.65-2.747 19.21 2.842 8.013-2.595 13.303-4.336 19.799l-1.265-.292 1.819-12.72-1.495-.374c-.611.695-1.432 1.294-1.8 2.1-3.555 7.762-9.077 14.66-9.322 23.874-.087 3.28-2.135 6.561-3.521 9.74-1.32 3.025-3.4 5.78-4.337 8.897-2.023 6.733-2.404 14.182-5.471 20.335-7.01 14.062-15.038 27.635-23.02 41.19-6.548 11.123-10.098 23.302-13.687 35.512l-.573.58c-1.125 1.231-1.934 2.14-3.067 2.851-1.361-.229-2.999-.696-3.344-.221-3.084 4.231-5.94 8.63-8.994 13.173 2.453.108 4.048.179 5.623.42-.02.17-.186.472-.514.594-.751 1.116-1.173 2.11-1.65 3.006-.055-.1.006.12-.346.078-.77.63-1.19 1.303-1.682 1.916-.074-.06.03.1-.32.054-.83.616-1.307 1.277-1.926 2.173-.68.73-1.217 1.222-2.11 1.713-.873.927-1.392 1.857-2.169 3.006-12.49 16.161-24.454 32.317-37.054 47.961-7.136 8.86-15.312 16.882-23.393 25.095-3.31-1.67-6.486-2.83-9.085-4.766-1.416-1.055-2.969-3.909-2.46-5.085.712-1.645 3.187-3.245 5.094-3.507 4-.548 5.992-2.517 6.882-6.142l-3.523-1.602c2.705-5.017 5.234-9.709 7.902-14.696 2.43-3.643 4.722-6.989 7.35-10.375.645-.78.953-1.519 1.34-2.45.078-.192.258-.565.593-.6.687-.75 1.04-1.465 1.555-2.469 1.866-2.649 3.567-5.007 5.595-7.444.952-1.149 1.578-2.22 2.305-3.46.102-.17.308-.509.639-.558.634-.792.937-1.537 1.34-2.456.1-.175.284-.533.6-.605.673-.769 1.031-1.465 1.495-2.489.835-1.7 1.566-3.073 2.589-4.513.82-.667 1.35-1.268 2.199-1.964.911-1.73 1.506-3.362 2.363-5.099.196-.71.129-1.315.085-2.306.011-1.156-.001-1.926-.018-3.096.17-1.839.06-3.393.581-4.694 1.098-2.738-.515-3.35-2.55-4.118.294-.776.586-1.264 1.025-1.522.589-.196 1.137-.553 1.455-1.057 8.451-13.366 17.086-26.623 25.188-40.198 2.595-4.347 3.772-9.54 5.7-14.66.561-1.297 1.022-2.281 1.837-3.355 6.038-11.311 11.652-22.57 17.433-33.74 3.536-6.834 7.328-13.534 11.156-20.425.15-.132.331-.488.65-.576.97-1.148 1.622-2.209 2.313-3.266.04.004.019-.074.368-.074 1.335-.522 2.32-1.043 4.36-2.122-.745 2.422-1.003 3.97-1.67 5.313-4.8 9.662-9.956 19.16-14.417 28.973-1.981 4.36-5.07 8.966-2.338 14.924 1.264-2.035 2.384-3.495 3.146-5.123 4.758-10.159 9.708-20.24 14.043-30.579 2.903-6.923 4.896-14.228 7.346-21.67.099-.723.147-1.138.51-1.764.661-2.459 1.01-4.705 1.413-7.38.148-2.753.242-5.076.625-7.54.76-1.1 1.228-2.06 1.913-2.85.55-1.572.885-3.312 1.368-5.823l1.239 6.25c1.11-5.98 2.02-10.885 2.933-16.177.063-1.668.125-2.951.442-4.408-.075-1.116-.405-2.058-.856-3.402-.175-2.076-.23-3.751-.011-5.653.094-1.754-.086-3.282-.242-5.195.835-4.736 1.644-9.085 2.696-13.53.215-.767.187-1.436.175-2.568.171-5.093.328-9.722.768-14.453.299-1.092.315-2.08.34-3.48.234-3.507.46-6.603.765-10.048.206-1.057.332-1.762.815-2.555.512-1.217.666-2.349.889-3.903.407-6.043 1.19-11.73-2.638-16.875-3.636 7.31-4.039 15.066-3.672 22.966-.116-.002-.25-.192-.636-.11-.613 2.2-.84 4.317-1.11 6.853-.08 2.703-.119 4.987-.265 7.259-.108-.012-.233-.19-.606-.125-.596 1.197-.818 2.33-1.046 3.877-.024 2.37-.043 4.325-.137 6.63-.094 1.068-.113 1.784-.45 2.708-1.335 5.46-2.35 10.713-3.428 16.317-.11 1.061-.156 1.772-.515 2.683-.733 1.268-1.23 2.313-1.563 3.408-4.674 15.371-9.224 30.78-14.032 46.11-2.083 6.641-6.928 11.367-12.398 16.753 0-2.054-.206-3.071.032-3.971 2.28-8.622 4.215-17.367 7.08-25.794 3.115-9.167 7.532-17.919 7.58-28.262.077-1.072.113-1.788.468-2.71.707-2.45 1.096-4.694 1.525-7.246.07-.72.1-1.134.442-1.769 1.442-6.369 2.58-12.514 3.698-18.663.553-3.043 1.068-6.093 1.95-9.261.533-2.903.715-5.683.8-8.875.042-3.91.181-7.406.625-11.163a547.838 547.838 0 0 0 1.687-26.316c.033-.809-1.118-1.667-1.802-2.828-.042-.77-.001-1.214.315-1.968-.042-8.564-.406-16.817-.668-25.072-.318-10.035-.695-20.071-.762-30.109-.034-5.2-1.101-9.813-4.932-13.948-.674-2.798-1.34-5.179-2.132-7.916a27.783 27.783 0 0 1-.168-4.572c-.594-7.774-1.25-15.08-2.1-22.362-.115-.981-1.215-1.847-1.975-3.053-.106-.898-.098-1.509.056-2.568-.532-3.674-1.21-6.9-1.98-10.361-.081-.573-.067-.909.072-1.729 1.5-8.43-1.465-15.44-4.74-22.33-1.43-3.008-3.288-5.813-5.119-9.017-1.389-2.746-2.61-5.186-3.669-7.739-.039-.367-.24-.62-.532-1-.09-.127-.056-.436.04-.822-1.921-4.519-3.717-8.78-6.01-12.753-3.345-5.797-3.713-5.735-8.43-1.182-.403-.62-.595-1.09-.685-1.937-.559-.961-1.219-1.545-1.987-2.233-.107-.105-.115-.406.025-.787-1.83-3.65-3.798-6.916-5.88-10.297-.113-.114-.118-.436-.036-.777-.444-.963-.971-1.585-1.67-2.418-.246-.563-.32-.914-.305-1.65-.575-1.26-1.24-2.136-2.096-3.283-.848-1.914-1.504-3.556-2.046-5.552-.444-.99-1-1.627-1.714-2.472-.205-.55-.255-.89-.185-1.627-1.14-2.651-2.398-4.906-3.776-7.321-.118-.16-.134-.559-.06-.931-.842-1.896-1.757-3.419-2.93-5.136-.543-.981-.83-1.768-1.069-2.935-1.088-1.662-2.223-2.944-3.358-4.225l-1.967 1.2c.777 1.746 1.554 3.492 2.452 5.535.169.935.216 1.572.154 2.631.87 4.66 1.852 8.897 3.04 14.024-1.319-1.15-1.793-1.564-2.369-2.307-3.949-4.49-7.596-8.68-5.307-15.074.27-.754-.405-1.904-.77-2.82-2.445-6.134-4.555-12.436-7.472-18.34-5.443-11.012-11.36-21.79-17.16-32.955-.089-.686-.098-1.081.315-1.474 1.83-.017 3.238-.035 4.968.065 1.095 1.749 1.868 3.379 2.642 5.008l1.975-1.833c1.733-4.93-.534-8.453-4.37-11.33-1.001-.75-2.269-1.147-3.414-1.707-.497 1.275-.995 2.55-1.82 3.749-1.728-.689-3.126-1.303-4.588-1.787-.063.13-.346.072-.225-.198.118-.663.116-1.055.18-1.867.748-2.254 1.687-4.038 2.074-5.934 2.403-11.762 5.058-12.785 13.951-4.78a888.444 888.444 0 0 0 2.902 11.587l2.577-.255c.158-2.872.316-5.744.938-8.645 3.424.196 6.381.547 9.346.621 8.226.206 16.496.861 24.669.254 6.47-.48 12.818-2.587 19.23-3.928 4.997-1.046 10.232-1.43 14.951-3.2 4.783-1.794 9.246-2.236 14.019-.79.497.384.995.768 1.561 1.728.78 1.096 1.489 1.616 2.198 2.137m-76.563 54.9 9.077 7.844c-7.302-11.24-11.758-24.547-22.558-33.51l-1.916 1.184c4.98 7.978 9.96 15.956 15.397 24.482m113.385 121.345 1.161 10.762c3.798-4.298 4.176-9.708 1.764-11.9-.434-.394-1.784.221-2.925 1.138m-47.192-141.906-.264 6.45c1.205-.035 3.39.154 3.459-.142.59-2.575 1.929-5.69-3.195-6.308m3.108-15.465c-.2 1.206-.8 2.545-.461 3.574.24.733 1.705 1.266 2.705 1.456.449.086 1.626-1.257 1.58-1.323-.992-1.411-2.112-2.733-3.824-3.707m-66.393 562.712c3.418-.78 4.941-2.632 3.64-6.658-3.338 1.037-4.228 3.185-3.64 6.658z\"\n        />\n        <path\n            fill=\"#902C2A\"\n            d=\"M195.301 980.849c-.25-.829-.5-1.657-.938-3.102-1.72-3.851-3.251-7.086-4.683-10.663-.476-.933-1.052-1.523-1.821-2.406-1.15-2.01-2.196-3.682-3.046-5.45-4.562-9.485-9.54-18.807-13.473-28.549-3.811-9.443-7.19-19.167-9.58-29.052-3.807-15.747-5.516-31.977-11.874-47.126-5.329-12.696-10.493-25.486-15.06-38.47-5.385-15.305-7.148-31.341-8.124-47.476-1.314-21.72-2.607-43.443-4.322-65.132-.514-6.508-2.402-12.908-3.661-19.357.008-1.051.016-2.102.099-3.998-.57-14.898-1.472-28.947-1.743-43.008-.13-6.728.936-13.48 1.461-20.221.07-.42.138-.839.49-1.801 1.627-6.6 2.97-12.657 4.633-18.884.64-1.845.958-3.52 1.361-5.458.172-.626.259-.986.625-1.493.432-.894.583-1.643.825-2.753a6.566 6.566 0 0 0-.322-1.73c.13-.342.26-.684.631-1.48.331-.635.421-.817.834-1.148 1.15-3.183 1.975-6.217 2.921-9.543.17-.707.221-1.123.557-1.739.6-1.483.917-2.766 1.367-4.38.218-1.037.303-1.743.681-2.683.67-1.78.93-3.366 1.44-4.867 1.91-5.638 3.9-11.249 6.204-16.954 1.341-2.554 1.848-5.417 3.444-7.405 2.872-3.577 6.28-6.759 9.724-9.815.944-.838 3.385-1.387 4.15-.793 3.653 2.837 7.28 5.835 10.337 9.288 7.014 7.92 13.533 16.28 20.563 24.185 4.639 5.217 4.598 6.123 1.575 12.574-3.998 8.532-12.499 12.025-18.688 18.068-2.112 2.062-4.535 3.803-6.693 5.822-1.167 1.092-3.14 2.842-2.862 3.624.497 1.4 2.393 3.198 3.755 3.24 6.023.192 12.44 1.053 18.011-.643 8.252-2.512 16.03-6.74 23.777-10.695 6.125-3.129 8.25-2.811 12.337 2.984 6.63 9.4 14.688 17.53 23.583 24.723 7.042 5.694 14.984 9.828 24.72 10.032.734 2.1 1.2 3.961 1.364 6.043-.005 1.495.29 2.769.679 4.494-.08 3.885-.31 7.317-.412 10.753-.167 5.543-.25 11.088-.744 16.736a248.432 248.432 0 0 0-2.315 19.577c-.087 1.104.872 2.29 1.495 3.722.03 1.103-.087 1.922-.314 3.201.449 2.419 1.007 4.377 1.743 6.628.208 1.19.237 2.088.216 3.39 3.934 6.584 3.8 7.038-2.467 12.21-1.391 1.148-2.592 2.582-3.675 4.037-4.148 5.571-7.94 11.43-12.36 16.771-10.726 12.96-17.425 27.933-22.835 43.643-.613 1.78-2.1 3.26-3.313 5.076-4.58-5.02-6.704-5.036-10.704-.72-.89.96-1.71 2.057-2.283 3.228-5.016 10.258-10.591 20.301-14.775 30.892-4.617 11.687-8.41 23.76-11.623 35.913-1.533 5.8-.5 12.228-1.312 18.28-2.261 16.844-2.101 33.744-.641 50.554.748 8.617 3.299 17.162 5.766 25.524 2.96 10.03 6.698 19.833 10.104 29.732 1.286 3.74 2.586 7.477 3.833 11.57-.502.88-.957 1.403-1.67 1.855-.604-.115-.951-.16-1.366-.49-.414-.74-.762-1.195-1.084-2.006-1.143-2.259-2.312-4.161-3.586-6.282-.293-.539-.57-.665-.936-.597z\"\n        />\n        <path\n            fill=\"#8F2C2A\"\n            d=\"M735.789 209.168c-1.729.223-3.457.446-5.9.73-2.788-.955-4.859-1.97-7.002-3.365-1.546-.758-3.007-1.403-4.494-1.466-6.815-.291-7.991-1.954-5.105-8.133 1.222-.198 2.131-.255 3.462-.199 3.012.194 5.127-.525 3.563-3.554-1.455-2.818-10.718-2.796-13.724-.128-2.141.033-3.864-.046-5.67-.51-.932-.758-1.806-1.5-2.621-1.442-2.929.212-5.887.477-8.744 1.12-6.165 1.39-9.099-3.682-13.15-6.4-4.427-2.97-6.416-2.665-9.51 2.381-.39.418-.663.61-1.28.862-1.769 3.012-3.194 5.963-4.982 8.853-1.119-1.932-1.801-3.837-2.653-5.662-.534-1.145-1.321-2.17-2.316-3.262-.751-.018-1.18-.024-1.61-.03 0 0-.039.044-.025-.39-.014-1.796-.042-3.159-.057-4.892-1.647-2.142-3.307-3.913-4.969-5.682-.002.001 0-.004-.002-.371-3.654-3.941-7.132-7.718-11.004-11.035-4.641-3.975-6.692-3.564-10.45 1.134-.676.844-1.637 1.46-2.522 2.23-2.155-2.488-4.092-4.724-6.036-7.2-.006-.24-.015-.72-.038-1.076-1.388-2.354-2.505-4.593-4.169-6.3-4.137-4.25-8.524-8.255-13.174-12.36-1.77.663-3.176 1.328-4.933 2.04-1.733 1.958-3.115 3.87-4.986 6.46-.375-1.807-.56-2.695-.74-3.99.007-1.764.008-3.12.022-4.852-1.685-5.91-5.476-9.21-11.251-10.794-.748-.708-1.235-1.291-1.753-2.226-3.538-2.917-6.873-5.774-10.604-7.952-2.866-1.673-6.231-2.49-9.73-3.652-1.272 1.357-2.887 2.637-2.97 4.008-.227 3.768.599 7.617.197 11.347-.24 2.229-2.002 4.293-3.08 6.431-1.258-2.203-2.547-4.389-3.743-6.625-.204-.382-.077-.99.012-1.473 1.458-7.846-2.128-13.18-8.356-17.395-1.247-.844-1.891-2.578-2.573-4.172 4.294-1.41 8.349-2.55 12.735-3.562.953-.385 1.575-.9 2.196-1.415 0 0 .406-.273.952-.238 1.027.055 1.508.074 2.191.32 1.05-.005 1.895-.234 3.032-.53.79-.585 1.29-1.104 1.79-1.623.728-.076 1.457-.153 2.956-.153 4.198-.228 7.627-.532 11.271-.596 1.439-.17 2.663-.58 4.266-1.082 1.411-.185 2.444-.28 3.684-.11 1.434-.147 2.663-.56 4.28-1.05 2.444-.384 4.5-.692 6.756-.775 3.06.076 4.586-.76 2.236-3.711.052-.09.235-.186.566-.064.83-.49 1.331-1.102 1.854-1.714.023-.001.058-.028.373.11 2.153-.494 3.992-1.125 6.043-1.844a2.32 2.32 0 0 1 1.044-.113c3.427.51 6.628 1.567 8.953-2.075 1.673-.15 3.05-.253 4.754-.175 2.868-.47 5.408-1.12 8.284-1.936.511-.341.688-.517.864-.693.946.024 1.892.049 3.5.195 1.717.124 2.772.126 4.279.282 2.967-.438 6.269 2.14 8.413-1.779 3.013-.143 5.592-.218 8.592-.154 2.31-.409 4.199-.956 6.451-1.574 1.105-.096 1.846-.121 2.592.285.598 1.782 1.156 4.277 1.789 4.296 3.713.111 7.444-.355 11.638-.621 13.43-.196 26.39-.397 39.487-.238 2.787 3.295 5.439 6.23 8.09 9.496.008.77.015 1.211.01 2.04 1.06 2.713 1.993 5.114 3.241 7.338 1.283 2.286 3.46 4.214 4.223 6.623 2.586 8.165 5.933 16.365 6.692 24.759.802 8.877 5.711 14.495 11.774 18.947 10.766 7.906 15.846 19.73 22.836 30.222 3.157 4.74 5.098 10.294 7.536 15.505 1.38 2.95.445 4.222-2.89 4.313-2.844.078-5.671.763-8.884 1.138-3.177-.995-6.026-2.239-8.2 1.336-.172.023-.468.207-.767.063-1.16-.034-2.021.077-3.204.033-1.238-.03-2.155.094-3.525.106-4.55-.389-8.646-.665-13.063-1.106-1.22.062-2.12.289-3.02.516m-46.105-27.005-3.21 1.463c5.624 3.406 10.776 1.026 16.584.95-3.01-4.786-5.936-5.183-13.374-2.413z\"\n        />\n        <path\n            fill=\"#8F2D2A\"\n            d=\"M1170.835 321.99c1.315 1.845 2.63 3.69 3.962 6.171-.008 1.099-.032 1.563-.235 2.178.235.628.648 1.104 1.197 1.885.227.74.32 1.174.363 1.988 1.424 1.69 2.896 3 4.369 4.31a1.485 1.485 0 0 0-.254.652c.883.582 1.708 1.01 2.533 1.44.613.357 1.226.715 1.967 1.574.158.704.19.908.242 1.448 1.182 1.016 2.343 1.696 3.739 2.608.833.44 1.43.647 2.026.854 0 0 .28.351.264.97.26 5.447-3.51 6.994-6.886 7.811-10.867 2.633-21.774 5.917-32.83 6.74-12.416.923-25.25.246-34.63-10.403-.858-.975-2.312-1.466-3.05-2.496-1.079-1.51-2.278-3.23-2.524-4.988-1.235-8.826-2.048-17.712-3.302-26.535-.35-2.462-.86-5.147-4.72-5.281-5.476-.19-7.032-3.194-4.945-8.878.732.275 1.573.4 2.173.848 3.569 2.665 5.997 3.175 7.193-2.374.844-3.917 2.828-7.59 4.826-12.712 1.624 2.246 2.654 3.658 3.672 5.08.973 1.358 1.933 2.725 2.964 4.42.089.783.11 1.234-.146 1.887-.9 3.799.81 4.638 3.475 2.79 1.648-1.141 2.777-3.195 3.811-5.024 2.534-4.483 4.76-9.144 7.385-13.57.627-1.056 2.289-1.851 3.564-2 .53-.063 1.362 1.85 1.938 2.928 1.533 2.867 2.965 5.788 4.503 8.653 1.603 2.984 3.282 5.928 4.928 8.89l-1.165.59-5.302-3.38-.904.9c1.39 2.32 2.78 4.638 4.373 7.216 5.515 7.058 10.636 14.06 19.733 18.38-.684-2.042-.855-3.587-1.641-4.696-1.797-2.533-3.894-4.853-5.7-7.606 3.17-3.53 5.155-1.507 7.158.942.84 1.026 1.923 1.852 2.98 2.989.086.219.18.68.17 1.001.576.809 1.161 1.296 1.99 1.845.408.027.572-.01.736-.046z\"\n        />\n        <path\n            fill=\"#8D312E\"\n            d=\"M1258.868 838.906c-.364 1.106-.729 2.212-1.514 3.745-2.111 4.712-3.802 8.998-5.847 13.367-.655 1.155-.956 2.228-1.283 3.58-.13.634-.233.99-.578 1.093-.568-1.593-.894-2.932-1.22-4.272l-1.142-.188-6.878 16.69 1.401.747 2.136-1.984c0 1.272 0 2.244-.21 3.49-7.755 13.7-15.336 27.107-22.832 40.56-3.006 5.395-5.828 10.892-8.734 16.343 0 0-.09.01-.368.069-.719-1.426-1.16-2.911-1.63-4.497l-5.328-1.341c-.412-.06-.825-.118-1.77-.447-3.544-3.712-2.3-7.466-.81-10.851 2.564-5.832 5.624-11.447 8.477-17.152l1.534-1.708c.795-.943 1.381-1.399 1.594-1.99 2.775-7.718 6.441-15.272 7.994-23.235 1.923-9.856 9.034-16.48 13.119-24.914 6.852-14.15 14.171-28.074 20.978-42.245 2.104-4.38 3.18-9.254 4.726-13.903.059-.717.117-1.435.607-2.656.19-2.404-.05-4.306-.291-6.207-.129-2.001-.257-4.003-.052-6.48.592-.515.851-.555 1.26-.329.678.542 1.207.818 1.999 1.288.954-2.092 1.646-4.378 2.443-6.953.144-1.722.182-3.156.22-4.59.12-.42.239-.839.684-1.708a7.485 7.485 0 0 0 .486-2.201c.396-1.42.793-2.838 1.546-4.732.451-1.028.545-1.582.639-2.136.136-.415.272-.831.774-1.752.768-2.251 1.169-3.998 1.57-5.744.2-1.156.399-2.312 1.15-3.865.615-2.294.679-4.191.743-6.088.036-2.237.071-4.473.35-7.366.341-1.12.44-1.583.54-2.047.485-1.534.97-3.068 1.92-5.124.603-2.742.74-4.962 1.231-7.269.66-1.436.964-2.788 1.274-4.026.005.113-.036-.111.34-.033.884.115 1.393.152 1.923.556-.008 1.103-.039 1.838-.344 2.841-.334 1.56-.393 2.852-.398 4.517.289 2.651.524 4.93.773 7.515.424.63.835.954 1.246 1.277.21-.538.421-1.075.655-1.6.024.013-.024-.026.252.164.534.55.792.91 1.04 1.673.102 2.343.212 4.282.26 6.521-.075.71-.088 1.118-.27 1.89-.62 2.856-1.073 5.349-1.61 8.221-.137 1.158-.19 1.935-.61 2.823-2.181 7.824-4.12 15.51-5.75 23.261-.818 3.891-1.073 7.901-1.582 11.857-.31.934-.619 1.868-1.137 3.055-.21.254-.58.266-.6-.003-.154-.364-.282-.52-.42-.53-.101-.008-.307.172-.312.276-.099 1.934-.174 3.87-.32 6.075-.288.78-.51 1.29-1.036 2.038-.505 2.052-.707 3.864-.986 5.952-.277.808-.478 1.341-.87 1.91-.274.13-.447.285-.428.314.128.197.297.367.437.91.072.83.16 1.297.248 1.764-.087.143-.175.287-.759.702-1.379 3.05-2.26 5.827-3.194 8.922-.253.93-.454 1.542-.967 2.254-.685 2.071-1.058 4.042-1.421 6.375.108.829.206 1.294.304 1.76 0 0-.226-.033-.643-.058-.7.76-.98 1.545-1.31 2.706a72.34 72.34 0 0 0 .02 3.352c-.117.405-.235.811-.71 1.661-.652 1.747-.945 3.051-1.237 4.355-.137.401-.273.803-.76 1.624a8.41 8.41 0 0 0-.732 2.13m-23.572 26.96c-1.457 2.13-3.063 4.175-4.325 6.415-1.098 1.95-1.237 4.346 1.663 4.417 1.654.04 4.104-1.232 4.85-2.63 1.11-2.08 1.196-4.782 1.408-7.246.24-2.794-1.274-2.562-3.596-.956m-3.16 19.7 1.79-3.616-1.075-1.502c-1.926.815-4.293 1.208-5.622 2.595-.883.923-.282 3.267-.345 4.974 1.623-.61 3.246-1.221 5.251-2.452z\"\n        />\n        <path\n            fill=\"#100F0E\"\n            d=\"M1213.683 294.66c1.112-1.259 2.224-2.518 3.975-3.813 1.102-.731 1.566-1.427 2.03-2.122 0 0 .16.166.434.18.817-.618 1.36-1.248 2.138-2.104 1.292-.936 2.352-1.647 3.74-2.24 1.542-1.121 2.754-2.36 4.241-3.775.737-.874 1.197-1.57 1.658-2.268 1.024-.612 2.048-1.224 3.705-1.756 1.236-.518 1.838-1.117 2.686-1.922 1.123-1.377 2-2.546 2.878-3.715 1.066-.723 2.131-1.445 3.73-2.242.944-.194 1.357-.314 2.107-.286 1.251-.38 2.165-.907 3.08-1.434 0 0 .415-.248.896-.255 1.418-.845 2.355-1.684 3.291-2.523 0 0-.031-.143.285.047.712-.168 1.107-.527 1.503-.886 1.745-.784 3.49-1.568 5.904-2.327 2.266-.682 3.863-1.388 5.46-2.095.633-.295 1.264-.59 2.516-.866 1.434-.328 2.248-.674 3.063-1.02.463-.013.927-.024 2.131.05 2.556-.618 4.372-1.323 6.187-2.028.88-.02 1.762-.04 3.406.141 3.388.043 6.013-.115 8.639-.274.288.1.585.158 1.38.457.993.4 1.497.519 2.126.928.855.47 1.586.65 2.702.926.862-.073 1.338-.242 1.814-.41.572.063 1.144.126 2.364.48 5.543 1.32 10.437 2.347 15.332 3.375 1.637.784 3.275 1.568 5.244 2.858 1.112.756 1.893 1.006 2.673 1.257 1.557 1.452 3.113 2.905 4.698 5.032-1.7.827-3.534 1.428-5.137 1.049-5.658-1.341-11.237-3.018-16.846-4.567-.986-.177-1.972-.355-3.353-.981-1.762-.743-3.129-1.037-4.495-1.33-6.269-.011-12.537-.023-19.664-.193-2.58.09-4.301.34-6.31.45-.946.3-1.603.737-2.61 1.251-4.483 2.552-8.616 5.028-12.748 7.504-1.052.754-2.104 1.51-3.734 2.327-1.14.594-1.7 1.125-2.26 1.656-.804.687-1.608 1.373-2.989 2.223-2.246 1.959-3.915 3.755-5.583 5.55 0 0 .03.031-.347-.043-3.234 2.27-6.09 4.614-8.959 6.9-.01-.059.128-.129-.202.111-.38.507-.43.773-.48 1.04 0 0 .018.023-.333-.051-.824.598-1.295 1.271-1.767 1.945 0 0 .112.125-.302.031-3.606 2.725-6.796 5.544-9.987 8.363 0 0-.169.153-.559.224-.953.868-1.517 1.666-2.08 2.463-.253.188-.491.392-1.216.716-1.25.8-2.001 1.5-2.752 2.198-1.032.069-2.063.138-3.865.097-3.025.727-5.412 1.324-7.503 2.464-2.589 1.41-4.861 4.568-7.394 4.706-9.609.523-19.413 3.53-29.06-1.24-2.916-2.054-5.402-4.632-8.398-5.552-7.625-2.342-10.761-8.901-14.63-14.642-2.09-3.103-2.883-7.081-4.014-10.819-.174-.735-.595-1.316-1.316-2.128-1.425-2.264-.347-6.3-4.273-5.688-1.613.252-2.89 2.65-4.66 4.022-.566-.07-.793-.092-.987-.516.31-2.237.587-4.072.958-6.226.628-1.282 1.162-2.245 1.996-3.286.009-1.297-.283-2.517-.576-3.737-1.125.444-2.25.888-3.658 1.493-.914.285-1.546.41-2.6.39-4.036.96-8.664-.75-11.048 3.738.026.043-.06-.01-.455-.002-.805.818-1.785 1.967-1.537 2.382 2.027 3.385.374 5.57-2.372 7.843-.946 2.48-1.655 4.7-2.657 7.037-.456.492-.619.869-.72 1.4.061.157-.031.478-.299.374-.756-.388-1.244-.672-1.818-1.34.131-1.85.348-3.315.654-5.084.12-.722.147-1.141.502-1.738.695-2.115 1.063-4.054 1.56-6.007.128-.015.234.222.602.178 1.671-1.992 3.136-3.977-1.094-4.822-3.632.47-6.857.977-10.146 1.019-.082-1.09-.1-1.713.215-2.392 2.425-.59 4.519-1.124 6.885-1.396 3.469-.467 6.666-1.197 10.196-2.017.764 0 1.194.09 1.885.376 1.829-.658 3.397-1.513 5.3-2.39 2.643-.845 4.952-1.669 7.638-2.491 1.518-.367 2.66-.734 4.081-1.034.709-.239 1.136-.546 1.912-.858 1.829-.968 3.308-1.933 5.137-3.059.787-.82 1.422-1.421 1.63-2.145 3.237-11.233-1.867-21.242-4.476-31.783.617-.641 1.008-1.083 1.631-1.472.233.053.585-.27.585-.27s.168-.15-.02.234c.051 1.02.289 1.656.444 2.65.825 1.9 1.732 3.441 2.851 5.234a153.05 153.05 0 0 1 2.612 4.685c.109.424.217.848.387 2.005.054 7.135.048 13.538-.212 20.148-.078 1.4.098 2.595.32 4.12.202.984.356 1.635.306 2.719.178 3.68.558 6.927.94 10.174.147 1.339.295 2.677.344 4.504-.095.968-.089 1.448-.233 2.255.431.861 1.011 1.395 1.592 1.928.214.326.428.653.455 1.572 1.076 2.486 2.34 4.38 3.712 6.439.106.166.215.547.042.952.06 6.055 2.606 8.944 8.037 9.29.883-.133 1.374-.28 1.866-.427 0 0-.176.197-.235.467 1.6 1.471 3.26 2.672 5.185 4.022.652.193 1.037.237 1.422.28 0 0 .135.313.244.803.889.74 1.669.992 2.76 1.327.715.012 1.12-.06 1.526-.133l8.626.485c1.233-.23 1.747-.501 2.262-.773.517-.269 1.035-.538 2.14-.92 1.89-.36 3.192-.605 4.789-.689.938-.282 1.581-.726 2.225-1.17 0 0 .408-.242.9-.212.961-.004 1.43-.038 2.134.147 3.4-1.66 6.565-3.54 9.912-5.538.182-.119.547-.355.871-.266.896-.447 1.468-.982 2.02-1.54-.021-.023.02.022.39.052 1.003-.785 1.638-1.6 2.272-2.414z\"\n        />\n        <path\n            fill=\"#171716\"\n            d=\"M1270.172 1530.649c-2.609-1.806-5.11-3.178-7.173-5.038-3.057-2.756-2.846-7.748.522-9.976.863-.57 3.897.228 4.226 1.067 2.708 6.904 7.646 10.007 14.93 10.326 6.694.293 12.113-1.875 17.386-6.028 6.49-5.113 9.639-11.59 10.365-19.466.634-6.884 1.223-13.797 1.277-20.702.037-4.703-1.321-5.21-5.443-2.503-3.461 2.274-6.431 5.543-10.15 7.111-4.262 1.798-9.364 3.68-13.653 2.937-12.256-2.123-13.118-8.746-10.911-19.952 1.453-7.382 2.933-14.766 4.075-22.2.302-1.971-1.595-5.273-.77-5.991 2.792-2.424 6.285-4.102 9.665-5.746.934-.454 2.956-.233 3.505.455.788.987 1.144 2.778.887 4.068-2.098 10.556-4.21 21.116-6.676 31.59-1.35 5.738 4.748 11.87 10.787 8.722 7.274-3.792 15.6-7.381 17.633-15.698 1.653-6.77-.13-14.376-.364-21.612-.055-1.702-.514-4.67.068-4.902 3.201-1.27 6.645-2.147 10.066-2.437.579-.049 2.013 3.394 2.095 5.265.313 7.172.284 14.36.293 21.542.012 11.085.65 22.226-.234 33.243-1.595 19.861-20.317 40.498-42.159 38.86-3.363-.253-6.631-1.782-10.247-2.935z\"\n        />\n        <path\n            fill=\"#151515\"\n            d=\"M186.123 1418.436c-.015 7.127-.015 13.791-.015 20.457 5.16-1.801 9.161-4.383 13.12-4.32 7.158.113 14.747-2.32 21.506 2.511 5.674 4.056 7.203 9.477 6.626 16.053-.34 3.88-.18 7.804-.228 11.71-.063 5.22-.017 10.444-.194 15.66-.123 3.638-6.89 8.91-10.088 7.522-1.352-.586-2.614-3.237-2.559-4.905.355-10.68 1.25-21.343 1.53-32.022.046-1.736-1.675-4.388-3.277-5.15-8.2-3.902-16.186-2.741-23.566 2.37-1.124.778-2.399 2.32-2.426 3.535-.146 6.453.053 12.915.202 19.373.05 2.152.49 4.304.434 6.448-.16 6.13-3.223 9.87-9.132 10.699-.851.12-2.935-2.074-2.906-3.157.29-11.1 1.01-22.19 1.362-33.29.145-4.576-.362-9.17-.485-13.757-.392-14.71-.734-29.423-1.126-44.133a15.125 15.125 0 0 0-.482-3.437c-2.066-7.809-.739-10.197 6.925-12.304 3.538-.973 5.388.55 5.287 4.131-.24 8.472-.405 16.946-.545 25.42-.056 3.373.03 6.748.037 10.586z\"\n        />\n        <path\n            fill=\"#171716\"\n            d=\"M953.126 1444.792c-6.489-5.943-6.871-11.891-2.559-18.668 8.526-13.397 30.996-20.316 45.171-15.172 1.365.495 2.766 1.82 3.339 3.119.238.539-1.523 2.19-2.607 3.037-2.812 2.198-5.651 2.999-9.083.74-8.126-5.345-23.726.826-27.545 9.859-2.396 5.67 2.98 11.779 10.457 12.31 8.024.571 16.067 1.322 24.002 2.614 10.98 1.787 16.257 11.53 12.305 21.868-6.78 17.735-23.173 26.955-42.115 24.453-8.133-1.075-15.94-2.759-23.14-6.6-1.939-1.033-4.725-3.58-4.478-4.959.499-2.786 2.626-5.401 4.548-7.697.33-.395 3.178.85 4.485 1.84 2.288 1.732 3.979 4.472 6.46 5.692 7.286 3.584 15.161 4.368 23.278 4.237 8.721-.14 13.755-4.762 17.039-12.16.404-.91.669-1.883 1.037-2.811 2.914-7.363 2.107-8.756-4.66-12.616-5.826-3.322-12.18-2.867-18.327-3.484-6.248-.627-12.121-1.729-17.607-5.602z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M529.635 1439.298c3.636-11.446 11.938-17.788 21.786-22.865 10.657-5.494 21.942-7.626 33.773-7.25 3.287.105 6.551.868 9.829 1.308 3.01.404 6.351 1.27 4.895 5.034-1.173 3.031-4.007 5.3-8.053 4.042-3.957-1.232-7.898-2.94-11.956-3.348-14.562-1.464-26.595 3.92-36.266 14.706-4.4 4.907-4.2 11.134-3.823 17.064.874 13.718 13.937 28.247 27.482 31.559 13.044 3.19 25.62 2.459 37.821-3.37 2.117-1.011 5.476-3.294 6.2.087.486 2.274-2.173 7.22-4.192 7.693-10.109 2.37-20.475 5.012-30.743 4.98-12.727-.04-25.38-2.975-34.764-12.962-7.427-7.906-14.609-16.115-13.778-28.079.192-2.77 1.083-5.491 1.79-8.6zM111.647 1473.667c16.6 9.665 33.264 10.349 50.319 2.407 2.168-1.01 5.372-3.235 6.164.21.507 2.204-1.932 7.096-3.777 7.505-12.347 2.737-24.451 6.911-37.657 4.593-10.877-1.91-21.176-4.426-28.663-12.94-4.318-4.912-7.894-10.55-11.313-16.161-6.476-10.628 1.587-28.484 9.04-34.713 14.635-12.231 31.525-16.471 50.125-15.267 2.767.179 5.681.613 8.159 1.739 1.34.609 2.735 2.99 2.632 4.467-.184 2.625-5.239 4.622-7.967 3.985-5.461-1.274-10.942-2.975-16.483-3.29-13.231-.754-23.62 5.517-32.07 15.08-4.542 5.14-4.514 11.862-3.373 18.062 1.786 9.7 6.299 18.137 14.864 24.323z\"\n        />\n        <path\n            fill=\"#100F0E\"\n            d=\"M1305.197 432.993a13.99 13.99 0 0 1-.342 2.909c-1.059 11.044-1.84 21.435-2.622 31.826-1.952-9.677-2.71-19.19-3.785-28.665-1.145-10.085-1.02-20.392-5.297-29.961-3.465-7.752-6.62-15.617-12.992-21.645-2.877-2.721-5.796-5.537-8.022-8.774-3.28-4.77-7.763-6.874-13.197-7.613 0 0 .057-.068.034-.393-6.194-5.378-13.357-7.831-21.169-9.172-10.708-1.839-21.294-1.736-32.33.351-12.078 2.439-23.744 4.845-35.386 7.364-3.387.732-6.688 2.46-10.06 2.55-7.288.196-14.61-.188-21.89-.703-3.744-.265-7.431-1.322-11.197-2.373-.817-.739-1.58-1.125-2.708-1.492-2.058-1.607-3.752-3.231-5.25-5.191.61-.643 1.023-.95 1.82-1.25 5.5 1.376 10.565 3.017 15.75 4.06 12.793 2.57 25.428.95 37.674-2.905 7.147-2.249 13.891-5.776 21.249-8.731 2.244-.16 4.07-.222 5.866-.487 7.947-1.173 15.853-2.984 23.837-3.427 6.267-.347 12.626.972 18.944 1.551.717.069 1.435.137 2.663.542 8.34 5.294 17.35 9.072 23.742 15.468 11.552 11.56 22.075 24.286 27.2 40.475.996 3.146 3.53 5.805 5.356 8.689.046.403.092.807.045 1.947.627 5.508 1.347 10.28 2.067 15.05z\"\n        />\n        <path\n            fill=\"#171716\"\n            d=\"M1046.44 1433.878c5.379.39 10.758-.352 15.17 1.376 9.895 3.874 20.133 11.31 16.906 25.054-.971 4.138-1.377 8.595-3.243 12.3-6.364 12.636-18.448 14.896-30.968 16.05-6.688.615-13.242.114-19.212-3.154-13.74-7.52-15.729-23.001-6.32-35.892 6.532-8.949 16.25-13.78 27.668-15.734m-19.06 38.032c1.736 4.98 6.315 7.475 10.488 8.347 5.772 1.205 12.619 1.921 17.869-.103 8.397-3.237 12.078-10.895 12.052-20.264-.029-10.162-10.158-20.508-20.257-19.786-12.244.874-29.263 15.369-20.151 31.806zM789.165 1465.857c-.35-8.123-.655-15.768-1.125-23.403-.393-6.376 1.808-8.967 8.272-8.568 1.179.073 3.157 2.388 3.172 3.687.112 9.634-.43 19.278-.233 28.908.094 4.534 1.078 9.118 2.211 13.538.682 2.66.272 3.972-2.221 5.069-3.536 1.555-7.029 5.666-10.037-.807-.277-.597-2.878-.413-4.305-.123-6.26 1.27-12.431 3.275-18.743 3.883-3.72.358-7.786-.997-11.443-2.294-5.684-2.018-6.856-12.245-6.572-17.02.348-5.873.075-11.789-.053-17.684-.083-3.816-1.727-8.326-.208-11.24 1.464-2.81 5.971-5.186 9.364-5.526 3.637-.364 3.485 3.289 3.305 6.687-.586 11.011-.6 22.058-.562 33.09.005 1.272 1.437 3.035 2.677 3.725 7.129 3.965 18.79 1.976 23.923-4.303 1.506-1.843 1.736-4.73 2.578-7.62z\"\n        />\n        <path\n            fill=\"#151515\"\n            d=\"M315.044 1457.693c.252 6.856.503 13.31.891 19.755.314 5.206-3.692 10.446-8.745 10.348-1.267-.024-3.531-2.766-3.55-4.281-.114-9.11-.039-18.25.604-27.334.953-13.465-5.96-13.22-15.07-12.487-2.286.184-4.523.964-6.784 1.469-5.927 1.322-8.182 3.843-8.003 9.986.245 8.393.67 16.794 1.436 25.153.333 3.632-2.028 4.393-4.23 5.863-2.811 1.875-5.404 4.077-7.312 5.54 0-5.36-.03-12.512.008-19.665.046-8.277.165-16.554.215-24.83a11.202 11.202 0 0 0-.358-2.946c-1.498-5.567 1.108-9.917 6.84-10.067 2.007-.052 4.076 2.29 6.805 3.96 5.872-4.983 14.077-4.558 22.09-4.1 10.272.588 17.106 5.754 15.028 16.821-.385 2.052.107 4.269.135 6.815z\"\n        />\n        <path\n            fill=\"#171716\"\n            d=\"M1189.745 1436.087c14.443-4.924 26.428.858 31.255 14.591 1.094 3.113.95 4.76-2.877 4.708-8.124-.112-16.251-.145-24.377-.104-4.313.022-8.636.13-12.935.449-4.575.34-5.745 2.529-4.94 6.999 1.784 9.921 8.379 16.155 17.302 17.74 7.27 1.293 15.61.445 21.775-5.62 1.06-1.045 1.968-2.498 3.245-2.997 1.229-.48 3.249-.47 4.166.265.744.598.804 2.728.417 3.939-1.54 4.814-5.037 7.8-9.942 8.687-6.981 1.263-14.01 2.873-21.052 3.053-10.21.26-19.572-3.943-24.584-12.615-5.008-8.664-3.229-18.196 3.698-26.083 5.096-5.803 10.931-10.577 18.85-13.012m3.552 5.526c-2.351.77-4.789 1.354-7.014 2.394-.996.465-1.565 1.843-2.328 2.807 1.025.538 2.027 1.48 3.08 1.539 3.294.185 6.608.03 9.914.02 2.986-.01 5.971-.002 9.345-.002-2.146-6.3-4.902-7.646-12.997-6.758z\"\n        />\n        <path\n            fill=\"#151515\"\n            d=\"M616.988 1476.25c-.21-10.203-.382-19.983-.549-29.763-.014-.831.077-1.67.005-2.495-.576-6.53.383-7.945 6.585-9.626 4.286-1.161 6.336 1.057 6.034 5.578-.711 10.655-1.06 21.334-1.55 32.004-.16 3.497 1.473 5.376 4.865 6.494 8.622 2.842 17.455 1.013 23.005-5.479 1.178-1.377 2.122-3.52 2.076-5.283-.223-8.615-.956-17.218-1.185-25.834-.056-2.115.467-5.294 1.858-6.157 2.174-1.349 5.39-1.675 8.006-1.308.936.131 2.014 3.533 2 5.435-.06 8.462-.833 16.928-.66 25.379.101 4.998 1.638 9.953 2.197 14.964.16 1.427-.378 3.597-1.398 4.378-5.7 4.366-6.633 4.128-11.9-1.633-4.37 1.552-8.598 3.667-13.06 4.457-4.082.723-8.419.055-12.64-.093-.963-.034-1.9-.58-2.87-.674-6.82-.665-9.254-2.88-10.82-10.343z\"\n        />\n        <path\n            fill=\"#171716\"\n            d=\"M907.001 1453.769c-6.459.837-12.899 1.508-19.355 1.774-7.296.3-14.614.074-21.907.41-3.211.147-5.42 2.196-4.678 5.674 1.764 8.276 6.277 14.966 14.277 17.862 9.339 3.382 18.16 1.05 25.855-5.253 1.017-.833 1.849-2.093 3-2.507 1.088-.39 2.71-.298 3.666.287.672.411 1.17 2.287.793 3.019-1.344 2.611-2.562 6.432-4.777 7.264-13.784 5.175-27.75 8.88-42.137 1.342-12.284-6.438-15.37-22.422-5.8-33.802 7.902-9.396 17.54-15.25 29.665-15.916 7.896-.434 13.768 4.324 17.847 10.85 1.63 2.607 2.401 5.75 3.551 8.996m-19.133-11.533c-1.688-.258-3.377-.517-5.715-.862-.649.077-1.298.153-2.662-.042-2.676.805-5.449 1.39-7.981 2.517-1.094.485-1.69 2.089-2.512 3.184 1.087.538 2.154 1.487 3.265 1.543 4.967.252 9.95.395 14.918.253 1.59-.046 3.15-1.09 4.724-1.676-1.3-1.386-2.6-2.772-3.905-4.153 0 0 .004-.004-.132-.764zM1246.354 1427.878c-2.352 6.343-.82 9.78 5.554 9.724 5.679-.05 11.864-.601 16.61-4.674 1.546 7.172-3.694 13.672-11.255 13.554a22.464 22.464 0 0 1-2.49-.181c-8.164-1.043-10.368 1.29-9.55 9.625.565 5.757.577 11.57 1.186 17.322.227 2.15.972 5.492 2.324 5.987 2.106.77 5.098-.007 7.4-.92 1.898-.751 3.202-2.893 5.039-3.951 1.126-.649 3.064-.962 4.07-.404.798.443 1.282 2.619.927 3.705-.58 1.778-1.588 4.108-3.063 4.777-5.12 2.321-10.38 4.689-15.84 5.823-9.601 1.994-14.496-4.301-13.46-14.784.837-8.46.382-17.07.042-25.596-.039-.968-2.966-2.009-4.687-2.671-1.903-.733-3.959-1.07-5.948-1.579 1.895-2.332 3.885-6.723 5.667-6.64 7.603.354 6.33-4.37 6.144-8.8-.02-.499-.038-1-.104-1.495-1.24-9.227-1.168-9.093 6.77-13.428 3.227-1.761 5.044-.723 5.266 2.332.285 3.912-.315 7.888-.602 12.274zM710.855 1456.157c-.04-1.3-.276-2.124-.24-2.937.29-6.389-1.89-9.602-8.973-7.837-1.954.488-3.777-1.141-1.955-3.437 2.064-2.6 3.537-6.128 8.106-5.512.936.127 3.057-1.975 3.112-3.123.158-3.276.108-6.783-.92-9.844-1.476-4.397.351-6.64 3.832-8.392 2.073-1.043 4.219-1.942 6.68-3.064 4.716 4.07 3.257 9.43 2.053 14.16-2.668 10.49-.553 12.865 10.4 10.612 2.098-.43 4.288-.485 6.335-1.067 1.862-.53 3.586-1.54 5.357-2.333.772 8.223-4.981 14.206-13.136 12.857-10.551-1.746-9.848-.195-10.132 9.5-.175 5.95.516 11.926.841 17.889.334 6.117 4.21 8.21 9.553 5.018 1.984-1.185 3.55-3.102 5.58-4.162 1.247-.651 3.167-.722 4.472-.226.56.212.765 2.688.339 3.844-.597 1.618-1.628 3.762-3.006 4.29-6.313 2.415-12.7 4.867-19.28 6.285-5.26 1.134-9.849-4.126-9.84-10.665.01-7.125.483-14.25.822-21.856z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M917.984 196.052c-3.824-1.847-7.955-3.26-11.378-5.675-2.818-1.989-5.449-4.826-7.04-7.873-7.578-14.515-13.777-29.854-22.439-43.663-6.242-9.951-15.368-18.168-23.67-26.709-2.465-2.536-6.405-3.788-9.865-5.124-1.164-.45-2.931.663-4.423 1.062.415 1.34.657 2.771 1.292 3.998.68 1.31 1.547 2.635 2.648 3.593 6.864 5.976 6.23 13.987 5.38 21.68-.25 2.28-3.238 5.399-5.505 5.952-1.779.435-5.755-2.046-6.384-3.997-3.426-10.618-14.047-15.756-18.636-25.376-.513-1.075-1.882-1.954-3.055-2.47-8.294-3.65-14.372-9.813-19.258-17.271 1.405-.036 2.449.238 3.493.513.72.065 1.44.13 2.686.455 3.896 1.025 7.266 1.791 10.214 2.647-2.224.542-4.027.993-5.83 1.445l-.466 1.562c3.229 2.394 6.438 4.815 9.693 7.171 1.722 1.246 4.304 1.979 5.158 3.634 4.567 8.847 13.709 14.227 17.564 23.577.53 1.286 1.794 2.659 3.043 3.13.908.342 3.43-.854 3.397-1.165-.589-5.456-.752-11.118-2.467-16.247-1.783-5.332-8.783-9.081-4.345-16.219.412-.663-.518-2.16-.415-3.367 5.479.315 10.547.727 15.55 1.415-.808.845-1.549 1.413-2.68 2.279 7.11 6.145 15.397 10.825 20.134 19.443 2.802 5.1 7.56 9.088 10.717 14.037 4.35 6.816 8.243 13.953 11.917 21.164 3.905 7.664 7.245 15.614 11.021 23.347.814 1.666 2.169 3.391 3.732 4.313 6.767 3.992 13.71 7.683 20.575 11.508 5.646 3.146 9.402 9.84 17.225 8.962 1.746-.196 3.656.248 5.376.772 11.928 3.631 24.25 3.08 36.45 3.264 11.116.166 22.536-2.16 33.282-.29 10.302 1.794 17.186-4.785 25.83-6.59 2.609-.545 3.868-1.387 5.995.515 2.633 2.354 5.111 2.244 6.9-1.373 2.066.666 3.8 1.218 5.733 2.058.851.506 1.503.724 2.07 1.267-1.067 1.458-2.05 2.59-3.26 3.449-3.251-.686-6.376-.746-9.274-1.585-5.362-1.554-10.293-1.123-15.506.958-5.134 2.05-10.635 4.332-16.012 4.428-28.73.512-57.51 1.044-85.943-4.798-.038-.006-.115-.003-.211-.23-.309-.501-.587-.662-1.13-.778-.197-.07-.607-.158-.789-.427-1.427-1.363-2.671-2.457-3.916-3.55 0 0-.087.094-.134-.302-2.037-1.46-4.029-2.522-6.02-3.584a206.247 206.247 0 0 1-4.554-3.393c-1.098-.762-1.784-1.152-2.47-1.542M804.406 98.479s.123-.074 0 0z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M506.441 121.646c-.144-.347-.288-.694-.466-1.59-.512-1.142-.991-1.735-1.47-2.328-.699-7.021-4.246-11.76-10.812-14.614-8.144-3.539-16.095-7.52-25.288-11.857.547 3.236.97 5.83 1.426 8.42.74 4.217 1.706 8.41 2.132 12.658.13 1.301-1.223 3.916-1.847 3.9-1.563-.038-3.627-.844-4.53-2.057-1.652-2.22-3.219-4.838-3.742-7.501-1.296-6.603-6.489-8.961-11.59-11.168-4.395-1.9-9.162-2.96-13.803-4.255-.949-.264-2.065.074-3.105.134.137 1.219-.005 2.556.456 3.636 2.24 5.248 5.013 10.305 6.788 15.696.644 1.957-.958 4.653-1.535 7.012-2.855-.964-6.586-1.105-8.408-3.042-6.51-6.925-12.252-14.566-18.532-21.718-3.355-3.822-7.518-3.983-12.072-1.669-4.394 2.233-9.035 3.976-13.462 6.15-2.215 1.087-4.196 2.653-5.97 4.439 8.417 2.022 12.284 8.464 16.694 14.122.651.836-.023 2.705-.084 4.097-1.475-.32-3.171-.279-4.388-1.022-5.057-3.09-9.818-6.688-14.976-9.587-6.432-3.614-11.687-2.64-17.309 2.487-.368.336-.737.672-1.098 1.015-6.258 5.943-6.219 5.922-2.203 13.475.763 1.435 1.46 3.092 1.52 4.672.11 2.935-1.768 4.219-4.156 2.512-3.254-2.327-5.38-6.34-10.548-4.877-6.686 1.893-11.715 5.901-16.052 11.104-3.54 4.247-6.025 8.366 2.03 12.973-4.944 0-7.979.54-10.719-.128-4.007-.979-6.493.84-8.44 3.606-1.792 2.544-2.904 5.556-4.473 8.27-2.328 4.028-3.58 7.503 1.474 10.823 2.98 1.958 2.74 5.025.781 8.355-7.18 12.203-14.992 24.173-20.72 37.052-5.645 12.696-11.744 25.492-13.114 39.773-.39 4.057-2.083 7.989-3.47 12.187-.582-.99-1.34-2.298-1.09-3.372 4.366-18.883 9.692-37.346 18.319-54.934 5.285-10.777 10.372-21.505 17.653-31.061 2.57-3.374 1.556-6.126-1.453-8.012-3.098-1.942-3.534-4.268-2.192-7.174 2.095-4.534 4.08-9.17 6.708-13.392 3.039-4.88 8.21-4.746 13.42-3.772-3.016-9.432 4.278-13.41 9.063-17.789 6.798-6.223 14.696-11.811 23.81-1.682l.546-1.27c-1.04-2.337-2.02-4.704-3.137-7.004-1.537-3.162-1.672-5.926 1.431-8.358 1.825-1.43 3.322-3.27 5.033-4.854 5.71-5.284 11.617-6.182 18.588-2.54 5.677 2.964 11.203 6.22 16.42 9.137-.507-3.22-7.806-10.57-11.816-11.8-1.502-.462-3.529-1.763-3.782-2.996-.234-1.14 1.275-3.418 2.545-3.962 8.114-3.473 16.307-6.797 24.645-9.673 1.522-.525 4.396.692 5.681 2.031 6.646 6.92 13.058 14.07 19.376 21.294 2.106 2.408 4.073 4.274 8.993 2.558-2.73-6.086-5.452-11.775-7.804-17.614-.829-2.056-.748-4.478-1.082-6.733 2.061-.194 4.33-1.04 6.147-.465 6.428 2.035 13.043 3.931 18.898 7.138 3.251 1.78 5.314 5.935 7.575 9.25 1.51 2.213 2.428 4.83 3.61 7.267l1.922-.446c-.426-3.565-.869-7.129-1.274-10.697-.371-3.267-1.015-6.545-.957-9.808.05-2.814 2.023-3.724 4.566-2.456 8.229 4.102 16.737 7.776 24.487 12.649 3.903 2.455 7.545 6.678 9.274 10.928 2.748 6.75 2.076 7.069 9.127 4.592.492.355.632.722.388 1.501-3.108 1.062-5.832 1.713-8.557 2.364z\"\n        />\n        <path\n            fill=\"#171716\"\n            d=\"M683.05 1413.337c-.771-9.149-1.742-17.887-1.892-26.639-.031-1.838 2.784-3.925 4.609-5.533 1.56-1.375 3.58-2.227 5.582-3.422 4.35 4.955 2.725 10.455 2.67 15.572-.09 8.49-.475 16.98-.866 25.465-.203 4.427-1.066 8.851-.95 13.259.175 6.608 2.019 13.336 1.198 19.764-1.03 8.07 1.02 15.57 1.746 23.314.655 6.987-.795 9.45-7.227 12.177-4.925 2.088-6.833.94-6.764-4.455.053-4.143.684-8.275.835-12.42.34-9.325.6-18.653.786-27.983.189-9.563.25-19.129.273-29.099z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M252.15 301.947c-.269 2.888-.537 5.777-1.18 9.19-2.322 3.263-4.271 6.002-6.483 8.967-2.988 4.067-6.072 7.708-8.349 11.8-3.06 5.5-5.96 11.177-8.114 17.076-5.976 16.375-13.195 31.873-25.421 44.763-3.904 4.116-6.67 9.447-9.38 14.53-4.126 7.737-7.638 15.798-11.62 23.614-3.124 6.133-6.565 12.104-9.865 18.146-1.808-.464-3.913-.484-5.378-1.462-13.314-8.882-28.217-10.743-43.684-10.158-6.77.256-8.885 3.511-6.463 9.931.888 2.354 2.656 4.404 3.365 6.788.489 1.642.396 3.902-.376 5.405-6.826 13.292-6.717 27.33-5.052 41.637.644 5.538.775 11.135 1.164 17.07 2.563-.547 4.124-2.115 4.028-5.239-.057-1.83.113-3.683-.1-5.493-1.5-12.825 6.64-20.891 14.477-28.991.94-.971 3.56-1.124 5.042-.613 4.784 1.65 6.712 10.424 3.424 14.144-5.578 6.31-9.242 13.625-11.342 21.775-1.402 5.441-2.552 11.007-4.6 16.208-3.334 8.471-.997 16.259 1.769 24.54-5.901-4.86-6.965-11.94-5.437-18.878 3.594-16.324 7.683-32.59 18.464-46.123 1.782-2.238-.764-9.4-3.54-10.251-.786-.242-2.196-.035-2.662.519-3.168 3.762-6.002 7.81-9.243 11.505-5.656 6.448-4.842 14.158-4.534 21.75.137 3.377-.771 5.932-3.967 7.274-1.09.458-2.662 1-3.478.545-.87-.486-1.76-2.279-1.517-3.206 1.903-7.243.144-14.084-1.411-21.105-.76-3.428-.18-7.29.41-10.854 1.487-8.984-.589-18.808 6.198-26.634.7-.807.487-2.88.03-4.118-1.012-2.738-2.629-5.25-3.679-7.978-2.548-6.617.608-11.42 8.044-11.99 14.01-1.072 27.516 1.1 40.272 7.132 2.493 1.179 4.69 2.985 7.355 4.718 7.434-12.642 16.233-24.33 21.235-38.452 2.472-6.98 7.144-13.607 12.175-19.169 10.722-11.854 16.861-25.888 22.672-40.434 3.48-8.714 7-17.345 13.631-24.963 6.429-7.384 10.829-16.922 12.19-27.57 1.05-8.215 4.498-16.123 7.212-24.266a75.923 75.923 0 0 1-1.559 10.125c-1.106 4.876-2.402 9.71-3.971 15.124-.488 1.599-.62 2.635-.752 3.67z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1100.214 1439.393c6.661-5.663 14.262-5.513 21.96-5.001 2.48.164 4.985.026 7.45.293 1.182.129 2.903.6 3.28 1.42.422.915-.1 2.6-.743 3.612-3.225 5.084-9.214 6.896-16.417 4.674-5.251-1.619-10.038-.344-14.192 2.365-10.101 6.586-10.44 20.608-1.023 28.327 10.48 8.589 19.675 8.376 32.122-.536 1.273-.912 3.17-.952 4.777-1.397.075 1.653.166 3.305.21 4.96.01.317-.088.692-.267.95-.741 1.073-1.303 2.574-2.342 3.088-8.935 4.422-18.088 8.558-28.378 5.749-6.426-1.754-13.107-2.643-18.248-8.157-7.184-7.706-7.302-22.398.22-30.445 3.367-3.601 7.52-6.466 11.591-9.902z\"\n        />\n        <path\n            fill=\"#131211\"\n            d=\"M440.813 1473.006c.053-.427.107-.855.136-2.007-2.61-7.16-1.065-12.927 2.863-18.282 2.382-3.248 4.82-6.455 7.232-9.68 0 0-.044-.037.34.015 1.4-.478 2.557-.841 3.405-1.566 5.266-4.503 11.772-5.518 18.239-6.852 9.527-1.965 23.036 10.346 22.406 20.666-3.721 0-7.515.002-11.309 0-9.304-.003-18.608-.065-27.911.011-4.987.041-7.5 2.156-6.827 5.784 1.814 9.796 7.476 17.005 16.907 19.667 7.99 2.255 16.056.118 22.973-4.827 1.219-.871 1.81-2.623 2.69-3.968 0 0 .042.033.465.005 5.253.05 6.254 1.193 3.979 4.927-1.428 2.343-3.617 5.135-6.005 5.807-6.698 1.887-13.637 3.076-20.554 3.997-12.504 1.667-22.063-3.385-29.03-13.697m23.018-24.58h17.586c-2.136-6.208-5.952-7.85-10.235-7.181-4.802.75-10.294.905-14.12 6.878 2.708.14 4.286.222 6.77.304z\"\n        />\n        <path\n            fill=\"#100F0E\"\n            d=\"M356.882 1455.307c-.394-.048-.789-.095-1.922-.25-4.726.009-8.711.182-12.698.231-9.736.121-10.325.884-8.058 10.007 2.179 8.77 8.495 14.319 16.467 15.79 7.98 1.472 16.767.356 23.017-6.314 2.221-2.371 4.23-3.476 7.288-2.741 0 0 .024-.03.02.373-.805 4.748-2.383 8.8-6.836 10.39-12.51 4.472-25.174 6.38-38.095 1.38-9.255-3.583-15.638-18.346-11.494-27.146 6.646-14.118 29.17-30.373 46.446-18.05 0 0-.017.023-.004.342.692.744 1.371 1.168 2.05 1.592 0 0-.055.087-.012.41 2.286 4.348 4.529 8.372 6.772 12.396l-.965 1.59h-21.976m-6.106-14.011c-.648.474-1.296.949-2.589 1.754-1.794.605-3.587 1.209-6.082 1.86-1.708 1.485-1.873 2.65 1.514 3.42 6.503-.077 13.006-.153 20.193-.143-.145-1.135-.29-2.27-.917-3.921-3.361-2.933-7.21-3.753-12.119-2.97z\"\n        />\n        <path\n            fill=\"#131211\"\n            d=\"M412.035 1488.214c-2.017-.006-4.033-.013-6.896-.04-2.329.074-3.81.168-5.292.263-.714-.102-1.428-.202-2.632-.638-4.243-2.908-8.176-5.27-11.63-8.198-.912-.774-1.088-3.89-.293-4.877 1.331-1.654 3.65-2.622 5.727-3.441.287-.113 1.537 2.291 2.384 3.5.74 1.056 1.423 2.189 2.333 3.082 5.596 5.49 12.469 5.008 19.117 3.23 5.747-1.538 9.64-7.444 8.788-12.314-1.1-6.282-6.317-5.804-10.927-6.062-5.41-.302-10.959.127-16.21-.937-9.045-1.833-11.268-8.656-5.213-15.73 5.765-6.737 13.404-10.845 22.2-11.92 4.345-.532 8.923.152 13.287.91 1.274.22 2.174 2.59 3.246 3.976 0 0-.025-.018-.337.01-.73.703-1.147 1.38-1.565 2.055 0 0-.095-.057-.464-.01-4.93 2.463-9.393 3.144-14.425.842-4.154-1.9-11.788.91-14.134 4.737-.508.829.266 2.443.45 3.696 0 0 .08.005.148.4 2.984 1.302 5.849 2.68 8.828 3.005 4.682.509 9.483-.05 14.155.504 4.999.593 9.196 3.143 10.552 8.33 1.227 4.698 2.847 9.736-2.81 13.275-1.202.751-1.642 2.721-2.432 4.13 0 0 .01.008-.347.015-2.185 1.27-3.907 2.737-5.864 3.752-3.167 1.641-6.488 2.986-9.744 4.455z\"\n        />\n        <path\n            fill=\"#151515\"\n            d=\"M813.603 1453.985c-.482-3.893-1.302-7.332-1.229-10.752.048-2.19.827-5.014 2.34-6.357 1.772-1.573 4.747-2.576 7.104-2.415 1.448.098 2.717 2.838 4.38 4.752 1.676-.771 3.67-1.536 5.513-2.567 6.363-3.558 13.146-3.178 19.882-1.901 3.715.704 4.416 4.45 1.59 7.001-2.697 2.436-4.872 3.79-9.463 2.45-4.754-1.388-10.78.122-15.84 1.69-4.335 1.343-5.184 7.38-4.372 13.649.934 7.21 1.042 14.541 1.212 21.827.067 2.838-7.534 7.712-9.853 6.385-.981-.562-1.719-2.43-1.713-3.7.045-9.867.299-19.734.449-30.062z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M118.459 684.353c1.519 6.162 3.407 12.562 3.921 19.07 1.715 21.69 3.008 43.413 4.322 65.132.976 16.135 2.739 32.171 8.123 47.476 4.568 12.984 9.732 25.774 15.06 38.47 6.359 15.149 8.068 31.379 11.875 47.126 2.39 9.885 5.769 19.61 9.58 29.052 3.933 9.742 8.91 19.064 13.473 28.55.85 1.767 1.897 3.44 3.046 5.76.703 1.216 1.212 1.827 1.721 2.438 1.532 3.234 3.063 6.469 4.575 10.067-3.081-3.994-6.222-8.3-9.161-12.739-1.046-1.58-1.604-3.481-2.656-5.872-3.568-6.515-6.865-12.393-10.162-18.271-.019-.655-.038-1.31-.122-2.62-.67-1.227-1.277-1.8-1.884-2.374-.64-2.308-1.28-4.616-2.023-7.606-.733-1.56-1.364-2.439-1.995-3.318.009-.38.017-.759-.032-1.798-1.698-4.762-3.337-8.865-4.977-12.967a65.19 65.19 0 0 1-.92-3.951 21.793 21.793 0 0 0-1.077-3.048c-2.286-11.698-3.885-23.586-7.062-35.037-2.889-10.414-7.402-20.387-11.359-30.493-7.42-18.95-14.466-37.949-15.681-58.595-1.071-18.201-2.549-36.379-3.937-54.56-.894-11.72-1.966-23.426-2.918-35.142-.12-1.477 0-2.974.27-4.75z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1195.045 353.188c-6.926 2.952-13.67 6.479-20.817 8.728-12.246 3.854-24.88 5.476-37.674 2.904-5.185-1.042-10.25-2.683-15.9-4.344a213.285 213.285 0 0 1-2.889-1.659c-1.06-.723-1.867-1.294-2.687-2.212-.702-1.408-1.389-2.47-2.404-3.594-1.356-.76-2.385-1.458-3.445-2.576l-.517-7.46c-1.633.535-2.692.88-4.033 1.025-1.315-2.175-2.349-4.15-3.122-6.156 1.221.036 2.18.107 3.498-.006 3.565-8.183 1.185-15.696-.875-23.238l-1.852-.154c-.35 1.81-.7 3.621-1.275 5.733-1.01.886-1.796 1.471-2.742 1.702-1.504-4.076-3.511-7.707-4.039-11.54-.784-5.7-.135-11.59-.829-17.31-.54-4.456.684-6.322 5.423-5.74 1.22 2.742 2.163 5.311 2.967 8.227-.141 2.989-.141 5.63-.141 8.272l2.654.345 3.84-13.055s.092-.321.27-.656c.375-.67.575-1.004.774-1.339.71-2.22 1.418-4.44 2.71-6.868 1.672.12 2.761.447 3.9 1.156a41.455 41.455 0 0 0 1.167 3.132c-.002-.012-.027-.007-.06.413.665 2.146 1.365 3.873 2.052 5.61-.013.01-.041.018-.086.485.157 2.33.36 4.195.413 6.04-.149-.02-.443-.085-.443-.085-.965-1.363-1.925-2.73-2.898-4.088-1.018-1.422-2.047-2.834-3.672-5.08-1.998 5.123-3.982 8.795-4.826 12.712-1.196 5.549-3.624 5.039-7.193 2.374-.6-.449-1.44-.573-2.173-.848-2.087 5.684-.531 8.688 4.946 8.878 3.86.134 4.369 2.819 4.719 5.28 1.254 8.824 2.067 17.71 3.302 26.536.246 1.757 1.445 3.479 2.525 4.988.737 1.03 2.191 1.521 3.05 2.496 9.379 10.649 22.213 11.326 34.63 10.402 11.055-.822 21.962-4.106 32.829-6.739 3.376-.817 7.146-2.364 6.893-7.587.892.175 1.76.744 2.786 1.902.521 1.39.883 2.192 1.244 2.994z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M430.362 1439.01c-1.41-1.377-2.31-3.748-3.584-3.969-4.364-.757-8.942-1.44-13.287-.91-8.796 1.076-16.435 5.184-22.2 11.92-6.055 7.075-3.832 13.898 5.214 15.731 5.25 1.064 10.798.635 16.209.937 4.61.258 9.827-.22 10.927 6.062.852 4.87-3.041 10.776-8.788 12.313-6.648 1.779-13.52 2.262-19.117-3.23-.91-.892-1.593-2.025-2.333-3.08-.847-1.21-2.097-3.614-2.384-3.501-2.077.819-4.396 1.787-5.727 3.441-.795.988-.62 4.103.294 4.877 3.453 2.928 7.386 5.29 11.268 8.197-6.537.223-10.701-3.999-14.626-8.767-10.202 9.908-23.11 10.173-35.953 9.85-8.071-.202-15.652-3.898-20.203-10.12-7.179-9.812-7.263-20.424 2.88-31.905 7.4-8.378 17.095-13.056 28.083-14.57 5.543-.763 10.242 1.851 13.99 6.34-17.284-11.972-39.808 4.283-46.454 18.4-4.144 8.801 2.24 23.564 11.494 27.147 12.92 5 25.584 3.092 38.095-1.38 4.453-1.59 6.031-5.642 6.82-10.378 2.151-.96 4.473-1.204 6.44-2.169 3.975-1.947 6.586-1.142 8.23 3.013 2.198 5.556 6.3 7.436 14.713 6.741 5.504-.455 10.86-4.625 11.3-9.585.125-1.417-1.905-4.064-3.337-4.38-3.995-.885-8.206-.747-12.312-1.192-4.495-.486-9.193-.506-13.4-1.923-6.99-2.354-9.33-10.679-4.233-16.248 8.453-9.235 17.974-17.013 32.035-13.953 1.358.296 2.903-.35 4.368-.45 4.464-.31 7.111 2.728 5.578 6.741z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M852.992 102.454c-5.069-.412-10.137-.824-16.015-1.268-2.205-.103-3.6-.172-5.173-.46-.712-.22-1.245-.22-2.2-.378-5.993-.986-11.566-1.815-17.138-2.644-3.37-.766-6.74-1.532-10.274-2.576 2.73-.37 5.687-.9 8.503-.478 10.95 1.644 21.803 4.408 32.799 5.132 7.203.475 14.463-.371 21.466 2.121 11.932 4.247 24.322 7.527 35.705 12.931 24.327 11.55 48.269 23.942 72.061 36.568 6.23 3.306 12.687 6.233 18.047 11.814 4.467 4.651 12.262 6.218 18.715 8.825 10.876 4.395 21.663 8.378 30.51 16.974 6.054 5.883 14.266 9.566 21.618 14.061.866.53 2.395-.028 3.985.208.023 1.049-.322 1.808-.667 2.568-1.734-.553-3.468-1.105-5.723-2.065-2.074-1.346-3.662-2.232-5.172-3.233a3058.123 3058.123 0 0 1-18.569-12.41c-3.67-2.473-7.032-5.592-10.998-7.401-10.273-4.688-20.857-8.692-31.2-13.235-2.949-1.295-5.57-3.403-8.205-5.326-1.93-1.408-3.425-3.511-5.481-4.63-6.847-3.721-13.771-7.328-20.83-10.63-10.666-4.988-21.479-9.663-32.211-14.51-4.797-2.168-9.721-4.136-14.264-6.755-3.046-1.757-5.202-5.16-8.316-6.674-8.616-4.189-17.311-8.428-26.383-11.4-7.908-2.591-16.372-3.485-24.59-5.13z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1181.147 926.805c3.202-12.223 6.752-24.402 13.3-35.524 7.982-13.556 16.01-27.129 23.02-41.191 3.067-6.153 3.448-13.602 5.47-20.335.937-3.117 3.019-5.872 4.338-8.897 1.386-3.179 3.434-6.46 3.521-9.74.245-9.213 5.766-16.112 9.321-23.874.37-.806 1.19-1.405 1.8-2.1l1.496.374-1.819 12.72 1.265.292c1.741-6.496 7.178-11.786 4.336-19.799-2.327-6.56.812-12.933 2.747-19.21.578-1.872 1.478-3.762 1.524-5.661.147-6.083 4.104-9.801 8.246-13.729-.305 1.63-.51 3.738-1.665 4.92-3.775 3.861-4.07 8.1-3.274 13.212 1.753 11.268-2.4 21.51-6.351 31.793-3.197 8.32-5.702 16.902-8.718 25.295-.38 1.06-1.996 1.677-3.04 2.5-.55-1.046-1.698-2.2-1.532-3.116.375-2.06 1.535-3.962 2.136-6 1.175-3.98 2.186-8.01 3.266-12.02l-2.281-.864c-1.436 2.802-3.843 5.511-4.117 8.422-.716 7.616-3.357 14.146-7.19 20.75-3.088 5.32-5.204 11.759-5.712 17.871-.587 7.058-3.677 12.612-6.904 18.362-7.619 13.577-15.712 26.909-22.773 40.768-3.836 7.53-5.942 15.939-8.878 23.933-.138.377-.752.579-1.532.848z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1146.094 1456.867c-.704-5.157-2.203-9.929-1.786-14.526.224-2.47 3.403-5.169 5.89-6.763 1.684-1.08 4.494-.551 6.777-.399.354.024.851 1.888.834 2.894-.197 11.862-.843 23.731-.601 35.583.143 7.028-1.007 10.465-7.176 13.76-3.04 1.623-5.588.358-5.254-3.016.531-5.376 1.913-10.672 2.365-16.05.234-2.793-.79-5.684-1.167-8.542-.106-.808.072-1.654.118-2.94z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M154.047 1018.107c-5.286 2.37-10.67 4.381-16.018 6.486-6.027 2.373-8.146 5.808-7.994 12.196.19 7.952 2.785 15.046 6.861 21.805 1.933 3.204 2.954 6.944 4.627 10.323 4.206 8.49 10.91 14.853 18.034 20.855 1.762 1.485 3.597 3.036 4.877 4.912 4.036 5.918 9.476 10.009 15.652 13.446 1.538.855 2.226 3.236 3.305 4.916-1.548.581-3.051 1.454-4.65 1.7-15.203 2.33-30.667 3.587-44.887 10.106-6.392 2.93-10.128 8.187-11.151 15.268-.539 3.727-1.23 7.43-1.996 11.572-3.536-3.524-1.747-7.835-.811-11.958 2.866-12.633 11.376-18.896 23.746-20.996 12.467-2.116 24.873-4.589 36.2-6.7-3.962-3.358-9.294-7.37-14.02-12.001-7.503-7.35-15.316-14.568-21.646-22.872-5.113-6.708-8.39-14.857-12.184-22.513-2.934-5.92-5.248-11.923-5.234-18.914.012-6.375 2.817-10.168 8.034-12.381 5.617-2.384 11.523-4.093 17.33-6.014.51-.168 1.224.283 1.925.764z\"\n        />\n        <path\n            fill=\"#171716\"\n            d=\"M251.174 1444.6c.01 10.885-.025 21.343.12 31.799.064 4.732-3.205 9.996-7.584 11.592-3.107 1.133-5.402-1.036-4.79-4.586.911-5.296 2.368-10.557 2.655-15.884.224-4.164-.98-8.404-1.546-12.61-.567-4.223-1.243-8.436-1.613-12.675-.097-1.108.43-2.73 1.252-3.37 2.19-1.71 4.546-3.416 7.114-4.388 3.945-1.493 5.775.564 4.835 4.771-.356 1.593-.29 3.28-.443 5.351z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M827.734 1269.011c-4.31 5.486-10.96 6.22-17.367 7.472-2.133.418-4.328.523-6.45 1.247 16.005 8.93 32.928 9.026 50.487 5.032-.164 6.234-4.305 7.171-8.39 8.74 4.746 4.424 9.915 6.873 15.848 6.431 9.886-.735 19.946-1.109 28.822-6.493 1.68-1.019 3.262-2.453 5.084-2.9 1.582-.388 3.44.35 5.175.592-.512 1.53-.563 3.752-1.625 4.462-3.07 2.054-6.548 3.5-9.865 5.184l.197 1.747c5.121 0 10.617 1.2 15.285-.255 9.061-2.824 17.697-7.05 26.421-10.894 2.493-1.097 4.684-2.876 7.38-4.287-4.398 3.408-8.782 7.625-14.009 9.925-9.8 4.312-19.792 8.624-31.023 7.674-5.643-.478-6.657-1.357-5.878-6.395-5.968.986-11.887 2.11-17.85 2.911-7.459 1.003-14.998 1.844-21.57-3.159-1.565-1.191-2.798-2.817-4.184-4.243 1.527-1.285 3.056-2.568 4.582-3.854.347-.293.687-.595 1.828-1.585-2.798 0-4.757.026-6.716-.005-8.38-.13-16.802.165-25.127-.589-4.94-.447-9.787-2.395-14.551-4.03-1.304-.448-2.894-2.146-2.992-3.379-.08-1.02 1.654-2.84 2.906-3.206 7.682-2.25 15.456-4.189 23.582-6.143m62.784 25.477 1.842.45.126-.73c-.513-.048-1.025-.097-1.968.28m6.865-3.894 1.014.241c-.223-.217-.446-.434-1.014-.241zM939.5 1285.126c.641-1.61 1.393-3.432 2.662-4.76 4.287-4.484 8.587-8.99 13.26-13.052 1.42-1.236 4.063-1.068 6.146-1.543-.111 1.723.248 3.656-.412 5.133-3.137 7.015-7.875 12.759-14.531 18.013 5.242 0 10.589.643 15.695-.188 4.747-.774 9.118-3.75 13.864-4.647 10.891-2.059 17.751-10.923 27.22-15.248 2.946-1.345 6.257-1.896 9.192-3.26 5.664-2.636 11.37-5.273 16.713-8.486 9.326-5.61 18.81-11.104 27.43-17.693 6.863-5.247 12.534-12.053 19.07-18.15-.348 1.316-.73 2.957-1.759 3.857-7.68 6.713-13.82 15.005-23.164 20.07-8.621 4.674-16.177 11.273-24.577 16.413-4.852 2.97-10.254 5.775-15.75 6.78-7.438 1.36-12.355 6.031-17.934 10.122-2.56 1.877-5.422 3.514-8.385 4.634-7.73 2.921-15.496 5.826-23.43 8.104-6.214 1.785-12.307.067-18.699-2.975 8.303-4.635 14.228-11.045 17.786-19.471l-1.155-1.21c-1.85 1.918-3.701 3.832-5.547 5.754-2.063 2.147-3.993 4.443-6.214 6.41-2.228 1.973-4.743 3.62-7.48 5.393z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1258.938 371.42c5.436.389 9.918 2.492 13.199 7.263 2.226 3.237 5.145 6.053 8.022 8.774 6.372 6.028 9.527 13.893 12.992 21.645 4.278 9.57 4.152 19.876 5.297 29.961 1.076 9.476 1.833 18.988 3.785 28.665.782-10.391 1.563-20.782 2.616-31.45.433 6.477 1.527 13.37.55 19.955-1.67 11.264-4.62 22.339-7.093 33.48-.232 1.047-.898 1.998-1.363 2.993l-1.62.1c-.284-1.935-1.309-4.127-.738-5.764 6.34-18.19 2.641-36.394 1.04-54.75-.869-9.955-2.509-19.499-7.017-28.172-3.383-6.508-8.295-12.27-12.874-18.092-4.599-5.85-9.83-11.12-16.796-14.608z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M1126.995 369.047c3.713.698 7.4 1.755 11.143 2.02 7.282.515 14.603.9 21.891.703 3.372-.09 6.673-1.818 10.06-2.55 11.642-2.519 23.308-4.925 35.44-6.945a44.848 44.848 0 0 1 2.377 3.025s-.045.455-.23.59c-4.956-1.311-9.42-.869-14.202.925-4.72 1.77-9.954 2.154-14.952 3.2-6.411 1.341-12.758 3.448-19.23 3.928-8.172.607-16.442-.048-24.668-.254-2.965-.074-5.922-.425-9.678-.7-2.576-1.046-4.357-2.042-6.138-3.037-8.84-7.576-11.495-6.553-13.898 5.209-.387 1.896-1.326 3.68-2.381 5.823-1.02.276-1.667.246-2.624.045-.172-2.112-.035-4.054.481-6.06 1.48-3.354 2.582-6.646 3.865-10.21 1.357-1.217 2.53-2.163 4.131-3.01 2.171.032 3.915-.037 6.048-.017 1.453.156 2.516.223 3.772.375.193.084.585.24.585.24 1.695 1.624 3.39 3.248 5.59 5.154 1.21.703 1.914 1.124 2.618 1.546z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M491.603 1471.955c-.527 1.357-1.117 3.109-2.336 3.98-6.917 4.945-14.982 7.082-22.973 4.827-9.431-2.662-15.093-9.871-16.907-19.667-.672-3.628 1.84-5.743 6.827-5.784 9.303-.076 18.607-.014 27.911-.01h11.309c.63-10.32-12.879-22.632-22.406-20.667-6.467 1.334-12.973 2.349-18.24 6.852-.847.725-2.004 1.088-3.385 1.588 2.403-2.194 4.898-4.916 7.985-6.428 17.121-8.386 29.176-4.567 37.76 13.847 1.776 3.807.584 6.217-3.825 6.318-5.924.134-11.854-.01-17.777.156-7.289.205-14.579.511-21.848 1.053-.823.06-2.278 2.033-2.147 2.93 1.34 9.18 8.294 17.19 17.36 18.119 6.745.69 13.792-.471 19.583-5.01.911-.713 1.837-1.41 3.109-2.104z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1135.98 1000.986c.66-.734 1.32-1.468 2.436-2.522 3.489-4.377 6.52-8.434 9.553-12.49 0 0 .031.026.358-.01 4.789-5.999 9.25-11.963 13.712-17.928 0 0-.039-.036.313-.086 1.782-2.019 3.211-3.988 4.64-5.958.254-.22.467-.474 1.067-1.027.943-1.156 1.457-2.048 1.97-2.94 0 0-.029-.025.301-.07 4.633-1.56 1.89 1.706 1.645 2.256-2.522 5.665-5.234 11.245-7.893 16.848 0 0-.079-.054-.387.044-5.64 6.735-10.978 13.368-16.303 20.012-1.632 2.035-3.23 4.095-4.845 6.144-.767.7-1.535 1.402-2.792 2.461-4.266 3.98-8.042 7.6-11.818 11.222-1.009.774-2.017 1.548-3.407 2.25-.381-.073-.493-.156-.498-.507.322-1.458.65-2.564.977-3.67.346-.417.693-.833 1.431-1.575 2.092-2.71 3.793-5.093 5.494-7.477.66-.737 1.32-1.475 2.407-2.556.83-1.036 1.235-1.729 1.639-2.421z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M1092.79 1202.175c1.735-3.244 3.993-6.411 5.83-9.806 7.442-13.757 16.074-27.073 21.692-41.55 4.34-11.187 5.359-23.797 6.868-35.898.945-7.58.658-15.455-.186-23.074-.681-6.154-2.908-12.157-4.667-18.163-1.184-4.045-2.747-7.978-3.921-12.459.44-.587.66-.677.881-.767 6.116 13.169 10.02 27.138 11.036 41.444.678 9.558-1.491 19.396-2.989 29.015-3.786 24.318-16.178 44.955-28.784 65.433-1.36 2.21-3.6 3.879-5.76 5.825z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1162.213 953.131a31.286 31.286 0 0 1 2.063-1.763c.956-.882 1.462-1.481 1.968-2.08 0 0-.105-.159.265-.152.826-.603 1.282-1.213 1.738-1.822 0 0-.061-.218.179-.054.24.165.624.258.624.258-.548 1.48-.762 3.227-1.697 4.398-7.509 9.41-15.166 18.702-22.754 28.05a19900.702 19900.702 0 0 0-29.317 36.208c-.509.63-.846 1.397-1.453 2.506-.06.389.07.373.201.356 2.43-.02 4.86-.04 7.567.328-6.15 4.868-12.539 9.408-19.044 13.772-1.12.75-2.74.753-4.223.82-.272-.846-.45-1.41-.321-2.11.738-.915 1.172-1.692 1.605-2.469 7.708-8.399 15.884-16.42 23.02-25.28 12.6-15.645 24.565-31.8 37.363-48.042 1.117-1.175 1.667-2.05 2.216-2.924z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M701.468 72.32c.9.974 1.802 1.948 2.666 3.266-2.69-1.647-6.114-3.12-7.857-5.721-5.698-8.502-10.852-17.374-16.075-26.186-2.266-3.824-3.88-7.929-.254-11.886 2.39-2.607 10.355-2.76 14.028-.23 1.877 1.294 3.496 3.011 5.066 4.692 6.32 6.765 12.597 13.57 18.835 20.409 1.411 1.547 2.603 3.294 3.639 5.111-9.048-4.273-14.535-12.062-20.39-19.517-2.334-2.974-4.865-5.85-7.642-8.407-2.967-2.73-9.382-3.013-11.522-.524-2.773 3.227-1.183 6.5.683 9.605 4.067 6.767 8.114 13.547 12.255 20.97.663 1.196 1.24 1.742 1.816 2.288 0 0 .054.04.038.363.51.817 1.036 1.311 1.561 1.806.092.14.184.28.382.963.994 1.36 1.882 2.179 2.77 2.997z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1260.356 789.968c-1.22 4.544-2.295 9.418-4.4 13.798-6.806 14.171-14.125 28.095-20.977 42.245-4.085 8.434-11.196 15.058-13.119 24.914-1.553 7.963-5.219 15.517-7.994 23.236-.213.59-.799 1.046-1.524 1.703-.52-.265-1.019-.867-.897-1.045 5.86-8.565 6.99-18.728 9.812-28.34 1.427-4.86 2.98-10.18 6.102-13.944 7.578-9.14 13.17-19.389 18.289-29.882 4.773-9.785 8.532-20.065 12.779-30.109.376-.89 1.06-1.65 1.929-2.576z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1281.97 712.974c.03-.735.06-1.47.159-2.977.775-5.224 2.088-9.733-1.174-14.26-.136-1.31-.247-2.178-.358-3.047.047-1.3.093-2.601.486-4.523.404-1.905.46-3.188.518-4.472.106-5.586.212-11.172.63-17.495.113-3.56-.087-6.381-.287-9.203-.015-2.109-.03-4.217.431-6.808 1.34-1.45 2.203-2.42 3.067-3.388-.313 15.155-.68 30.309-.915 45.465-.125 8.002-.022 16.008-.022 24.53 1.125-1.338 2.017-2.399 3.558-3.679.95-.225 1.25-.23 1.55-.236-.113.776-.226 1.552-.684 2.924-.407 1.532-.47 2.469-.531 3.405 0 0-.284.057-.688-.026-1.524 1.858-2.644 3.8-3.763 5.74 0 0 .048.04-.29.03-.76-.002-1.18.005-1.6.013-.236-2.278-.471-4.557-.543-7.528.262-1.95.359-3.208.456-4.465z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M662.02 83.97c-.74.026-1.48.05-2.985.057-2.667.495-4.57 1.01-6.473 1.525l-8.595.25c-3.386.573-5.913 1.12-8.44 1.667-1.056-.001-2.11-.003-3.488-.237.983-1.083 2.224-2.54 3.605-2.688 12.01-1.286 24.044-2.345 36.074-3.437.794-.072 1.614.14 2.638.24l-.229 3.97h37.336c-2.025-2.54-3.276-4.109-4.468-6.037 1.039.086 2.018.53 3.389 1.39 1.105.73 1.817 1.044 2.53 1.358 0 0 .325.27.565.66.885 1.666 1.53 2.941 1.987 4.23-.437.115-.595.298-.662.561-12.96.201-25.92.402-39.611.352a1754.057 1754.057 0 0 0-13.172-3.86z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1303.32 415.775c-2.06-2.663-4.595-5.322-5.591-8.468-5.125-16.189-15.648-28.914-27.2-40.475-6.391-6.396-15.402-10.174-23.381-15.458 1.346-.204 3.092-.543 4.299.112 11.402 6.194 22.478 12.811 30.05 23.888 8.67 12.68 17.992 24.98 21.822 40.4z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M713.17 1265.864c4.954-1.345 10.33-2.534 15.717-3.674 1.828-.386 3.682-.647 5.388-2.131h-40.18l-.07-1.094c6.775-.962 13.55-1.924 20.844-2.372 2.373.832 4.217 1.342 6.082 1.434 7.716.382 15.445.533 23.148 1.067 1.005.07 1.889 1.872 2.828 2.871-2.7.35-5.4.7-8.836 1.062a19.097 19.097 0 0 0-3.138.843c-3.044.34-6.088.682-9.922 1.064-2.223.336-3.655.633-5.087.929-2.116.058-4.231.117-6.774 0z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1210.409 897.92c-2.524 5.643-5.584 11.258-8.149 17.09-1.489 3.385-2.733 7.14.498 10.882-2.519 2.025-3.294.164-3.694-1.973-.266-1.424-.186-2.913-1.353-4.842l-14.65 29.018-2.104-.757c.421-1.863.487-3.906 1.323-5.56 4.532-8.972 9.16-17.899 13.994-26.71.912-1.662 2.944-2.688 4.376-4.092 1.132-1.11 2.27-2.26 3.172-3.554 2.159-3.095 4.18-6.287 6.587-9.502z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M428.345 1480.025c.435-1.442.875-3.412 2.076-4.163 5.658-3.54 4.038-8.577 2.81-13.275-1.355-5.187-5.552-7.737-10.551-8.33-4.672-.553-9.473.005-14.155-.504-2.98-.325-5.844-1.703-8.814-2.967 5.674-.126 11.42-.089 17.128.383 8.15.675 15.355 3.313 18.812 10.492 4.986-6.359 9.84-12.549 15.043-18.681-2.062 3.282-4.5 6.49-6.882 9.737-3.928 5.355-5.474 11.122-2.976 17.974-1.234-.6-2.38-1.616-3.761-2.84.047 5.85-3.814 9.28-8.73 12.174z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1065.133 206.14c.146-1.048.491-1.807.817-2.88.969-1.38 1.958-2.444 3.455-3.853 1.222-1.679 1.936-3.013 2.65-4.346.468-.298.937-.595 2.012-.914 1.865-.474 3.124-.927 4.383-1.38a48.74 48.74 0 0 1 2.772-1.505c4.4-.936 8.407-2.731 11.947-2.06 6.067 1.15 11.842 3.843 17.74 5.889 1.355 1.078 2.71 2.156 4.436 3.63.462.73.555 1.064.654 1.742.034 1.03.06 1.715-.207 2.43-.485.08-.675.133-.837.143.028-.041-.014.048-.107-.276-1.059-.763-2.025-1.203-3.234-1.786-.662-.525-1.08-.907-1.592-1.621-3.56-1.659-7.24-2.6-10.446-4.39-6.816-3.805-13.04-4.12-19.005 1.544-.77.731-2.265.65-3.168 1.3-1.982 1.429-3.864 3.017-5.665 4.67-1.57 1.441-2.973 3.062-4.45 4.603-.652-.217-1.304-.435-2.155-.94z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M270.422 274.995c-.1 3.528-.562 7.121-1.382 11.253-1.908 1.276-3.46 2.014-5.012 2.752 1.102-7.995 2.108-16.005 3.343-23.98.642-4.146 1.688-8.23 2.552-12.342l-1.881-.649c-2.109 5.133-4.2 10.273-6.339 15.392-.615 1.474-1.37 2.89-2.385 4.445 1.83-6.415 3.823-13.006 6.294-19.412.43-1.116 2.883-1.452 4.401-2.148.528 1.454 1.692 3.011 1.474 4.343-1.085 6.647-2.61 13.22-3.816 19.848-.519 2.853-.637 5.778-.126 8.771.838-2.737 1.676-5.473 2.877-8.273z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1285.53 646.447c-.952 1.323-1.815 2.291-2.967 3.328-.368-2.913-.448-5.894-.337-9.512-.167-2.192-.524-3.746-.882-5.3-.155-2.983-.31-5.967-.365-9.816-.138-2.036-.378-3.205-.617-4.375-.016-.623-.032-1.246.052-2.568-.056-4.2-.211-7.7-.124-11.444.883-3.91.277-6.338-4.302-4.815-.025-4.462 2.27-7.788 5.67-10.842.68 4.614.747 9.324 1.3 13.976.478 4.013 1.51 7.96 2.298 11.937.08.955.162 1.91.061 3.696-.05 8.29.081 15.748.213 23.206.03.725.059 1.45 0 2.53z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M380.988 1471.683c-3.07-.388-5.079.717-7.3 3.088-6.25 6.67-15.037 7.786-23.017 6.314-7.972-1.471-14.288-7.02-16.467-15.79-2.267-9.123-1.678-9.886 8.058-10.007 3.987-.05 7.972-.222 12.406-.163-4.43.994-9.28 2.16-14.19 2.544-5.918.464-6.564 1.035-4.911 6.864 2.878 10.15 12.944 15.87 23.32 14.31 6.211-.934 11.31-2.889 15.603-7.523 1.694-1.83 4.365-3.682 6.498.363z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M787.006 1262.447c1.092-.2 2.353-.327 3.346.13 16.105 7.407 31.276 3.503 46.191-3.7.594-.287 1.14-.944 1.713-.95 1.502-.014 3.007.237 4.51.382-.514 1.45-.597 3.52-1.624 4.236-2.95 2.054-6.28 3.56-9.823 5.277 1.335-1.765 3.032-3.524 5.524-6.108-4.927 1.69-9 3.245-13.164 4.487-12.645 3.772-25.056 4.561-36.673-3.754z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1285.49 616.745c-1.022-3.705-2.054-7.653-2.532-11.666-.553-4.652-.62-9.362-1.189-14.317a1106.78 1106.78 0 0 1-4.285-33.35c-.334-2.929-.24-5.906-.168-9.318 1.597 5.725 3.522 11.841 4.336 18.102 1.55 11.916 2.555 23.906 3.598 35.882.415 4.777.33 9.597.24 14.667z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M440.494 1473.031c7.285 10.287 16.844 15.339 29.348 13.672 6.917-.921 13.856-2.11 20.554-3.997 2.388-.672 4.577-3.464 6.005-5.807 2.275-3.734 1.274-4.876-3.994-4.948.666-3.156 2.73-2.83 5.038-1.47 2.638 1.553 2.85 3.681 1.775 6.4-3.123 7.897-10.4 9.144-17.292 10.68-4.312.961-8.83 1.032-13.262 1.422-11.344.997-20.236-3.858-27.644-11.918-.795-.865-.589-2.65-.528-4.034z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1098.425 1034.237c1.389-.348 3.009-.35 4.128-1.1 6.505-4.365 12.893-8.905 19.42-13.722.099-.336.07-.342.41-.299.779.002 1.216-.039 1.654-.08l.172.127c-.92 2.109-1.9 4.175-3.38 6.598-3.741 3.465-6.982 6.572-10.223 9.679 0 0-.07.106-.328.188-.54.248-.668.493-.64.819 0 0-.034.094-.397.194-1.432 1.537-2.501 2.975-3.57 4.413 0 0-.414.147-.694-.234-2.37-2.448-4.461-4.516-6.552-6.583z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1160.873 1405.92c-.256 1.812-.162 3.887-1.135 4.728-3.235 2.796-6.784 5.255-10.375 7.591-.855.556-3.191.514-3.382.088-.514-1.143-.826-3.133-.173-3.915 2.946-3.533 6.052-7.006 9.575-9.93.87-.721 3.52.7 5.49 1.439z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M118.209 616.973c-.198 6.607-1.264 13.359-1.134 20.087.271 14.061 1.173 28.11 1.67 42.62-4.405-5.122-2.091-11.585-2.523-17.664-.312-4.39-.377-8.805-.348-13.208.064-9.555.211-19.11.468-28.66.028-1.026 1.004-2.027 1.867-3.175zM169.141 1184.14c3.024-6.271 6.238-12.665 9.837-18.834.625-1.071 2.913-1.743 4.38-1.66 9.236.525 18.448 1.546 27.687 1.912 4.072.161 8.19-.828 12.63-1.146-2.658 1.053-5.656 1.956-9.496 2.812-1.674.023-2.507.094-3.34.164-7.659-.13-15.318-.259-23.586-.63-1.17-.394-1.73-.545-2.292-.697-2.972-2.318-4.484-.209-5.842 2.01-3.256 5.318-6.443 10.678-9.978 16.068z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1212.514 932.043a275.055 275.055 0 0 1 8.387-16.31c7.496-13.452 15.077-26.859 23.065-40.576.442-.292.907-.29.907-.29-4.08 8.626-7.664 17.534-12.364 25.808-6.083 10.71-13.058 20.913-19.995 31.368z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M763.2 81.462c.679 1.229 1.359 2.458 2.031 4.393-1.151 1.335-2.27 2.436-3.442 2.496-2.538.129-5.102-.275-7.655-.46-.994-.122-1.987-.243-3.472-.713-1.5-.666-2.507-.983-3.515-1.3 0 0-.396-.19-.674-.528-.907-.755-1.536-1.17-2.166-1.586a979.483 979.483 0 0 1-9.689-8.448c-.929-.809-1.498-1.23-2.068-1.65-1.933-1.857-3.865-3.714-6.08-6.074a420.413 420.413 0 0 1-1.427-2.622c1.193.458 2.614.644 3.54 1.42 5.306 4.448 10.94 8.624 15.602 13.686 5.148 5.591 11.366 5.89 18.513 6.046-1.704-3.833-3.207-7.216-4.627-10.98 1.013.148 1.943.676 2.955 1.801.78 1.904 1.476 3.211 2.173 4.519z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1169.364 315.123c9.447 4.54 19.251 1.533 28.86 1.01 2.533-.138 4.805-3.296 7.394-4.706 2.091-1.14 4.478-1.737 7.12-2.41-8.117 6.105-16.634 11.878-27.858 10.734-1.62-.165-3.39 1.137-5.925 2.065-1.183-.512-3.367-1.635-5.68-2.33-.533-.161-1.505 1.138-2.358 2.134-.246.405-.41.442-.846.12-.832-.862-1.392-1.367-1.951-1.872 0 0-.095-.46-.183-1.017.418-1.614.922-2.671 1.427-3.728z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M656.274 1272.002c-.323-.527-.094-.73.951-.776 13.335.11 25.986.211 38.9.48 1.039.018 1.814-.131 3.542-.463-1.791-.92-2.631-1.35-3.668-2-.924-.372-1.652-.526-2.38-.68-.251-4.166 3.1-1.741 5.057-2.103 1.439 2.18 2.5 3.906 3.561 5.632-.25.244-.5.487-1.263.855a14.475 14.475 0 0 0-1.985.939c-8.015 0-16.03.001-24.806-.264-2.9-.375-5.042-.482-7.183-.59-3.435-.285-6.87-.57-10.726-1.03z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1208.159 365.06c-.887-.626-1.52-1.491-2.208-2.775 10.56-2.516 21.146-2.619 31.854-.78 7.812 1.34 14.975 3.794 21.135 9.2-6.583-2.13-12.98-5.78-19.774-6.818-9.296-1.419-18.895-.902-28.366-1.043-.786-.011-1.592 1.286-2.641 2.215zM1195.477 353.185c-.793-.799-1.155-1.6-1.499-2.73 3.008-.352 6.21.314 8.952-.525 11.459-3.506 23.133-3.303 34.834-2.563 2.128.134 4.16 1.802 6.298 3.109-6.256-.233-12.615-1.552-18.882-1.205-7.984.443-15.89 2.254-23.837 3.427-1.796.265-3.622.328-5.866.487z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M244.014 1410.016c1.336-2.019 2.291-4.56 4.125-5.892 1.5-1.089 4.438-1.576 6.038-.83 2.57 1.199 3.968 4.317 1.553 6.612-4.03 3.83-8.56 7.18-13.162 10.313-.721.49-3.29-.904-4.337-2.041-.599-.651-.302-2.878.388-3.8 1.257-1.683 3.106-2.923 5.057-3.997-.506 1.34-1.534 2.232-2.167 3.348-.655 1.154-.927 2.526-1.367 3.802 1.357-.069 3.019.34 4.013-.294 3.18-2.031 6.357-4.205 9.012-6.849.958-.954.433-3.396.584-5.16-1.677.248-3.561.1-4.979.842-1.785.935-3.19 2.597-4.758 3.946z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1261.888 676.024a7.692 7.692 0 0 1-.051-1.724c.115-.354.554-.317.878-.262 2.213 1.651 4.103 3.246 6.189 5.073.271.42.346.607.31 1.1.112.899.336 1.491.56 2.084.423-.738.845-1.475 1.493-2.277.227-.066.695-.022.695-.022-.335 1.587-.134 3.972-1.1 4.62-3.69 2.48-2.6 6.05-3.03 9.403-.767 5.992-1.904 11.937-3.238 17.995-.455-.673-.558-1.44-.458-2.917.208-1.894.214-3.077.22-4.261.202-1.017.405-2.034.89-3.733.431-4.163 1.165-7.743.591-11.1-.81-4.746-2.586-9.328-3.949-13.98z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M227.041 1164.952c4.227-.129 7.062 2.022 7.616 6.325.935 7.262.823 14.427-1.992 21.445-1.432 3.568-1.969 7.496-3.25 11.323.227-3.958.796-7.977 1.361-11.998.727-5.17 1.433-10.344 2.178-15.511.742-5.15-.942-9.015-5.913-11.584z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1116.087 202.864c-.027-.686-.054-1.371.29-2.348 1.116-.358 1.86-.427 2.604-.495 4.062 2.269 8.123 4.537 12.432 7.31.773 1.082 1.3 1.66 1.825 2.237.878 1.527 1.756 3.054 2.731 5.207.437 1.166.777 1.707 1.2 2.52.099.46.113.648-.351.85-1.106.101-1.734.19-2.616.14-.925-.837-1.594-1.533-2.244-2.589-.997-1.446-2.013-2.533-3.178-3.805-.37-.418-.616-.616-.97-1.112-3.96-2.86-7.842-5.388-11.723-7.915z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M559.795 1256.928c6.556.801 13.271 1.637 19.838 3.125 9.175 2.079 18.24 4.644 27.483 7.333-.363.436-.859.541-1.966.365-2.5-.641-4.386-1-6.274-1.36-.715-.135-1.43-.271-2.782-.712-4.455-1.088-8.275-1.871-12.095-2.654-1.745-.34-3.49-.681-5.83-1.283-1.464-.39-2.334-.52-3.204-.65-1.416-.336-2.832-.67-4.862-1.328-2.117-.445-3.62-.568-5.124-.691-1.697-.607-3.394-1.213-5.184-2.145z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M356.987 1455.65c7.22-.343 14.546-.343 21.871-.343l.965-1.59c-2.243-4.024-4.486-8.048-6.73-12.426 4.594 1.717 8.648 8.35 7.727 12.652-.199.928-1.212 2.235-2.034 2.39-7.234 1.362-14.52 3.028-21.8-.682z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M121.892 1173.146c2.396 9.724 4.407 19.626 6.639 30.61.953-3.467 1.615-5.875 2.868-8.546.78-.225.97-.188 1.16-.15-.18 1.046-.362 2.094-.823 3.816-.437 2.487-.593 4.298-.749 6.11 0 0-.424.15-1.015.173-1.103.073-1.613.122-2.124.17-.793-1.522-1.948-2.963-2.317-4.583-1.679-7.355-3.236-14.743-4.597-22.162-.305-1.663.357-3.503.958-5.438zM145.865 1160.599c4.106 1.355 5.683 3.23 5.143 8.777-1.02 10.495.36 21.223.365 32.29-.929.317-1.481.196-2.034.075-.132-10.715-.479-21.433-.276-32.14.067-3.557-.483-6.36-3.198-9.002zM604.965 91.972s-.452.08-1.03.128c-2.384.614-4.189 1.18-5.993 1.745 0 0-.035.027-.355.045-.842.537-1.365 1.056-1.888 1.575 0 0-.183.096-.514.274-.94 1.251-1.55 2.325-2.158 3.398-2.055.308-4.11.616-6.913.899-1.875.278-3.001.582-4.128.886a57.64 57.64 0 0 1-3.84.249c-1.867.298-2.993.633-4.119.968-3.429.304-6.858.608-10.698.759 3.85-1.336 8.063-2.76 12.388-3.63 3.693-.743 7.54-.692 11.268-1.31 1.66-.275 3.186-1.344 4.783-2.028 4.249-1.817 8.503-3.62 12.994-4.936.24.492.203.978.203.978zM549.522 106.485c-4.054 1.14-8.109 2.28-12.75 3.747-1.709.904-2.83 1.482-3.952 2.059-4.136-2.146-8.232-4.375-12.432-6.387-1.256-.6-2.803-.594-4.588-.899-.516-.736-.661-1.438-.806-2.141 1.695.004 3.637-.52 5.032.13 2.506 1.168 4.497 3.57 7.051 4.472 2.607.92 5.738 1.255 8.451.778 4.748-.835 9.352-2.487 14.215-3.27.06.855-.08 1.183-.221 1.511z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M750.804 1256.447c4.098.27 8.2.82 12.293.746 7.59-.138 15.173-.64 23.184-.684.415.935.406 1.564.396 2.192.036.833.071 1.666.158 2.922-.266.412-.8.51-.87.372-2.613-5.136-7.056-3.303-11.978-2.933-3.918.09-6.966.162-10.014.234-4.033-.439-8.065-.878-12.548-1.589-.507-.601-.564-.93-.621-1.26z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M266.242 1173.262c.42-.341.839-.682 1.806-1.093 1.467-.598 2.386-1.126 3.305-1.653 2.263-.09 4.525-.18 7.475-.064 2.962-.058 5.272-.156 7.504-.622 5.012-1.045 9.986-2.274 14.975-3.428.378-.043.755-.086 1.622.024 1.697 0 2.904-.152 4.111-.303-3.193 1.278-6.285 3.168-9.599 3.713-8.437 1.389-16.984 2.1-25.461 3.268-1.718.237-3.323 1.297-5.46 1.952-.48-.025-.678-.22-.575-.48.167-.613.232-.963.297-1.314z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M799.078 94.37c-.978.047-2.022-.227-3.404-.53a121.881 121.881 0 0 1-8.582-11.821c-.424-1.209-.81-1.81-1.196-2.41-.187-.707-.375-1.415-.64-2.738-.504-1.164-.931-1.714-1.359-2.264-.921-2.97-1.842-5.941-2.805-9.573-.39-1.094-.739-1.527-1.088-1.96-.049-1.121-.098-2.241.022-3.748.773.454 1.603 1.212 1.945 2.148 1.914 5.23 3.86 10.454 5.507 15.77 2.117 6.836 6.093 12.298 11.6 17.125z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1278.147 713.99c-.137 2.22-.273 4.441-.78 6.837-7.14-5.711-6.982-5.7-1.469-13.366 1.69-2.351 2.198-5.554 3.762-8.007.37 3.678.225 6.995.08 10.313 0 0 .041.224-.323.194-.666 1.322-.968 2.675-1.27 4.029zM1260.79 602.09c.273-1.22.722-3.47 1.537-3.611 1.255-.218 3.565.66 4.014 1.69 1.6 3.666 2.602 7.593 4.041 12.037.32 1.01.428 1.403.508 2.173.131 1.669.29 2.961.626 5.694.96-2.17 1.31-2.962 1.875-3.86.215-.105.682-.212.682-.212v8.546c-5.276-3.536-4.8-8.362-5.979-12.36-.837-2.838-1.253-5.799-2.053-8.65-.8-2.848-2.607-3.158-5.252-1.448z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M448.364 1222.655c9.73 4.108 19.456 8.225 29.192 12.32 3.451 1.45 6.927 2.847 10.45 4.618-1.703.031-3.464-.288-5.766-.895-1.07-.453-1.6-.619-2.128-.784 0 0-.04-.004-.289-.254-1.767-.717-3.285-1.183-4.804-1.65a71.457 71.457 0 0 1-3.82-1.372 16.512 16.512 0 0 0-2.152-.68c-.383-.076-.766-.153-1.576-.543a30.203 30.203 0 0 0-2.532-1.278c-.645-.145-1.29-.29-2.4-.753a55.296 55.296 0 0 0-2.493-1.418 673.138 673.138 0 0 1-9.765-5.154c-.67-.575-.952-.71-1.298-.712 0 0-.439-.124-.708-.35-.269-.226-.428-.585-.3-.713.13-.129.39-.382.39-.382z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M831.08 61.73c4.266 1.114 8.62 1.974 12.764 3.433 2.601.916 4.886 2.73 6.879 5.049-7.879 1.788-13.024-4.002-19.495-7.152-.2-.831-.174-1.08-.148-1.33z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M488.798 1240.521c6.255 1.103 12.528 2.32 18.74 3.798 7.027 1.671 13.999 3.575 21.257 5.936.242.732.223.905.205 1.078-.745-.135-1.49-.27-2.84-.662a24.84 24.84 0 0 0-3.162-.612c-.44-.058-.88-.115-1.849-.414-1.097-.297-1.666-.354-2.235-.41-1.718-.411-3.435-.823-5.75-1.513-1.473-.378-2.349-.478-3.224-.578-.428-.066-.855-.132-1.79-.457a12.969 12.969 0 0 0-2.207-.547c-1.402-.388-2.805-.775-4.755-1.415a17.105 17.105 0 0 0-2.239-.599c-1.4-.397-2.8-.793-4.753-1.447a15.42 15.42 0 0 0-2.224-.577s-.442-.133-.864-.396a10.388 10.388 0 0 0-2.132-.536s-.188-.42-.178-.649z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"m151.553 1203.936 1.942 11.137 2.205-.1c.307-3.837-.15-7.955 1.128-11.436 1.368-3.727 4.37-6.853 6.987-10.243-.422 1.759-.817 3.814-1.989 5.224-3.384 4.072-4.194 8.63-3.963 13.746.07 1.554-1.486 3.18-2.298 4.774-1.406-1.162-3.51-2.063-4.064-3.544-1.01-2.7-1.102-5.745-1.292-9.093.639-.453.991-.459 1.344-.465z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1164.442 977.031c2.299-5.575 5.011-11.155 7.533-16.82.245-.55 2.988-3.817-1.631-2.243-.323-.272-.476-.732-.315-.913 1.712-1.93 4.364-5.728 5.073-5.398 3.92 1.827.355 4.464-.256 6.631-1.417 5.02-3.064 10.02-5.195 14.769-.762 1.699-3.184 2.652-5.209 3.974z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1244.935 874.672c-.062.195-.527.193-.76.21-.232-.954-.232-1.926-.232-3.198l-2.136 1.984-1.401-.746 6.878-16.69 1.142.187c.326 1.34.652 2.679 1.241 4.633.017 1.766-.228 2.918-.474 4.07-.834 1.944-1.669 3.89-2.905 6.305a15.285 15.285 0 0 0-1.158 2.664s-.134.386-.195.581z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1142.878 1003.22c1.283-2.01 2.882-4.07 4.514-6.105 5.325-6.644 10.662-13.277 16.334-19.976-2.706 8.94-8.786 15.857-15.306 22.424-1.465 1.476-3.46 2.425-5.542 3.656z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1147.113 257c.006-6.403.012-12.806.149-19.67.946.657 2.45 1.765 2.468 2.897.125 7.718-.063 15.442-.662 23.439-.772.09-1.061-.02-1.38-.053-.153-.651-.307-1.302-.295-2.515.018-1.74-.131-2.919-.28-4.097z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M399.707 1449.986c-.342-.89-1.116-2.505-.608-3.334 2.346-3.826 9.98-6.637 14.134-4.737 5.032 2.302 9.494 1.621 14.453-.793-1.67 4.049-5.477 4.17-9.21 3.988-3.428-.167-6.823-1.025-10.248-1.16-4.022-.159-6.869 1.875-8.521 6.036z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M750.457 1256.365c.404.412.461.74.554 1.32-1.092 1.602-2.218 2.953-3.714 4.293-1.31-1.012-2.193-2.814-3.198-2.884-7.703-.534-15.432-.685-23.148-1.067-1.865-.092-3.71-.602-5.662-1.284.613-.423 1.324-.483 2.692-.258 9.843.337 19.03.404 28.217.411.592 0 1.185-.454 1.778-.698.711.028 1.422.056 2.48.167z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1309.714 266.86c5.611 1.201 11.19 2.878 16.848 4.219 1.603.38 3.438-.222 5.37-.775 1.422.55 2.64 1.501 4.065 2.615-4.008 2.276-20.617-1.648-26.283-6.058z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M418.365 1206.665c9.865 5.152 19.73 10.304 29.797 15.723.202.267-.058.52-.48.6-.82.042-1.216.005-1.613-.033 0 0-.038.012-.136-.229-.312-.51-.593-.65-.937-.661-.757-.35-1.513-.701-2.7-1.332-.66-.537-.948-.671-1.293-.684a10.686 10.686 0 0 1-2.454-.696c-1.778-1.06-3.09-1.783-4.402-2.505-1.041-.38-2.083-.761-3.594-1.471a33.93 33.93 0 0 0-2.568-1.311 1577.355 1577.355 0 0 1-9.655-6.234c-.367-.27-.493-.662-.362-.789s.397-.378.397-.378z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1275.88 781.236c.33-3.831.585-7.84 1.403-11.732 1.63-7.75 3.569-15.437 5.943-22.997.415 2.03.268 3.906.12 5.783-.067.379-.134.758-.543 1.641-.403 1.444-.464 2.382-.524 3.32-.036.385-.071.77-.425 1.671-.736 2.458-1.153 4.398-1.57 6.338-.715 2.992-1.43 5.983-2.47 9.583-.698 2.224-1.07 3.84-1.441 5.455-.056.29-.16.56-.493.938z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1198.495 931.907c.51 7.496-4.908 10.677-9.796 14.25 2.96-5.01 3.48-11.588 9.796-14.25z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1265.007 649.002a29.705 29.705 0 0 1-.246-2.943c-.088-4.245-.206-7.719-.325-11.193.62 1.26 1.72 2.495 1.784 3.782.433 8.756 1.812 17.226 5.923 25.09-.702.204-.9.203-1.366.016a52.124 52.124 0 0 1-3.582-4.255c-.478-.682-.871-1.088-1.265-1.494a361.629 361.629 0 0 1-.212-6.725c-.224-1.227-.468-1.753-.711-2.278z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M1267.28 659.776c1.076 1.263 2.152 2.527 3.5 4.388.646 2.327 1.02 4.057 1.482 6.236.071 2.877.054 5.304.037 7.73-.095.412-.19.823-.311 1.55-.026.316-.494.272-1.005.291a22.586 22.586 0 0 1-1.657-.065c-.076-.188-.15-.376-.368-1.137-.19-1.26-.237-1.947-.125-3.032.024-2.366-.11-4.334-.144-6.65-.497-.927-1.096-1.505-1.844-2.31-.418-.693-.687-1.16-.937-2.008-.33-2.153-2.117-4.346 1.372-4.993z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M172.122 941.059c3.351 5.43 6.648 11.309 9.985 17.555-4.805-.68-7.059-4.076-8.085-8.59-.645-2.841-1.303-5.68-1.9-8.965z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M683.652 1341.251c5.539.078 10.886.476 16.233.874-4.43 4.349-13.934 3.325-16.233-.874z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M208.993 1015.901c-1.677-3.997-3.429-7.966-4.983-12.011-.416-1.082-.228-2.395.265-3.625 2.303 1.885 4.023 3.792 5.893 5.96.543.955.935 1.65 1.2 2.676.434.922.995 1.514 1.697 2.255.14.15.35.504.213.842-1.519 1.526-2.902 2.715-4.285 3.903z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1110.914 194.723c-5.903-1.678-11.678-4.37-17.745-5.521-3.54-.671-7.547 1.124-11.733 1.83 1-4.393 4.966-4.416 8.103-3.85 6.59 1.188 13.034 3.215 19.494 5.05.768.22 1.264 1.393 1.881 2.491z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M392.843 1192.693c8.356 4.242 16.77 8.815 25.354 13.68.168.292-.098.543-.518.612-.813.027-1.205-.014-1.597-.055-.492-.32-.985-.64-1.934-1.248-.97-.453-1.482-.62-1.994-.785 0 0-.044-.019-.172-.236-.353-.474-.636-.608-.977-.618-6.035-3.673-12.07-7.346-18.162-11.35z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M208.61 1015.93c1.766-1.217 3.15-2.406 4.983-3.833 1 1.374 1.549 2.986 2.098 4.598-5.532 1.701-11.06.506-17.025-.35-.51-.673-.587-1.017-.662-1.362 3.407.324 6.814.65 10.605.946z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1260.77 738.01c.342-6.8 1.009-13.747 1.983-21.2.66-.606 1.014-.708 1.367-.81-1.009 7.287-2.017 14.574-3.35 22.01z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M741.354 53.442c.097.387.194.775.363 1.763.686 1.424 1.3 2.248 1.915 3.072 0 0 .1.438.145.94.564 1.076 1.082 1.65 1.6 2.224 0 0 .154.436.278.935.725.979 1.326 1.459 1.928 1.939.999 1.115 1.998 2.23 3.3 3.78.504.956.706 1.478.907 2-8.205-3.546-11.756-10.393-13.002-18.897.26-.206.72-.19.947.163.691.93 1.155 1.505 1.62 2.08z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1204.868 926.66c1.796.107 3.619.565 5.301.989.47 1.586.911 3.071 1.64 4.541-1.023 3.214-2.336 6.445-3.649 9.675l-2.225-.677 2.641-9.795c-1.312-1.561-2.496-2.97-3.708-4.732z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M643.96 1270.267c.716.008 1.433.017 2.514.378.417.691.471 1.029.526 1.366-8.604-.067-17.207-.134-25.44-.62 7.715-.653 15.057-.888 22.4-1.124z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1276.182 264.597c1.721-.25 3.442-.498 5.564-.558-6.576 3.336-13.552 6.481-20.869 9.4 3.791-2.702 7.924-5.178 12.712-7.648 1.301-.394 1.947-.794 2.593-1.194z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1264.39 634.46c.165 3.88.283 7.354.246 11.256-.348-4.933-7.337-8.935-3.156-15.342.646-.989-.779-3.329-.864-5.235 1.438 1.489 2.494 3.168 3.55 4.847.06 1.357.118 2.713.224 4.475z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M123.338 596.324c-1.343 6.057-2.685 12.113-4.321 18.394 1.167-7.38 2.627-14.985 4.472-22.353.207 1.478.028 2.719-.151 3.959z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1256.175 457.818a139.029 139.029 0 0 1-5.903-12.295c-1.203-2.863-2.103-5.853-3.209-9.458.012-.895.094-1.12.177-1.345 1.9 4.072 3.962 8.078 5.65 12.236 1.407 3.464 2.376 7.107 3.285 10.862z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M643.65 1270.004c-7.033.499-14.375.734-22.186.996-1.044-.166-1.62-.358-2.33-.826 7.979-.328 16.093-.38 24.517-.17z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M780.217 56.82c-3.702-5.525-7.122-11.237-10.47-17.304 3.191 3.397 6.54 6.99 9.323 10.976 1.117 1.6.99 4.067 1.147 6.327z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1249.528 865.045c-.09-1.075.156-2.227.38-3.74.083-.717.187-1.073.62-1.859.664-1.456.998-2.483 1.333-3.51 1.691-4.287 3.382-8.573 5.409-12.943.657.24 1.317.7 1.25.868-2.845 7.052-5.755 14.078-8.992 21.184z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1285.863 643.674c-.465-7.214-.596-14.672-.55-22.602.414 7.138.649 14.748.55 22.602z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1177.443 930.422c.81-.91 1.619-1.819 2.695-2.874-2.843 6.036-5.953 12.219-9.482 18.144-.425-.713-.43-1.17-.437-1.625 0 0 .167-.301.494-.629 2.462-4.556 4.596-8.786 6.73-13.016z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1161.695 968.035c-4.117 5.966-8.579 11.93-13.38 17.914a310.435 310.435 0 0 1 13.38-17.914z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M319.166 1136.871c.542.49 1.085.98 1.833 1.975.463 1.05.722 1.597.98 2.142-1.005 1.093-2.522 2.027-2.919 3.309-1.066 3.438-1.654 7.024-2.864 10.154-.39-6.055-.347-11.711-.093-17.563 1.161-.136 2.112-.076 3.063-.017z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1128.314 1016.99c3.4-3.67 7.175-7.29 11.292-10.995.833 4.344-.015 7.603-5.42 8.18-1.911.205-3.667 1.867-5.872 2.815z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M194.998 981.038c.669-.257.946-.13 1.122.776 1.217 2.481 2.448 4.376 3.678 6.271.347.454.695.909.86 1.819.053 1.645.289 2.835.525 4.025-7.399-3.68-7.597-4.07-6.185-12.89z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M618.722 89.594c-1.376.104-2.752.208-4.816.292-2.467.245-4.247.51-6.027.774.685-.654 1.303-1.78 2.065-1.888a252.731 252.731 0 0 1 18.049-1.903c.03.454-.147.63-1.058.923-3.228.679-5.72 1.24-8.213 1.802zM226.167 1209.845c-.879 1.994-2.127 4.002-3.271 6.067-.897 1.618-1.666 3.308-2.056 5.144.437.178.291.162-.145-.027-.157.37.122.93.401 1.489-.792.859-1.584 1.718-2.765 2.135-.526-1.236-.663-2.03-.801-2.825 2.77-3.982 5.541-7.963 8.637-11.983z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M315.892 1137.083c-.043 5.657-.086 11.313-.096 17.413-.181.707-.307 1.007-.573 1.74-.728.631-1.228.868-1.728 1.104.446-6.4.892-12.8 1.59-19.703.436-.52.622-.537.807-.554z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1280.047 607.003c.156 3.5.311 7.001.236 10.914a14.514 14.514 0 0 1-2.138-4.545c-.634-2.38-1.006-4.832-2.011-7.725-.506-1.24-.491-2.009-.476-2.777 0 0 .209.129.69.175 1.553 1.35 2.626 2.654 3.7 3.958z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M201.437 994.146c-.49-1.407-.726-2.597-.713-3.957.598-.125.945-.08 1.605.393 2.771 5.414 5.23 10.398 7.689 15.382-1.72-1.907-3.44-3.814-5.43-5.891-1.147-2.016-2.022-3.863-3.151-5.927z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M412.245 1488.488c3.046-1.743 6.367-3.088 9.534-4.73 1.957-1.014 3.68-2.481 5.86-3.756-1.272 1.77-2.581 4.174-4.592 5.192-3.29 1.664-7.038 2.425-10.802 3.294z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1273.115 528.905c-.309-.768-.617-1.536-1.028-3-.169-1.788-.233-2.88-.298-3.97.032-.433.064-.866.473-1.636.869-.381 1.36-.426 1.853-.47.16.291.322.582.705 1.401 1.299 2.256 2.377 3.983 3.454 5.71l-.165 2.57c-.637-.298-1.25-.683-1.919-.866-.548-.15-1.162-.06-2.184.135-.436.21-.891.126-.891.126z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M135.951 1170.068c.836-3.377 1.64-7.019 3.27-10.242 1.661-3.284 4.23-3.883 6.59-.017-3.603-1.352-5.691-.054-6.858 3.537-.735 2.263-1.77 4.43-3.002 6.722zM1154.51 291.465s-.109-.38-.245-.893c-.778-2.239-1.42-3.964-2.062-5.69 3.63 4.112 7.26 8.223 10.547 12.631-2.406-1.386-4.469-3.069-6.723-4.946-.633-.497-1.075-.8-1.517-1.102zM120.434 1155.35c.936 4.12 1.599 8.533 2.09 13.308-.652-.046-1.131-.456-1.657-1.49-.299-1.14-.552-1.655-.806-2.17.033-3.119.067-6.237.373-9.648z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1280.116 709.845c-.231-3.396-.086-6.713-.095-10.471-.035-1.151.085-1.862.4-2.844.196-.272.56-.351.56-.351 3.236 4.085 1.923 8.594 1.127 13.451-.599.367-1.108.33-1.992.215z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1119.223 1060.12c-.156.428-.376.518-.928.74-2.79-4.216-5.248-8.562-7.671-13.277 5.46 2.068 6.51 7.464 8.599 12.538z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M1078.13 1219.859c2.886-4.243 6.125-8.421 9.703-12.596a142.903 142.903 0 0 1-9.703 12.596z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M372.893 1180.5c4.91 2.45 9.837 5.207 14.31 8.25-1.027.268-1.599.25-2.17.23-1.351-.74-2.703-1.48-4.51-2.552-1.116-.727-1.775-1.124-2.434-1.52 0 0-.389-.142-.71-.459-.98-.717-1.638-1.118-2.296-1.52-.724-.707-1.447-1.414-2.19-2.429z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1266.29 487.835c-.773-2.419-1.546-4.837-2.22-7.631 2.758 5.404 5.417 11.183 7.799 17.369-.279.406-.767.371-.767.371s-.035-.019-.094-.397c-1.612-3.49-3.165-6.601-4.718-9.712z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M229.614 1217.172c1.736-2.089 3.873-4.1 5.89-6.224 1.733-1.826 3.33-3.782 5.328-5.649-.217 3.66-1.693 6.274-5.612 7.538-2.012.65-3.522 2.86-5.606 4.335z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M160.838 910.174c1.945 3.857 3.584 7.96 5.244 12.44-5.114-2.361-6.427-6.793-5.244-12.44z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1305.472 432.694c-.995-4.472-1.715-9.243-2.297-14.45.95 4.427 1.761 9.289 2.297 14.45z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1147.618 985.962c-2.681 4.068-5.713 8.125-9.082 12.228a145.561 145.561 0 0 1 9.082-12.228z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1275.286 602.924c.357.714.342 1.482.444 2.618.062 1.353.006 2.338-.44 3.847-.584 1.935-.779 3.346-.974 4.757-.077.41-.155.82-.238 1.542-.005.313-.472.42-.77.164-.996-.788-1.693-1.319-2.39-1.85a11.27 11.27 0 0 1-.323-1.486 85.242 85.242 0 0 1 2.421-5.745c.595-1.282 1.263-2.53 2.27-3.847z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M176 1016.906a76.017 76.017 0 0 1-4.783.162c-1.302-.206-1.823-.34-2.345-.474 4.174-.735 8.348-1.47 12.8-1.67.199.885.122 1.236.044 1.586-.679.102-1.358.203-2.577.129-1.407-.028-2.273.12-3.14.267z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M182.185 1016.647c-.391-.487-.314-.838-.214-1.46 5.05-.289 10.077-.306 15.568-.264.54.405.616.75.714 1.362-5.185.344-10.392.422-16.068.362z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M250.68 1195.176a116.68 116.68 0 0 1 7.16-12.872c-2.046 4.318-4.429 8.598-7.16 12.872z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1319.021 260.542c-4.832-.687-9.726-1.715-14.98-3.04 5.362-2.512 10.124.173 14.98 3.04z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M584.06 1263.372c3.759.436 7.579 1.219 11.672 2.268-4.473 3.791-8.236 1.989-11.673-2.268z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M927.218 109.089c2.506.53 4.885 1.399 7.264 2.267l-.803 2.1c-2.196-1.344-4.392-2.687-6.46-4.367z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1236.47 414.687c-1.057-2.348-2.114-4.697-3.387-7.578-.332-.829-.519-1.072-.774-1.263 0 0-.108-.462-.188-1.043-.053-1.051-.027-1.521 0-1.99 2.165 3.904 4.33 7.808 6.02 11.955-.875.135-1.272.027-1.67-.08z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1272.638 678.025c-.322-2.321-.305-4.748-.352-8.015.02-1.604.104-2.37.187-3.134 4.001 3.506 2.6 7.259.165 11.149z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1110.952 1035.59c2.895-3.257 6.136-6.364 9.712-9.53-.65 5.427-5.571 6.992-9.712 9.53z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1223.898 303.459c2.886-3.013 6.076-5.832 9.62-8.615a91.117 91.117 0 0 1-9.62 8.615z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1283.662 752.113c-.168-1.7-.02-3.576-.067-5.716-.141-1.042-.089-1.82.231-3.2a187.747 187.747 0 0 1 2.179-4.21c-.676 4.316-1.352 8.632-2.343 13.126z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1236.335 293.059c-.303-.349-.252-.615.105-1.092.306-.209.236-.082.236-.082 2.856-2.345 5.713-4.69 8.932-6.975-2.731 2.783-5.825 5.507-9.273 8.149z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1264.414 629.74c-1.304-1.433-2.36-3.112-3.697-4.97-.373-1.835-.464-3.493-.407-5.546 1.548 3.16 2.95 6.714 4.104 10.516z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M761.956 35.282c-1.283-.246-2.567-.492-4.258-1.094-.512-.692-.615-1.029-.719-1.365 3.668 1.201 7.335 2.403 10.942 3.97-1.007.174-1.954-.016-3.353-.582-1.172-.56-1.892-.744-2.612-.929z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1156.219 292.761c2.062 1.683 4.125 3.366 6.519 5.11.788.79 1.245 1.516 1.602 2.552-.592.457-1.083.604-1.996.374-2.391-2.879-7.152-3.302-6.125-8.036z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M163.7 1018.47c-2.353.084-4.705.168-7.464.062 1.22-4.37 4.596-1.754 7.452-1.616.172.87.092 1.212.011 1.555z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1293.276 254.801c-2.536.485-5.161.643-8.222.552 2.42-.459 5.276-.668 8.222-.552z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1285.422 734.835c.013-.408.026-.817.27-1.824.254-2.004.276-3.41.42-5.049.048-.825-.028-1.416-.1-1.981.003.026.045-.006.239-.131.396-.356.6-.584 1.042-.825.233-.015.7-.027.7-.027-.305 3.255-.61 6.51-1.498 9.86-.746.057-.91.017-1.073-.023z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1207.948 298.947c-3.165 1.88-6.33 3.76-9.604 5.15.626-1.11 1.364-1.731 2.101-2.353.947-.557 1.893-1.114 3.477-1.745 1.768-.4 2.897-.726 4.026-1.052z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1265.669 814.9c.2-.612.402-1.224.941-2.335 1.317-2.52 2.296-4.542 3.275-6.562-.964 3.315-1.927 6.63-3.395 9.734-.61-.419-.716-.628-.821-.838z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M243.72 1203.211c1.705-2.666 3.753-5.308 6.13-7.909-1.71 2.672-3.749 5.303-6.13 7.91zM131.598 1187.072c.427-2.825.854-5.65 1.54-8.74.137 2.448.016 5.16-.366 8.29-.562.53-.867.54-1.174.45z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1176.17 333.832c-.092-.434-.184-.869-.35-1.885-.41-.974-.745-1.366-1.08-1.759.025-.464.05-.928.194-1.718 1.709 2.37 3.297 5.068 4.548 8.067-1.328-.7-2.32-1.703-3.312-2.705z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M764.094 1259.65c2.927-.426 5.975-.499 9.476-.502-2.57 3.39-5.968 2.053-9.476.503z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1147.485 264.046c.522-.4.811-.29 1.304-.077.19 3.159.149 6.29-.13 9.836-.616-2.832-.996-6.079-1.174-9.759z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M702.575 1271.981c-1.399-1.615-2.46-3.34-3.503-5.42.449-.395.878-.435 1.844-.196 1.393.419 2.25.558 3.106.697-.37 1.603-.74 3.206-1.447 4.92z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M353.717 1166.719a72.178 72.178 0 0 1 8.395 5.784c-2.117-.916-4.273-2.168-6.87-3.723-.656-.571-.933-.727-1.273-.77a8.72 8.72 0 0 1-.252-1.291z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M559.797 102.84c-.282.807-.781 1.326-1.942 1.866-1.396.13-2.13.24-2.865.35-.48-.02-.96-.04-1.77-.207 1.9-.863 4.13-1.58 6.577-2.008zM132.845 563.98c-.084.707-.169 1.413-.596 2.502-.757.494-1.172.604-1.586.715-.406-2.244-.81-4.489-.938-6.97.776-.008 1.273.221 1.976.922.518 1.258.831 2.045 1.144 2.831z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1281.686 657.289c.458 2.53.658 5.352.565 8.443-.47-2.537-.647-5.344-.565-8.443z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M830.829 61.506c.225.474.2.723.137 1.347-2.468-.24-4.899-.857-7.426-1.937.579-.702 1.254-.94 1.93-1.178 1.702.514 3.405 1.029 5.359 1.768z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1105.801 1041.37c.939-1.754 2.008-3.192 3.394-4.71.109 2.229-.1 4.54-.446 7.275-1.031-.467-1.925-1.358-2.948-2.565z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M607.522 90.728c2.137-.333 3.917-.597 6.088-.797-1.638 3.662-4.839 2.605-8.266 2.095-.379-.054-.342-.54-.347-.784.72-.311 1.443-.379 2.525-.514z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1131.588 1005.983c-1.355 2.364-3.056 4.748-5.097 7.178 1.357-2.355 3.053-4.757 5.097-7.178z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1147.012 234.92c-1.128-1.344-1.928-2.822-2.902-4.895-.172-1.054-.17-1.512-.167-1.97 1.132 2.243 2.264 4.488 3.069 6.865zM1208.13 298.829c-1.311.444-2.44.77-3.918 1.012a37.417 37.417 0 0 1 7.384-4.544c.018.784-.268 1.266-.554 1.748 0 0-.042-.045-.328-.065-.87.484-1.453.989-2.037 1.494l-.547.355z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M130.415 572.84c-.827 3.035-1.653 6.07-2.962 8.878-.594-.471-.706-.718-.818-.964.425-1.36.85-2.722 1.584-4.604.94-1.45 1.567-2.38 2.196-3.31z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M540.834 1252.527c1.922.314 3.844.629 5.985 1.514.208.744.197.917.186 1.09-1.743-.358-3.486-.716-5.625-1.38-.51-.602-.56-.908-.546-1.224z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1225.671 284.442c-1.06.712-2.119 1.423-3.736 2.336-.99.237-1.42.273-1.85.308 2.085-1.698 4.17-3.397 6.539-4.778-.129.923-.54 1.529-.953 2.134z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1287.06 725.04c-.208.226-.413.454-1.007.908-.392.224-.78.436-.78.436a9.654 9.654 0 0 0-1.05-1.27c.843-2.13 1.963-4.072 3.431-6.063.293.686.237 1.423-.084 2.771a20.79 20.79 0 0 0-.51 3.218z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1246.326 285.033c1.312-1.86 2.98-3.655 5.002-5.39-1.313 1.86-2.979 3.656-5.002 5.39z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M609.145 1268.201c2.522.082 5.2.422 8.017 1.083-.679.445-1.498.568-2.952.414-1.498-.4-2.36-.523-3.223-.645-.563-.198-1.125-.396-1.842-.852z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1166.643 962.014c-1.08 1.948-2.51 3.917-4.271 5.954 1.086-1.933 2.504-3.933 4.271-5.954z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1278.337 526.505c-1.14-1.292-2.218-3.02-3.346-5.093.618-.84 1.286-1.335 2.284-2.12.5-.29.67-.289.84-.288.095 2.355.19 4.71.222 7.501z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1266.543 768.815c-.691 2.286-1.383 4.572-2.188 6.306.101-1.775.315-2.998.53-4.222.002-.423.005-.846.312-1.59.652-.378 1-.436 1.346-.494zM1263.674 477.879c-1.268-1.879-2.434-4.117-3.477-6.722 1.274 1.876 2.427 4.119 3.477 6.722z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M667.081 1273.399c2.06-.26 4.201-.152 6.634.21-1.99.221-4.271.19-6.634-.21z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M223.363 1221.805c1.542-1.66 3.31-3.118 5.43-4.558a31.098 31.098 0 0 1-5.43 4.558z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M164.112 1018.617c-.332-.489-.252-.831-.144-1.44 1.381-.348 2.737-.43 4.498-.548.928.099 1.45.233 2.354.503-1.843.634-4.07 1.132-6.708 1.485z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1269.918 805.651c-1.012 2.372-1.99 4.393-3.256 6.595a49.053 49.053 0 0 1 2.694-8.229c.422.375.509.828.562 1.634zM1277.279 546.6c-.916-2.151-1.692-4.651-2.04-7.37.429-.22.792-.228.792-.228.101.641.203 1.282.216 2.603.258 1.262.604 1.843.949 2.425.074.74.149 1.481.083 2.57z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1281.005 635.121c.697 1.396 1.054 2.95 1.15 4.695-.67-1.384-1.08-2.96-1.15-4.695z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1285.254 735.198c.331-.323.495-.283.907-.195.144 1.098.04 2.148-.11 3.591-.684 1.596-1.32 2.799-2.14 4.224.27-2.27.722-4.763 1.343-7.62z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1296.747 256.221c-.504-.118-1.008-.236-1.775-.643 1.925.088 4.113.463 6.358 1.144-.418.474-.894.643-1.9.46a17.31 17.31 0 0 0-2.683-.96z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1192.665 305.44c-1.303.246-2.606.492-4.294.631 1.148-.914 2.68-1.722 4.396-2.036-.001.77-.096 1.074-.102 1.406z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1168.924 305.074c-1.66-1.202-3.318-2.403-4.817-3.958 1.237.254 2.314.863 3.727 1.941.588.985.839 1.5 1.09 2.017z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M165.003 1192.072c.532-1.983 1.373-4.06 2.556-6.177-.521 2-1.384 4.042-2.556 6.177z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M336.748 1152.867c1.704.918 3.455 2.148 4.985 3.807-.428.483-.634.538-.84.592-1.366-1.362-2.732-2.724-4.145-4.399zM323.813 1141.65c1.715.987 3.45 2.311 5.207 3.975-1.713-.986-3.45-2.312-5.207-3.975zM550.825 1254.593c1.89.387 3.78.775 5.92 1.424-1.51.2-3.27.14-5.402-.215-.481-.59-.53-.894-.518-1.21z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1273.062 529.28c.053-.375.508-.29.74-.282.341.973.452 1.936.44 3.614.224 1.281.568 1.848.913 2.414.12.372.242.744.275 1.398-4.262-.945-2.792-4.04-2.368-7.145z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1272.18 792.034c.222-.51.444-1.02.968-1.8.302-.27.774-.245.774-.245-.303 1.646-.606 3.292-1.326 4.67-.416-1.053-.416-1.84-.416-2.625zM1260.727 781.246c.513 1.655.754 3.557.637 5.608-.542-1.687-.726-3.524-.637-5.608z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M125.365 589.35c-.086.36-.173.72-.595 1.337-.502.235-.668.214-.834.194.539-2.014 1.078-4.027 1.915-6.1.435.396.572.852.354 1.817-.516 1.257-.678 2.004-.84 2.751z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M550.45 1254.497c.363.41.412.716.54 1.243a9.447 9.447 0 0 1-3.92-.283c-.054-.5-.043-.672-.055-1.104 1.005-.156 2.032-.054 3.435.144z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M647.449 1272.019c-.504-.345-.558-.683-.629-1.277 2.012-.065 4.041.125 6.254.634-1.602.43-3.39.54-5.625.643z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1152.006 284.759c.84 1.85 1.481 3.574 2.153 5.646-1.236-1.547-2.5-3.44-3.494-5.642.6-.436.891-.376 1.341-.004z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M131.351 1204.922c-.208-1.748-.052-3.56.365-5.646.173 1.677.086 3.63-.365 5.646z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1265.357 815c.417.109.523.318.804.832.057.712-.063 1.12-.499 2.012-.79 1.38-1.263 2.274-1.736 3.168.373-1.97.746-3.94 1.43-6.012z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1281.181 254.959c-1.675 1.006-3.49 1.711-5.703 2.277 1.59-.952 3.577-1.766 5.703-2.277z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1270.598 803.057c-.409-.402-.497-.87-.474-1.914.111-.576.088-1.044.088-1.044.2-.534.4-1.067.94-1.869.51-.255.683-.243.857-.231-.363 1.664-.727 3.329-1.41 5.058z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1267.133 258.866c-1.306.965-2.903 1.671-4.83 2.239 1.294-.926 2.916-1.712 4.83-2.24z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1137.296 218.132c-.014-.189-.028-.378.1-.882.143-.315.6-.248.6-.248 1.015 1.506 2.03 3.012 2.924 4.884-.123.366-.475.688-.724.293a302.946 302.946 0 0 0-2.9-4.047zM1240.807 271.02c-.517 1.274-1.394 2.443-2.853 3.79-1.028.191-1.475.206-1.921.22 1.47-1.371 2.942-2.743 4.774-4.01z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M313.423 1157.612c.572-.508 1.072-.745 1.817-1.13-.364 1.38-.974 2.909-1.949 4.098-.388-.788-.41-1.234-.432-1.68.164-.338.327-.677.564-1.288zM308.86 1163.897c.538-.557 1.075-1.113 2.08-1.823.66-.136.853-.119 1.045-.101-.879 1.155-1.758 2.31-2.832 2.946-.228-.687-.26-.855-.292-1.022z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1263.936 821.375a13.422 13.422 0 0 1 1.67-3.218c-.058 1.505-.375 3.181-1.03 4.917-.434-.405-.532-.87-.64-1.699zM1266.65 768.526c-.454.347-.8.405-1.413.469.152-1.652.569-3.309 1.31-5.012.284 1.387.246 2.821.102 4.543zM1280.583 765.11c.118-1.79.535-3.73 1.238-5.9-.122 1.764-.53 3.757-1.238 5.9z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1176.122 334.212c1.04.622 2.032 1.624 3.326 2.7.532.392.762.71 1.017 1.318-1.447-1.018-2.92-2.328-4.343-4.018z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1272.259 745.83c-.092 1.58-.493 3.326-1.163 5.264.105-1.572.48-3.335 1.163-5.265z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1231.675 278.291c-.237.924-.697 1.621-1.742 2.506-.99.237-1.395.285-1.8.334 1.105-1.022 2.211-2.045 3.542-2.84zM130.534 572.55c-.748 1.22-1.376 2.15-2.248 3.248.12-1.435.483-3.04 1.416-4.716.747-.072.925-.072 1.104-.072-.05.416-.101.832-.272 1.54z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M599 1266.69c1.764.06 3.65.42 5.766 1.054-1.729-.069-3.685-.413-5.766-1.054z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M399.96 1488.746c1.369-.404 2.85-.498 4.762-.462-1.263.343-2.956.557-4.762.462z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M308.49 1163.862c.403.202.435.37.478.793-.535.485-1.08.714-1.777 1.206a11.35 11.35 0 0 1-3.983.505c1.496-.987 3.204-1.763 5.282-2.504z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1262.61 829.062c-.326-.92-.35-1.911-.067-3.378.664-.547 1.02-.618 1.377-.69-.336 1.332-.672 2.663-1.31 4.068z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M530.84 1250.5c1.664.261 3.326.523 5.076 1.143-1.29.33-2.667.301-4.482.021-.555-.544-.606-.849-.593-1.164z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M565.057 1259.416c1.426-.22 2.929-.097 4.684.301-1.367.198-2.986.12-4.684-.301z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M720.168 1266.16c1.208-.593 2.64-.89 4.456-1.154a14.95 14.95 0 0 1-4.456 1.154z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M131.09 570.81c-.463.2-.64.2-1.086.184-.073-1.04.122-2.064.488-3.442.585-.466 1-.576 1.623-.74-.107 1.232-.423 2.515-1.024 3.998z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1260.476 614.747c-.41-1.271-.564-2.766-.464-4.488.41 1.27.566 2.767.464 4.488z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1277.326 515.52c-.842-1.688-1.554-3.718-2.023-6.136.245-.39.696-.384.696-.384.09.362.181.724.188 1.714.266 1.19.616 1.75.965 2.31.101.718.202 1.435.174 2.495z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1301.94 264.503c1.294-.009 2.661.285 4.054.951-1.31.033-2.645-.308-4.053-.95z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1143.774 227.78c.167.733.164 1.19.124 1.993a13.627 13.627 0 0 1-2.402-4.622c.716-.276 1.074-.209 1.432-.142.226.832.452 1.664.846 2.77z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M132.818 1194.96c-.449.062-.639.025-1.115.038-.29-.764-.295-1.578-.09-2.742.63.635 1.047 1.62 1.205 2.705z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1200.098 301.558c-.39.808-1.128 1.43-1.99 2.32-.595.304-1.063.338-1.836.196.955-1.017 2.217-1.859 3.826-2.516z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1276.645 780.134c.099-1.451.47-3.067 1.11-4.914-.101 1.43-.47 3.09-1.11 4.914zM1260.66 835.067c-.008-1.22.285-2.524.903-3.955.016 1.205-.294 2.538-.903 3.955z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1227.987 281.323c.55-.24.957-.29 1.67-.349-.903 1.228-2.115 2.466-3.656 3.586.082-.723.494-1.329.99-2.202.383-.402.638-.594.996-1.035z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M825.277 59.473c-.483.503-1.158.741-2.059 1.257-.638-.346-1.05-.97-1.464-1.593 1.11.024 2.221.048 3.523.336z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M736.928 44.402c.704 1.06 1.35 2.497 1.904 4.305-.715-1.062-1.339-2.495-1.904-4.305zM133.949 1176.114c.05-1.213.402-2.47 1.057-3.894-.05 1.172-.403 2.51-1.057 3.894zM1071.706 195.078c-.365 1.316-1.079 2.65-2.106 4.082.377-1.29 1.067-2.677 2.106-4.082zM1078.085 192.574c-.894.646-2.153 1.099-3.765 1.457.898-.614 2.15-1.132 3.765-1.457z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M704.252 1266.93c-1.087-.007-1.943-.146-3.014-.53.97-.48 2.155-.716 3.55-.714.037.53-.135.821-.536 1.244z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1246.299 431.813c-.873-.998-1.531-2.181-2.087-3.715.835.944 1.569 2.237 2.087 3.715z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1124.032 1018.685c-.433.392-.87.433-1.636.435.42-1.393 1.168-2.748 2.265-4.104.02 1.105-.307 2.211-.629 3.669z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1217.134 309.12c.603-.953 1.353-1.651 2.434-2.29-.542.89-1.414 1.717-2.434 2.29z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1222.671 385.893c-1.013-.807-1.925-1.956-2.802-3.441.991.808 1.948 1.953 2.802 3.44z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M434.144 1217.21c1.315.36 2.627 1.083 4.072 2.095-1.27-.384-2.672-1.058-4.072-2.094z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1143.182 224.832c-.612.11-.97.043-1.603-.04-.513-.651-.75-1.287-.9-2.252.979.486 1.868 1.3 2.503 2.292zM753.024 71.228c1.406.42 2.743 1.21 4.078 2.352-1.383-.427-2.765-1.204-4.078-2.352z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1281.322 683.852c.222 1.127.165 2.41-.206 3.924-.233-1.101-.152-2.434.206-3.924zM1274.663 614.014c-.152-1.279.043-2.69.571-4.26.147 1.27-.039 2.698-.571 4.26zM1280.081 620.907c.52 1.035.76 2.204.823 3.8-.486-.937-.795-2.302-.823-3.8z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M123.886 591.122c.216-.22.382-.2.798-.17-.067 1.683-.386 3.357-1.025 5.202-.142-1.07.037-2.31.154-3.929-.06-.377.022-.862.073-1.103z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M475.086 1236.377c1.452.1 2.97.566 4.718 1.279-1.397-.14-3.024-.526-4.718-1.279z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M367.752 1176.819c1.066.26 2.162.8 3.005 1.74-.738.4-1.223.4-1.709.4-.422-.62-.844-1.24-1.296-2.14z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M260.645 1180.173c.087-.907.516-1.799 1.363-2.937a1.904 1.904 0 0 1 1.034-.257c.157.016.451.128.451.128-.836 1.027-1.672 2.054-2.848 3.066z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M724.78 64.835c.645.841 1.027 1.547 1.424 2.56-1.001-.487-2.017-1.281-2.917-2.422.487-.322.858-.297 1.493-.138z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1188.482 346.011c-1.16-.68-2.32-1.359-3.213-2.307 1.115.2 1.963.67 2.81 1.14 0 0 .41.225.47.526.058.301-.067.641-.067.641z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1253.939 264.209c-.603 1.015-1.54 1.854-2.772 2.543.616-1.006 1.527-1.862 2.772-2.543z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1273.96 789.637c-.038.352-.51.326-.746.327-.156-1.935-.08-3.87.018-5.805.005-.104.21-.284.311-.277.14.011.267.167.468.957.169 1.249.27 1.803.37 2.356-.128.697-.256 1.393-.422 2.442z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1264.668 771.089c.002 1.034-.212 2.257-.575 3.838-.679.082-1.208-.194-1.824-1.028-.032-.75.024-.941.079-1.133.701-.496 1.402-.992 2.32-1.677z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1262.2 772.53c.093.428.037.62-.08 1.103-.322.332-.581.372-1.23.463-.39.05-.74.242-.863-.155-.435-.91-.746-1.423-1.056-1.936-.019-.457-.037-.914.236-1.588.811.036 1.331.29 1.85.543.332.445.664.89 1.143 1.57z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M131.486 1187.42c.42-.258.724-.268 1.254-.403.03.68-.169 1.386-.643 2.085-.424-.448-.573-.89-.611-1.681z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1272.42 666.519c-.03 1.122-.114 1.887-.222 3.042-.398-1.34-.772-3.07-1.15-5.21.195-.41.393-.41.885-.38.341.75.387 1.47.486 2.548z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M151.66 1203.631c-.46.311-.812.317-1.432.342-.533-.521-.799-1.06-.977-1.916.64-.195 1.193-.074 2.032.028.352.401.418.821.377 1.546zM385.073 1189.318c.531-.319 1.103-.3 2.105-.287.815.247 1.198.5 1.69.958a9.783 9.783 0 0 1-3.795-.67z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1264.108 715.61c-.341.492-.694.594-1.298.806-.09-1.03.069-2.169.59-3.394.473.676.584 1.437.708 2.588z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1272.883 256.943c-.695.64-1.51.987-2.633 1.155.632-.602 1.572-1.026 2.633-1.155z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1175.188 307.209c-.451.362-.857.435-1.604.166-.422-.671-.502-1.002-.582-1.333.744.292 1.487.584 2.186 1.167z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1288.667 719.093c-.207-.82-.145-1.756.215-2.899.216.79.135 1.786-.215 2.9z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M158.865 903.128c.617.595.952 1.388 1.29 2.518-.523-.549-1.047-1.435-1.29-2.518z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1188.078 344.498c-.846-.124-1.694-.593-2.83-1.13-.322-.272-.353-.476-.323-.982 1.091.387 2.122 1.077 3.153 2.112z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M340.934 1157.618c.165-.406.37-.461.881-.615.557.065.789.256 1.181.93.491.95.799 1.443 1.106 1.935-1.042-.633-2.084-1.266-3.168-2.25z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1280.955 695.738c.026.44-.338.52-.503.432-.241-1.113-.319-2.138-.126-3.322.382.71.493 1.58.63 2.89z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M210.958 1167.664c.714-.346 1.547-.417 2.79-.388-.617.287-1.644.475-2.79.388zM523.045 1250.378c.805-.2 1.657-.082 2.736.27-.745.173-1.717.111-2.736-.27z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1272.057 797.642c-.222.345-.395.333-.829.314-.059-1.82.143-3.632.648-5.684.304.548.304 1.334.416 2.496.014 1.09-.086 1.804-.235 2.874z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M540.505 1252.456c.315.387.366.693.503 1.22-.678.01-1.379-.214-2.098-.72.41-.379.838-.475 1.595-.5zM530.537 1250.427c.29.388.342.693.483 1.217-.628.228-1.28.225-1.976-.044-.026-.44-.007-.613-.021-1.045.381-.24.796-.22 1.514-.128zM510.01 1247.452c.805-.208 1.68-.108 2.775.245-.756.19-1.73.127-2.775-.245z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1274.236 736.016a17.055 17.055 0 0 1-.358 5.468c-.216-1.666-.041-3.414.358-5.468z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M217.256 1221.963c.412.66.55 1.454.7 2.652-.316-.57-.645-1.544-.7-2.652z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1246.667 268.45c-.412.12-.825.239-1.527.216.312-.824.914-1.505 1.663-1.704.053.819-.041 1.153-.136 1.488z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1282.555 757.123c-.216-.81-.155-1.748.189-2.909.217.778.152 1.78-.19 2.909z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1247.005 268.597c-.243-.482-.149-.816-.033-1.413.815-.304 1.61-.345 2.758-.204-.56.71-1.474 1.237-2.725 1.617z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M611.041 1269.372c.809-.197 1.671-.074 2.748.299-.755.174-1.725.097-2.748-.3z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1276.061 508.643c-.062.357-.513.352-.734.31-.431-.565-.64-1.088-1.052-2.193-.125-1.087-.048-1.59.03-2.094.606 1.207 1.212 2.414 1.756 3.977zM1278.325 518.807c-.38.196-.55.196-.97.15-.267-.852-.283-1.658-.13-2.834.549.583.93 1.535 1.1 2.684z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M707.209 1265.94c.674-.38 1.76-.578 2.933-.497-.782.413-1.652.547-2.933.497z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M735.134 1264.144c.62-.552 1.421-.829 2.555-1.046-.57.48-1.472.9-2.555 1.046z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1148.686 280.651c-.006-.48-.012-.959.202-1.539.646.47 1.074 1.04 1.044 1.755-.692-.04-.954-.16-1.246-.216z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M575.024 1261.404c.811-.183 1.68-.053 2.761.336-.76.165-1.73.071-2.76-.336z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1118.93 199.651c-.693.438-1.437.507-2.56.521-.47-.387-.563-.72-.733-1.302 1.028-.028 2.134.192 3.292.781z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M166.108 925.082c.675.491 1.306 1.37 1.96 2.58-.652-.51-1.328-1.351-1.96-2.58z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1169.19 305.222c-.517-.664-.768-1.18-1.078-1.985.874.323 1.807.934 2.62 1.905-.505.317-.89.273-1.542.08z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1261.057 770.63c-.519.077-1.039-.177-1.822-.556.029-.63.321-1.137.614-1.642.402.623.805 1.246 1.208 2.199z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1221.32 306.037c.197-.882.76-1.68 1.638-2.463-.216.858-.744 1.703-1.639 2.463z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1242.184 423.582c-.686-.608-1.388-1.545-1.924-2.774.747.621 1.328 1.533 1.924 2.774z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M344.389 1159.957c-.594-.581-.902-1.074-1.242-1.857.88.252 1.792.795 2.706 1.676-.391.317-.784.294-1.464.181z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M312.049 1161.738c-.256.217-.449.2-.923.112.166-1.017.614-1.962 1.397-2.929.358.425.38.871.372 1.663-.37.42-.621.612-.846 1.154z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1216.03 375.825c-.757-.449-1.435-1.192-2.11-2.32.731.418 1.46 1.222 2.11 2.32z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1169.89 944.189c.335.334.341.79.443 1.574-.18.678-.457 1.028-1.008 1.566-.275.189-.659.096-.844.03.237-1.06.659-2.054 1.41-3.17z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M266.142 1175.125c-.617.703-1.335 1.31-2.351 1.95-.298.032-.592-.08-.584-.364.884-.815 1.76-1.345 2.635-1.875 0 0 .198.195.3.29z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M752.09 70.169c-.501-.596-.703-1.118-.918-1.93a4.979 4.979 0 0 1 2.067 1.651c-.473.186-.662.27-1.15.279z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1211.41 297.075c-.082-.512.204-.994.557-1.754.423-.452.78-.626 1.426-.73-.344.885-.979 1.7-1.982 2.484z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M322.263 1141.06c-.542-.617-.8-1.163-1.075-2.013.852.295 1.72.894 2.547 1.83-.424.308-.807.28-1.472.182z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1169.694 958.031c-.178.886-.692 1.778-1.525 2.71.183-.875.686-1.79 1.525-2.71z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M1088.575 1207.176c.107-.647.527-1.282 1.271-1.911-.103.645-.53 1.285-1.27 1.911z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M416.082 1207.227c.392-.256.784-.215 1.466-.115.289.058.415.45.438.654-.62.056-1.262-.093-1.904-.54z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M333.894 1150.499c.694.056 1.41.44 2.125 1.157-.702-.055-1.402-.442-2.125-1.157z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M412.134 1205.2c.532-.137 1.045.029 1.72.416-.47.11-1.105-.001-1.72-.416z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M227.893 1205.885c.257.525.27 1.107.034 1.877-.258-.482-.268-1.152-.034-1.877z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1148.536 280.98c.442-.273.704-.153 1.156.027.346.418.474.84.518 1.58-.663-.213-1.243-.747-1.674-1.608z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M241.643 1205.207c.098-.676.507-1.315 1.227-1.898-.097.682-.507 1.309-1.227 1.898z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1326.991 264.646c-.77.101-1.55-.15-2.364-.74.762-.097 1.558.146 2.364.74z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M769.924 38.82c-.783-.095-1.474-.549-2.124-1.34.766.101 1.49.541 2.124 1.34z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1235.885 275.267c.594-.251 1.041-.266 1.824-.25-.267.628-.869 1.227-1.803 1.678-.277-.496-.223-.844-.021-1.428z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1254.836 277.402c.266-.737.827-1.268 1.69-1.69-.264.703-.83 1.3-1.69 1.69z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M1090.59 1205.156c.052-.686.43-1.377 1.131-2.08-.052.683-.43 1.379-1.131 2.08z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M756.645 32.806c.438.353.541.69.672 1.29-.726.054-1.479-.158-2.254-.712.401-.426.825-.51 1.582-.578z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M331.83 1148.64c.648.074 1.336.45 2.012 1.159-.666-.065-1.319-.462-2.012-1.16z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1133.414 209.224c-.702-.234-1.228-.81-1.727-1.692.652.247 1.277.797 1.727 1.692z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M127.94 1205.584c.419-.303.93-.352 1.822-.342-.322.238-1.026.417-1.822.342zM699.139 1274.129c.34-.515.831-.787 1.617-1.036-.293.442-.88.86-1.617 1.036z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M258.656 1182.207c.085-.677.484-1.321 1.198-1.927-.085.679-.485 1.32-1.198 1.927z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M492.013 1242.388c.516-.179 1.073-.072 1.814.257-.468.158-1.121.093-1.814-.257z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M362.84 1173.688c.677-.015 1.41.285 2.195.906-.68.017-1.41-.288-2.196-.906z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1234.224 294.955c.13-.758.601-1.43 1.415-2.04-.13.75-.602 1.438-1.415 2.04z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M480.109 1238.216c.532-.137 1.061.029 1.747.43-.479.115-1.115-.006-1.747-.43zM469.063 1234.26c.524-.165 1.064-.03 1.78.328-.47.139-1.117.056-1.78-.328zM465.013 1232.463c.628-.004 1.33.317 2.168.911-.607-.013-1.35-.3-2.168-.911zM460.086 1230.312c.637.02 1.313.386 2.127 1.019-.605-.047-1.346-.36-2.127-1.02zM369.08 1179.29c.454-.331.94-.331 1.782-.412.357-.08.547.192.48.343-.789.234-1.51.317-2.263.069zM498.995 1244.407c.518-.165 1.081-.049 1.827.299-.472.148-1.126.065-1.827-.299z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1185.972 306.924c-.457.559-.971.83-1.773.953.38-.512 1.048-.876 1.773-.953z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1172.652 305.977c.43.396.51.727.621 1.314-.748.006-1.528-.245-2.321-.845.44-.41.895-.472 1.7-.469z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M375.106 1183.275c.635.056 1.294.457 2.069 1.138-.604-.078-1.325-.435-2.069-1.138zM378.11 1185.258c.638.046 1.297.443 2.081 1.112-.602-.072-1.33-.417-2.08-1.112z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M428.46 1441.098c.08-.69.498-1.367 1.238-2.058-.086.68-.494 1.377-1.239 2.058z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1255.981 263.228c-.317.677-.712 1.036-1.374 1.258.254-.617.775-1.097 1.374-1.258z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M119.833 1165.149c.482.364.735.88.928 1.695-.426-.314-.79-.929-.928-1.695zM185.003 1166.344c.52-.131 1.08.02 1.82.41-.475.116-1.126-.005-1.82-.41z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1219.938 287.34c.578-.29 1.008-.325 1.763-.337-.219.654-.762 1.284-1.638 1.802-.312-.48-.292-.846-.125-1.466zM1219.359 288.657c-.135.763-.599 1.459-1.417 2.04.127-.778.607-1.443 1.417-2.04z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M428.047 1214.4c.637-.007 1.337.32 2.168.922-.614-.013-1.36-.3-2.168-.921z\"\n        />\n        <path\n            fill=\"#B5B4B3\"\n            d=\"M373.074 1440.578c-.69-.091-1.369-.515-2.05-1.267.686.093 1.374.514 2.05 1.267z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M518.98 1249.508c.503-.217 1.072-.16 1.837.113-.46.198-1.115.18-1.837-.113z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1137.87 216.717c.126.285-.331.218-.558.262-.566-.497-.906-1.038-1.207-1.91.573.233 1.106.798 1.765 1.648z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M353.752 1168.163c.557-.11.834.046 1.156.53-.364.42-.834.62-1.304.82-.023-.398-.046-.797.148-1.35z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1192.959 305.602c-.288-.493-.193-.796.016-1.312.535-.243 1.044-.247 1.881-.055-.316.64-.959 1.085-1.897 1.367z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M505.992 1246.421c.517-.185 1.084-.088 1.835.236-.473.168-1.13.107-1.835-.236z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1259.176 838.93c-.181-.595-.054-1.165.364-1.843.175.552.06 1.21-.364 1.844z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1276.185 538.823c-.154.18-.517.188-.696.158-.202-.543-.225-1.057-.087-1.924.419.294.678.94.783 1.766z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1275.06 726.192c.191.569.092 1.032-.283 1.733-.188-.454-.098-1.146.282-1.733z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1277.387 543.85c-.536-.402-.882-.983-1.125-1.92.507.342.912 1.04 1.125 1.92z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1263.976 824.646c-.413.42-.77.491-1.383.662.024-.686.305-1.472.928-2.317.398.396.455.852.455 1.655z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M170.144 935.982c.633.21 1.24.783 1.868 1.685-.616-.22-1.255-.77-1.868-1.685z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1289.717 712.671c-.405.216-.705.221-1.453.179-.058-.505.333-.961.724-1.418.278.343.556.686.729 1.24zM1245.46 874.004c-.078-.644.175-1.375.699-2.25.059.626-.154 1.395-.698 2.25zM1258.767 772.173c.514.345.825.858 1.077 1.689-.466-.296-.873-.909-1.077-1.69zM1267.729 760.007c.256.604.203 1.188-.137 1.896-.25-.556-.212-1.236.137-1.896zM1269.905 753.118c.225.595.131 1.149-.24 1.809-.212-.546-.145-1.198.24-1.81z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1277.341 512.847c-.538-.384-.888-.944-1.146-1.853.506.327.92 1.002 1.146 1.853zM1275.338 534.85c-.528-.39-.872-.957-1.124-1.874.498.332.902 1.016 1.124 1.874z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1274.653 787.095c-.373-.453-.473-1.007-.621-1.987-.047-.426.323-.438.47-.328.24.812.332 1.513.151 2.315z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M549.854 106.614c-.192-.457-.052-.785.114-1.381.495-.28.964-.293 1.758-.17-.297.651-.919 1.166-1.872 1.551z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1188.718 346.244c-.236-.233-.11-.573.002-.714.77.216 1.428.573 2.055 1.25-.628.11-1.224-.097-2.057-.536z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1211.24 369.548c-.697-.179-1.407-.699-2.055-1.596.722.166 1.382.71 2.055 1.596z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1110.518 1046.327c-.764-.193-1.345-.755-1.904-1.63.71.212 1.398.736 1.904 1.63z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1182.675 340.292c-.73-.107-1.555-.536-2.288-1.368.792.08 1.493.564 2.288 1.368z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1231.985 402.717c.11.565.083 1.035.072 1.857-.36-.283-.735-.92-.806-1.679.304-.121.599-.274.734-.178z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M179.535 962.391c.116-.45.399-.725.7-.979.007-.006.212.22.325.339-.285.272-.57.544-1.025.64z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M126.406 580.865c.34.135.453.382.724 1.001.07.557-.02.74-.36 1.098-.365-.546-.48-1.268-.364-2.1z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1135.644 1001.019c-.068.66-.472 1.352-1.195 2.11.074-.65.467-1.363 1.195-2.11z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1287.293 725.025c-.152-.854-.07-1.723.23-2.836.331.515.443 1.274.513 2.421-.042.388-.51.4-.743.415z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1274.26 504.41c-.033.76-.11 1.263-.186 2.15-.266-.565-.533-1.511-.638-2.833.367-.107.573.16.823.683zM1271.1 498.264c.002-.32.49-.285.735-.295.336.438.427.887.435 1.67-.446-.129-.808-.592-1.17-1.375zM1236.488 415.009c.38-.214.778-.106 1.488.02.312.017.43.46.343.671-.663.018-1.238-.176-1.83-.691z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M489.177 1241.384c.369-.123.939-.031 1.704.282-.371.125-.938.029-1.704-.282z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1243.803 426.952c-.468-.087-.962-.474-1.308-1.246.526.058.904.503 1.308 1.246z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M446.215 1223.225c.25-.232.647-.195 1.338-.109.294.05.453.408.497.6-.533.053-1.111-.084-1.835-.49z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1109.917 1036.524c-.307-.403-.18-.648.314-.853.13.283.048.607-.314.853z\"\n        />\n        <path fill=\"#939191\" d=\"M1181.496 324.464c.016-.013-.016.013 0 0z\" />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M445.107 1222.273c.233-.197.514-.057.825.433-.238.188-.508.04-.825-.433zM449.101 1224.305c.228-.203.51-.068.836.417-.228.19-.503.047-.836-.417zM411.116 1204.255c.23-.202.513-.068.843.404-.238.21-.517.074-.843-.404z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M221.394 1222.167c-.577-.208-.856-.767-.69-1.21.627.364.808.612.69 1.21z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M441.122 1220.265c.226-.203.514-.07.87.397-.231.222-.523.091-.87-.397z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1260.245 470.606c-.317-.03-.57-.345-.679-.956.343.027.543.348.679.956zM1247.116 434.583c.041.362-.04.587-.228 1.155-.252-.04-.4-.424-.4-1.095.147-.288.505-.198.628-.06zM1239.44 418.479c-.325.04-.662-.222-.9-.824.362-.053.626.235.9.824z\"\n        />\n        <path\n            fill=\"#FFF\"\n            d=\"M462.268 322.6c.145-.088.29-.176 1.064-.313 3.298-.49 5.966-.93 8.828-1.098 1.072-.236 1.952-.745 3.141-1.41 1.43-.205 2.551-.251 3.758-.022 1.046.069 2.006-.137 3.418-.456 5.471-.085 10.49-.058 15.604.304 2.044.18 3.991.025 6.269-.213 1.435.168 2.54.42 3.735 1.053 3.356.461 6.622.542 10.208.623 1.117.294 1.915.587 2.776 1.252 2.033.441 4.002.51 6.247.576.733-.173 1.19-.343 1.648-.514 1.119.128 2.237.255 3.833.699 1.053.51 1.63.704 2.236 1.203.7.379 1.369.453 2.395.553 2.433 1.043 4.508 2.06 6.606 3.386.686.423 1.35.539 2.372.67 1.473.36 2.586.706 3.448 1.228-.097.684.056 1.19.21 1.697.664-.322 1.329-.644 2.337-.914 2.42 1.47 4.497 2.887 6.589 4.656.67 3.293 2.218 2.84 4.386 1.43 1.987.816 3.748 1.414 5.21 2.438 3.888 2.722 7.648 5.63 11.49 8.828 1.047.802 2.062 1.237 3.372 1.798 1.712 1.082 3.13 2.04 4.58 3.294.696.37 1.36.444 2.306.578.751.38 1.22.7 1.73 1.372 1.018.798 1.993 1.243 3.297 1.803 14.101 8.703 27.874 17.29 41.67 26.175.674.431 1.326.565 2.346.7 4.792 2.66 9.217 5.318 13.691 8.337.84.733 1.63 1.104 2.56 1.431.137-.044.395.087.452.487 1.514.781 2.97 1.162 4.748 1.538 1.61.706 2.898 1.417 4.218 2.465 1.008.476 1.983.617 3.307.728 1.45.313 2.55.654 3.702 1.343 1.355.447 2.66.547 4.42.643a555.25 555.25 0 0 0 5.844-.315c.671.006 1.343.011 2.4.366.681.58.979.813 1.31 1.341.697.372 1.36.447 2.4.522 1.098.2 1.819.401 2.61.858.717.215 1.364.173 2.382.099 1.105.054 1.84.141 2.633.566 1.352.435 2.646.533 4.26.625 1.092-.168 1.86-.329 2.63-.49.694.048 1.389.096 2.655.494 4.184.537 7.796.725 11.481 1.306 1.55.727 3.028 1.059 4.848 1.336 1.253.063 2.165.18 3.121.64 1.62 2.354 2.525 1.879 3.174-.513.575-.057.909-.04 1.617.026.965-.581 1.557-1.21 2.42-2.072 3.324-1.347 6.032-4.2 9.865-1.798 2.07.179 3.994.062 6.246-.087.762.02 1.197.072 1.693.484 1.704.415 3.348.469 5.367.541 1.096.23 1.816.44 2.612.9.721.188 1.366.126 2.423.028 1.785.066 3.156.167 4.599.62 1.715.366 3.36.38 5.343.428 1.788.997 3.24 1.958 4.68 3.236.64.492 1.29.667 2.339.861 1.448.198 2.496.377 3.632.83 1.048.065 2.008-.143 3.28-.489.758-.197 1.205-.258 1.788.01.388 1.464.64 2.602.73 4.028-1.356.845-2.551 1.402-3.887 1.635-1.006-.553-1.872-.782-2.738-1.011.637.695 1.274 1.39 1.81 2.358-.141.64-.184 1.007-.227 1.373-.246.255-.492.51-1.278.945-.51 1.839-.48 3.497-.416 5.557 2.766 2.49 5.423 3.112 8.273-.1 1.436-.132 2.489-.169 3.748.077 1.427-.12 2.648-.523 4.18-1.049.75-.16 1.191-.197 1.848.056 1.392-.268 2.566-.827 3.977-1.607 1.073-.41 1.91-.6 2.885-.546.66-.39 1.183-1.022 1.532-1.918-.375-.323-.576-.383-.441-.558 1.517-.251 2.698-.387 4.023-.219 1.035.386 1.925.467 2.987.801.751-.493 1.332-1.24 2.007-2.296.808-1.108 1.522-1.905 2.294-2.635.058.068.23.02.647.09.973.133 1.529.197 2.263.497 3.257.653 5.372-.276 5.549-3.777-.141-.065-.116-.373.205-.26.904-.442 1.488-.999 2.332-1.675.597-.3.933-.482 1.614-.48.864.199 1.382.215 2.064.49.77-.447 1.377-1.151 1.846-1.924-.138-.068-.108-.375.215-.284.883-.5 1.442-1.092 2.299-1.84 3.375-2.782 6.453-5.407 9.692-7.793 1.062-.753 1.963-1.745 2.835-2.978.371-.448.772-.656 1.42-.66 1.74-.99 3.685-1.9 4.647-3.427 4.11-6.527 6.132-7.588 13.825-6.488.338.049.76-.486 1.47-.684 1.402 1.14 2.477 2.215 3.572 3.64 3.096 6.485 9.139 7.78 15.012 9.822 2.163 2.847 3.72 6.365 8.433 4.438.794.13 1.234.293 1.723.807 4.49 4.034 9.764 5.065 12.85 2.945 2.763-1.897 5.669-3.594 8.357-5.587 1.085-.804 1.76-2.158 2.795-3.509.743-.363 1.314-.48 2.088-.318 1.701-.068 3.694.075 4.609-.848 3.264-3.295 6.162-6.952 9.284-10.569.085-.096.331-.024.788.045 3.884.414 7.549 1.7 10.685.904 5.916-1.502 10.096 1.64 14.8 3.751.849.38 1.924.256 3.115.396.22.03.518.365.585.683 1.696.675 3.324 1.032 5.394 1.323 2.808.123 5.173.311 7.648.831 7.835 4.64 15.98 2.12 23.956 1.635 2.688-.164 5.313-1.359 8.277-2.24.769-.143 1.227-.13 1.92.159 3.989.308 7.614.035 10.148-3.897 1.796-.252 3.19-.367 4.845-.175 3.217.455 6.525 2.523 9.066-1.389.75-.1 1.19-.068 1.895.29 4.005.83 7.844.967 11.467 1.922 5.901 1.555 6.863 4.907 3.396 9.79-.896 1.26-1.36 2.828-2.05 4.49-.17.556-.417.73-1.156.758-3.33 3.146-7.141 2.98-11.004 2.973-1.643-.003-3.287.725-5.264 1.16-.749-.115-1.163-.272-1.646-.763-1.493-.022-2.918.29-4.343.602.411 1.75.29 3.967 1.335 5.164 3.006 3.443 12.74 4.88 17.142 3.084 1.478-.603 3.106-.829 4.632-1.329 3.535-1.157 7.123-2.197 10.548-3.625 2.767-1.154 5.326-2.806 6.971-3.694 2.045 2.173 3.452 4.85 4.857 4.85 1.607 0 3.213-2.382 4.865-4.023.064-.68.084-1.063.076-1.471-.028-.024.02.031.387.018.715-.593 1.064-1.175 1.594-1.753.18.003.397.293.781.404 4.186-.25 7.697-.295 6.57 5.297-.05.253.892.706 1.444 1.451 1.129 3.756 2.186 7.126 3.27 10.868 1.266 1.1 3.238 2.731 3.631 2.413 3.958-3.202 6.051-.833 8.173 2.624.852 1.758 1.565 3.19 1.974 4.81-1.993 2.836-3.799 5.422-5.267 8.187-.267.504.843 1.74 1.355 3.073.075 2.475.112 4.514-.138 6.777.887 3.416 2.063 6.606 3.396 10.076.405 1.092.653 1.903.624 2.917.653 2.25 1.082 5.162 2.667 6.08 1.37.794 4.052-.679 6.25-1.17 1.336 1.629-1.755 6.017 3.34 6.26.086 1.115.095 1.862-.227 2.73-1.455.376-2.58.633-3.784.554-.737-1.16-1.393-1.986-2.126-3.143-1.198-.519-2.317-.705-3.437-.89.23.823.46 1.647.7 2.844.064 1.12.116 1.867-.24 2.6-5.967.12-4.675 4.724-5.264 7.858-.162.856 1.481 2.051 2.36 3.41.071.754.079 1.188-.202 1.844.168 3.285.44 6.394 1.17 9.39.314 1.289 1.58 2.345 2.417 3.896.035 1.425.068 2.462-.36 3.511-1.076.06-1.689.107-2.644.085-1.51-.698-2.694-1.295-3.838-1.962-5.761-3.359-11.043-8.176-18.808-6.317-1.407.26-2.594.796-4.1 1.41-1.505 1.225-2.69 2.372-3.875 3.52 0 0 .01.133-.44.06-9.787 4.843-17.178.403-25.664-5.223 3.24-2.238 5.703-3.939 8.247-5.3.776.778 1.471 1.217 2.166 1.655l.548-1.123c-.927-.29-1.854-.579-2.832-1.262-.105-5.16-6.421-10.437-13.11-10.426-9.903.017-19.804.638-29.87.759-.731.229-1.298.702-2.16 1.353-4.115 2.381-7.937 4.585-12.129 6.8-1.045.808-1.72 1.604-2.572 2.68-7.633 5.437-14.444 12.246-25.04 9.873 1.61-2.42 3.652-4.16 5.643-5.958 1.89-1.706 3.726-3.472 5.585-5.211 0 0 .039-.156.443-.132 1.342-.494 2.279-1.013 3.366-1.212.84.762 1.531 1.206 2.348 1.731v-7.515c-1.426.355-2.534.63-4.009.819-5.021-1.07-9.676-2.054-14.524-3.287-1.745.42-3.297 1.09-5.261 1.859-2.11.231-3.808.363-5.739.195-2.18-.833-4.37-1.956-4.943 1.726-2.808.965-5.331 1.73-8.023 2.257-.722.255-1.274.749-1.892 1.454-.305.456-.345.731-.186 1.035-.4.11-.801.22-1.713.088-1.703.273-3.057.573-4.058 1.336-11.571 8.82-23.038 17.777-34.666 26.52-2.113 1.59-4.828 2.38-7.72 3.756-.675-6.3 3.28-7.811 6.532-10.097.494-.98.642-1.955.845-3.296.675-2.714 1.294-5.06 1.921-7.72-.63-.508-1.27-.705-2.334-.898-3.806.62-7.275.943-10.554 1.909-8.982 2.646-17.138 6.553-21.167 15.874 0 0 .012.099-.36.055-.79.624-1.21 1.292-1.63 1.96 0 0 .01.092-.38.061-4.44 4.883-8.529 9.765-12.527 14.72-2.753 3.41-5.38 6.92-8.422 10.39-6.099-1.072-7.088.119-5.639 6.45-2.074 1.407-3.984 2.523-5.897 3.277-.41-1.163-.817-1.963-1.165-3.138 1.844-4.425 3.63-8.475 5.686-12.582.042-.705-.187-1.356-.706-2.11-.792-.46-1.293-.817-1.881-1.486-1.382-.301-2.677-.29-4.363-.256-1.43.033-2.471.044-3.668-.204-.74.19-1.323.638-2.245 1.188-5.112 4.06-10.682 7.374-14.503 12.103-9.095 11.258-17.364 23.184-26.337 34.87-.839 1.029-1.307 2.026-1.907 3.294-.99 1.083-1.848 1.895-3.161 2.64-.758-.118-1.06-.168-1.338-.607-.26-3.862-.545-7.336-.83-10.81-.119-.25-.16-.511.151-1.312-.059-1.48-.393-2.432-.794-3.72-1.775-2.174-3.145-2.31-4.168.707-1.238.778-2.21 1.433-3.283 1.752-6.197 1.841-10.128 6.047-12.596 11.834 0 0 .064.086-.294.026-1.068.35-1.78.76-2.847 1.202-.77.77-1.183 1.511-1.657 2.598-2.038 4.354-4.016 8.361-6.304 12.382-.418.676-.525 1.338-.7 2.377-3.651 8.815-7.237 17.253-11.15 25.675-.466.644-.606 1.303-.775 2.34-1.434 3.303-2.573 6.399-4.303 9.119-2.729 4.289-5.854 8.325-9.119 12.315-.878-.87-1.45-1.587-2.007-2.666.736-2.32 1.458-4.277 2.53-6.235.98-.33 1.61-.66 2.241-.991-.793-.338-1.586-.675-2.364-1.36 2.44-5.264 2.027-6.01-4.177-8.106-.697-.097-1.344.077-2.354.334-3.428 1.479-6.493 2.876-9.77 3.988-3.953-1.416-2.405 1.63-2.932 3.386-.06.705-.063 1.107-.066 1.509 0 0 .01.11-.326.041-.704.038-1.072.144-1.796.287-.8 1.017-1.242 1.998-1.705 2.953-.02-.025.03.015-.354.003-1.407 1.133-2.428 2.278-3.512 3.756-2.808 5.955-5.554 11.577-8.584 17.24-.343.7-.402 1.357-.475 2.344-.106.758-.2 1.186-.617 1.69-.338 1.38-.351 2.682-.413 4.376-.801 4.443-1.554 8.495-2.307 12.546 0 .719.002 1.437-.431 2.553-2.442 6.416-4.448 12.434-6.742 18.494-.343.701-.398 1.36-.456 2.416-3.054 7.112-6.105 13.829-9.584 20.54-1.002-.031-1.577-.056-2.09-.507.589-3.013 1.73-5.666 1.462-8.168-.248-2.318-1.474-5.494-3.246-6.416-1.782-.929-5.063-.103-7.14.991-1.859.979-2.973 3.371-4.721 5.157-.463.669-.62 1.321-.835 2.328-2.75 7.442-5.44 14.53-8.442 21.674-.364 1.033-.415 2.008-.483 3.35-.415 1.775-.814 3.184-1.58 4.692-.658 1.86-.948 3.62-1.22 5.793-2.73 9.983-5.48 19.555-8.584 29.18-.721.83-1.088 1.606-1.473 2.735-2.312 3.874-2.685 9.054-8.174 9.309-.347-3.369-.705-6.244-1.067-9.518.358-2.46.72-4.52 1.425-6.639.382-1.374.42-2.689.473-4.351.392-1.43.77-2.511 1.498-3.647 1.78-1.044 3.213-2.035 5.032-3.293-1.412-1.134-2.483-1.993-3.57-3.155.045-.703.107-1.102.46-1.531.63-.314.97-.596 1.308-.88-.428-.37-.856-.74-1.452-1.334a10.952 10.952 0 0 0-1.555-.96 64.319 64.319 0 0 0-2.443-1.374c-5.755 1.906-9.724 5.392-12.177 10.507 0 0-.14.47-.596.699-4.372 6.474-8.768 12.476-12.088 19.024-4.511 8.9-8.2 18.217-12.569 27.395-.451 1.012-.575 1.984-.716 3.3-.307 1.454-.597 2.563-1.231 3.709-.404 1.035-.464 2.032-.59 3.38-.701 1.686-1.273 3.06-2.059 4.299-.09.142-1.371-.47-1.822-.983-.245-2.083-.768-3.916-1.368-6.18.003-2.476.082-4.518.48-6.61.402-1.025.485-2 .554-3.376.298-2.47.61-4.538 1.243-6.635.637-.465.953-.9 1.269-1.335-.59-.157-1.182-.314-1.959-.692-.31-.782-.432-1.341-.314-2.07-.258-.72-.757-1.27-1.6-1.975-4.564-2.468-7.55.069-9.882 2.864-4.983 5.972-9.567 12.277-14.688 18.395-1.138.294-1.903.639-2.668.984.615.647 1.23 1.293 1.76 2.294-3.053 7.105-6.02 13.857-9.302 20.63-.42.688-.526 1.354-.656 2.366-.39 1.429-.755 2.512-1.462 3.642-1.714.993-3.085 1.94-4.769 3.102 1.349.79 2.293 1.342 3.153 2.24-1.441 3.055-2.797 5.767-4.153 8.478-.052.163-.105.326-.585.723-1.326 1.005-2.223 1.776-3.418 2.407-.881-.428-1.465-.716-2.09-1.417-.33-3.127-.617-5.84-.664-8.714-.204-.733-.648-1.306-1.286-2.166-4.998-5.955-7.247-6.248-12.312-.663-3.267 3.604-5.7 7.963-8.804 12.002-.462.66-.627 1.303-.802 2.32-4.832 7.8-9.655 15.225-14.803 22.571-.921-.363-1.516-.647-2.157-1.33-.372-2.448-.698-4.497-1.022-6.923-.598-1.116-1.198-1.854-1.798-2.592-.729.609-1.457 1.217-2.56 1.885-5.176.879-8.901 3.12-10.717 7.885 0 0 .065.09-.339.042-4.43 2.682-8.456 5.41-12.848 8.119-1.875-.706-3.384-1.393-4.885-2.468.016-1.425.023-2.461.31-3.685.769-3.198.36-3.644-2.588-2.866-5.794 1.351-11.151 2.733-16.667 3.866-.736.196-1.313.64-2.129 1.251-.416.49-.593.813-.77 1.135-.418.103-.835.206-1.626-.143.094-2.328.562-4.204 1.319-6.16.058-1.046-.173-2.01-.625-3.255-3.487-1.501-6.754-2.723-10.021-3.944-1.724.017-3.447.033-5.497-.262-.375-.486-.425-.66-.5-1.183-.863-2.009-1.7-3.67-2.626-5.707-.565-2.103-1.04-3.83-1.23-5.772-.217-1.416-.718-2.619-1.248-4.25.082-2.137.192-3.846.607-5.62.337-1.036.369-2.008.405-3.435-.107-1.942-.217-3.429-.328-4.915-.02-.356-.039-.712.352-1.486 1.019-2.099 1.611-3.786 2.237-5.46 1.58-4.225 3.175-8.444 5.067-12.693.405-.69.506-1.351.617-2.406 3.134-10.565 6.588-20.573 14.409-28.62 1.117-1.39 1.865-2.755 2.769-4.408.806-1.609 1.457-2.929 2.107-4.249 0 0-.016-.125.37-.074.797-.616 1.207-1.283 1.618-1.949 0 0-.018-.115.368-.067.789-.636 1.192-1.32 1.596-2.005 0 0-.033-.089.355-.044 2.381-1.377 4.376-2.799 6.756-4.201 1.173-.98 1.96-1.98 2.87-3.261.426-1.007.728-1.732 1.03-2.458 0 0-.003-.1.357-.071.792-.61 1.225-1.248 1.658-1.887 0 0 .012-.12.376-.073.801-.565 1.237-1.178 1.674-1.79 0 0 .049-.164.476-.167 3.65-2.12 6.871-4.238 10.477-6.322 1.225-.897 2.067-1.827 3.043-3.07 6.37-5.505 12.407-10.961 18.897-15.811 5.904-4.413 12.858-7.537 18.323-12.386 5.597-4.966 9.947-11.337 14.843-17.094 0 0 .09-.227.497-.21.777-.575 1.145-1.169 1.514-1.763 0 0 .071-.241.48-.227.778-.575 1.146-1.165 1.514-1.754 1.06-1.055 2.12-2.11 3.686-2.983 4.414-2.667 8.654-5.162 12.155-8.444 5.844-5.48 11.216-11.462 17.139-17.217 1-.239 1.648-.493 2.296-.747-.289-.461-.578-.922-.796-1.73 2.451-3.098 4.83-5.847 7.4-8.34.718-.584 1.247-1.425 1.846-2.59 1.673-2.09 3.275-3.856 5.226-5.64.787-.716 1.224-1.416 1.71-2.455 3.315-4.457 6.566-8.588 9.852-12.69 12.663-15.813 23.222-32.495 25.406-53.43 1.45-13.9 2.025-27.629-.964-41.512-.207-1.074-.675-1.956-1.187-3.238a1714.006 1714.006 0 0 0-6.168-22.165c-5.341-18.642-17.865-32.936-30.832-46.103-12.29-12.478-27.238-22.337-40.985-33.693.291-1.543.55-2.74.92-4.45-1.766.817-2.9 1.341-4.34 1.725-7.464-5.66-14.875-10.884-21.711-16.775-9.247-7.967-18.012-16.49-27.084-24.664-1.627-1.466-3.735-2.4-5.62-3.579 0 0-.117.018-.1-.382-1.724-2.421-3.465-4.443-4.955-6.647-.526-.746-1.303-1.31-2.263-2.157-9.856-10.09-19.545-19.879-29.172-29.729-.782-.8-1.138-2.014-1.706-3.382-.682-1.093-1.35-1.838-2.292-2.772-4.835-6.391-9.394-12.595-12.939-17.417 2.257-3.442 4.09-5.612 5.201-8.104 1.212-2.717 1.774-5.727 2.536-8.631.037-.141-.73-.493-1.123-.747-.048-.404-.096-.809.276-1.572 1.785-2.935 3.306-5.444 4.466-8.109 1.145-2.631 1.158-6.244 3.018-7.978 4.512-4.209 9.81-7.575 15.134-11.223.832.763 1.32 1.47 1.67 2.451-1.038 1.375-1.938 2.474-3.203 3.558-1.009.295-1.653.606-2.297.916.378.446.756.892 1.053 1.672-.883 1.043-1.684 1.75-2.68 2.186-1.071.251-1.947.775-2.994 1.55-.023 1.62.124 2.986.291 4.756 2.464 2.48 4.817 3.28 7.173-.26 2.424-1.093 4.542-2.017 6.861-2.667 1.046-.29 1.891-.855 2.84-1.612.396-.409.447-.672.259-.981m608.803 176.965.911.968.545-.626c-.51-.302-1.018-.603-1.629-1.568l-2.075-.904-.389 1.087c.855.159 1.71.317 2.637 1.043m-620.562 399.58-.907 1.277 1.343.34c.053-.498.107-.997-.436-1.617m49.692-21.54.013-1.177c-.163-.001-.467-.014-.468-.003-.03.39-.032.783.455 1.18m133.094-101.17-.853.813c.113.118.317.344.324.337.3-.253.582-.527.529-1.15M887.2 504.606l.013-1.178c-.163-.001-.468-.014-.469-.003-.03.39-.032.784.456 1.181m-11.635 7.688-.815-.853c-.118.112-.344.316-.338.324.254.3.528.583 1.153.53m125-22-.815-.854c-.117.113-.344.317-.337.325.253.3.528.582 1.152.53m-168 45-.815-.855c-.118.113-.344.318-.338.325.254.3.529.583 1.153.53m232.828-41.094 1.178.012c.002-.163.015-.468.004-.468-.391-.03-.785-.032-1.182.456m-204.69 39.365a5353 5353 0 0 1 .855-.816c-.112-.118-.317-.345-.325-.338-.3.254-.583.529-.53 1.154m-12.503-128.961.013-1.178c-.163-.001-.468-.014-.468-.003-.03.39-.032.784.455 1.18m-57.496 177.96.852-.813c-.112-.118-.316-.344-.324-.337-.3.253-.581.527-.528 1.15M570.568 699.296l-.817-.856c-.119.113-.346.318-.34.325.255.301.53.584 1.157.531M462.704 400.567l.856-.816c-.113-.118-.318-.345-.326-.338-.3.254-.583.529-.53 1.154z\"\n        />\n        <path\n            fill=\"#FBFBFB\"\n            d=\"M606.053 1112.905a22.892 22.892 0 0 0-2.725-.549c-.68-.032-.85-.006-1.011.092-2.215-.746-4.43-1.492-7.157-2.496a35.392 35.392 0 0 0-3.188-.946s-.252-.332-.59-.71c-3.04-1.638-5.742-2.899-8.475-4.174l3.163-5.038s-.067-.073.302 0c.84-.578 1.31-1.227 1.78-1.877 0 0-.041-.083.35-.014 1.472-.956 2.554-1.98 3.636-3.006 0 0-.034-.083.359-.013 2.81-1.946 5.227-3.962 7.644-5.977 0 0-.01-.078.377.015 2.797-1.945 5.208-3.984 7.619-6.023 0 0-.022-.084.377.003 3.843-2.199 7.35-4.397 10.718-6.79 5.148-3.66 10.322-7.306 15.208-11.297 1.194-.976 1.313-3.268 1.926-4.955-1.655-.065-3.598-.713-4.903-.07-2.394 1.18-4.413 3.123-6.588 4.747 0 0 .024.093-.384-.013-15.05 5.828-29.527 12.228-44.388 17.551-12.13 4.344-24.432 9.91-38.11 4.295-.446-.282-.636-.376-.924-.747-1.345-.896-2.59-1.516-3.937-2.43-.002-.893.095-1.491.39-2.138.198-.048.573-.206.962-.152 2.17-.562 3.95-1.18 5.731-1.796 0 0 .445-.129 1.039-.016 2.627.062 4.662.011 6.995.187 5.19-1.24 10.082-2.707 14.973-4.174 0 0 .05-.158.338-.051 1.32.097 2.352.087 3.621.298 1.84-.59 3.442-1.4 5.044-2.21.878-.354 1.756-.708 3.3-.944 4.677-1.616 8.69-3.35 12.703-5.084 1.372-.728 2.743-1.456 4.621-1.925 4.118-1.548 7.728-3.355 11.34-5.161 3.262-2.17 6.524-4.341 10.403-6.52 1.234-.576 1.852-1.143 2.47-1.71 0 0 .305-.234.793-.19 1.091-.518 1.694-1.082 2.297-1.646.328-.158.656-.316 1.547-.435 1.157-.558 1.753-1.155 2.348-1.751 0 0 .33-.206.862-.149 2.062-1.254 3.593-2.564 5.123-3.874.989-.723 1.978-1.446 3.385-2.368.574-.284.728-.37 1.221-.44 1.388-1.004 2.439-2.023 3.489-3.041.807-.615 1.614-1.23 3.05-1.942 5.405-4.086 10.183-8.075 14.96-12.064 0 0-.035-.082.325-.022.818-.58 1.276-1.22 1.734-1.859 0 0 .02-.085.407-.09 5.639-5.208 11.177-10.157 16.061-15.684 4.838-5.473 9.017-11.528 13.484-17.328 0 0-.02-.069.36-.046 6.687-8.138 12.994-16.3 19.272-24.483.04-.054-.33-.422-.507-.643.456-.547.911-1.095 1.917-1.805.91-.912 1.27-1.662 1.63-2.411 1.245-1.79 2.492-3.58 4.304-5.588.956-.939 1.346-1.657 1.736-2.375.296-.446.591-.891 1.375-1.552 9.208-12.44 18.083-24.558 26.586-36.932 4.733-6.887 8.847-14.2 13.24-21.322 0 0-.065-.038.289-.09.816-1.005 1.278-1.958 1.74-2.911 0 0 .222-.287.548-.57 4.405-6.675 9.14-12.747 12.429-19.521 7.218-14.868 12.887-30.535 20.752-45.028 6.21-11.446 14.744-21.634 22.271-32.363 1.305-1.86 2.732-3.632 4.103-5.445.24-.288.48-.575.993-1.144.594-.345.778-.538 1.123-.944.784-.719 1.27-1.355 1.729-2.01-.03-.019-.008.047.325.041 1.078-.706 1.822-1.407 2.565-2.107.596-.487 1.191-.973 2.264-1.706 2.53-3.95 4.584-7.653 6.637-11.356 0 0 .091.027.387-.018.682-.696 1.068-1.347 1.453-1.998 0 0 .338-.292.685-.589.818-.93 1.29-1.562 1.761-2.195 0 0-.12-.066.265-.077 2.038-2.042 3.692-4.072 5.345-6.103 0 0 .346-.248.726-.491 1.848-2.226 3.316-4.21 4.784-6.192 0 0-.2-.239.217-.101.874-.538 1.331-1.213 1.789-1.888 0 0-.218-.249.203-.109.897-.51 1.373-1.158 1.848-1.807 0 0-.188-.299.23-.179.859-.545 1.299-1.209 1.739-1.873 0 0-.254-.275.187-.162.894-.543 1.347-1.2 1.8-1.857 0 0-.246-.254.202-.125.884-.56 1.321-1.249 1.758-1.938 0 0-.187-.174.245-.074 2.164-1.284 3.895-2.668 5.627-4.052 0 0-.073-.065.282-.001.856-.577 1.357-1.216 1.858-1.856 0 0-.208-.193.232-.086 1.52-.931 2.601-1.97 3.682-3.009 0 0-.122-.1.28-.035 4.212-2.563 8.036-5.17 11.83-7.82 4.731-3.307 9.438-6.65 14.155-9.977 0 0 .36.001.805-.113 1.03-.705 1.614-1.294 2.198-1.884 0 0 .356.022.865-.059 9.746-5.34 18.984-10.598 28.222-15.856 0 0 .344-.03.81-.19 8.83-4.138 17.072-8.407 25.595-12.012 7.904-3.344 15.93-6.697 24.22-8.769 14.367-3.59 28.901-6.765 43.898-6.31 1.057.105 2.115.21 3.915.378 3.31.409 5.873.775 8.442 1.094 7.222.898 14.446 1.776 21.67 2.662.337.075.674.15 1.454.448 4.546 1.38 8.671 2.462 12.748 3.704 7.885 2.402 15.82 4.675 23.585 7.421 5.83 2.061 11.677 3.914 16.419 8.627 4.24 4.216 9.72 7.186 14.653 10.705 0 0 .068-.132.117.251 4.773 6.677 11.954 11.554 12.711 20.966l-16.684-15.399s-.04.056-.083-.293c-3.998-2.805-7.953-5.262-11.908-7.72 0 0-.04.073-.121-.274-3.68-2.14-7.278-3.935-10.877-5.73 0 0-.033.08-.14-.27-4.176-2.09-8.135-4.201-12.346-5.488-5.764-1.761-11.719-2.896-17.592-4.3-.355-.075-.71-.15-1.543-.45-3.137-.664-5.795-1.1-8.454-1.536-.346-.085-.691-.17-1.458-.538-7.613-1.915-14.738-4.013-22.014-5.051-8.092-1.154-16.215-2.6-24.54-.918-8.56 1.73-17.273 2.689-25.87 4.255-1.358.248-2.457 1.923-3.676 2.938l3.427 3.6s.15-.133.079.28c1.86 3.617 3.79 6.821 5.722 10.026 0 0-.018.341.056.795.665 1.394 1.256 2.333 1.847 3.272-.024.92-.048 1.84-.145 3.39.082 3.784.236 6.94.39 10.094-.124.6-.248 1.198-.582 2.344-.549 3.241-.888 5.936-1.226 8.63-.14.325-.278.649-.662 1.456-3.953 9.164-7.662 17.844-11.37 26.525 0 0-.257.234-.587.506-4.164 4.598-8.024 8.903-11.822 13.262-1.8 2.066-3.481 4.234-5.216 6.356-.324.15-.648.302-1.513.67-8.145 5.411-15.747 10.606-23.349 15.8 0 0-.335.022-.758.139-1.022.712-1.62 1.306-2.22 1.9 0 0-.338-.01-.817.089a4401.482 4401.482 0 0 0-44.916 23.398c-1.849.977-3.48 2.365-5.213 3.562 0 0-.344-.028-.807.045-1.036.707-1.609 1.342-2.182 1.977 0 0-.355.045-.792.234-5.232 4.138-10.027 8.086-14.822 12.035 0 0 .058.045-.283.035-.814.637-1.287 1.282-1.76 1.928 0 0 .1.07-.275.077-5.154 4.848-10.081 9.552-14.669 14.567-4.213 4.606-8.06 9.547-12.07 14.34 0 0 .085.101-.296 0-4.183 5.307-7.985 10.717-11.787 16.126-.102.316-.204.632-.556 1.367-6.31 10.29-8.176 21.517-9.47 32.616-1.831 15.711 1.517 31.057 5.888 46.124.347 1.199 1.324 2.214 2.008 3.315 0 0-.016.348.075.84 2.768 6.499 5.12 12.68 8.24 18.447 2.048 3.786 5.204 6.972 7.864 10.428 0 0 .134-.153.057.24.594.854 1.265 1.314 1.936 1.773 0 0 .12-.176.062.23.614.856 1.286 1.305 1.957 1.753 0 0 .102-.155.045.257 2.957 3.526 5.972 6.64 8.987 9.754.428.606.856 1.212 1.572 2.254 5.623 4.563 10.957 8.69 16.29 12.817 0 0 .243-.243.213.202 1.18 1.538 2.31 2.74 3.615 3.707 4.45 3.298 8.96 6.512 13.447 9.759 0 0 .248.294.594.603 3.373 2.262 6.4 4.215 9.435 6.546-.928 2.245-1.864 4.113-3.134 6.077-2.214 2.04-4.093 3.985-6.306 5.96-4.174 3.259-8.015 6.487-11.803 9.75.052.033.018-.086-.346-.096-8.29 3.751-15.878 8.766-24.212 11.014-17.45 4.706-30.826 16.764-47.132 23.987-5.307 2.539-10.263 5.108-15.598 7.69-.596.146-.811.28-1.374.366-.753 1.087-1.158 2.224-1.863 3.535-1.338.671-2.376 1.168-3.614 1.578-.524-.095-.765.042-1.317.384-2.624.83-4.856 1.598-7.5 2.212-2.318-.607-4.202-1.207-6.133-1.483-5.89-.842-11.8-1.56-17.7-2.326-.397-.037-.794-.073-1.654-.503-10.27-.148-20.098-.21-29.87.507-3.326.245-6.51 2.452-9.758 3.762-.391.089-.782.178-1.669.056-5.971 1.644-11.38 3.745-16.945 5.277-4.679 1.289-9.54 1.915-14.628 2.662-.98-.374-1.654-.574-2.417-1.088-.82-.381-1.551-.448-2.646-.694-2.945-.869-5.527-1.559-8.217-2.477-.797-.224-1.485-.219-2.474-.298-.71-.145-1.12-.208-1.587-.53-.736-.276-1.417-.291-2.472-.413-1.141-.11-1.908-.115-2.674-.12 0 0-.318-.34-.704-.586-.71-.412-1.011-.377-1.706-.204-3.41-.493-6.402-.922-9.382-1.429.013-.077-.089-.197-.423-.397-2.463-.195-4.59-.19-7.106-.271-1.44-.193-2.493-.3-3.715-.75-7.425-.293-14.68-.243-22.364-.238-2.14-.054-3.853-.062-5.565-.07z\"\n        />\n        <path\n            fill=\"#FDFCFC\"\n            d=\"M1132.99 932.946c-.292.487-.584.975-1.152 1.907-.879 1.291-1.483 2.14-2.411 3.097-1.478 2.051-2.631 3.992-4.35 6.884l6.773-.79c.497 4.22-2.506 5.296-4.938 6.787-3.301 2.025-6.613 4.035-9.956 6.067-.036.016-.08.08-.426.07-4.457 4.217-8.568 8.445-12.925 12.885-1.086 1.19-1.925 2.17-3.09 3.19-1.209 1.405-2.093 2.768-3.17 4.323-.302.334-.414.476-.851.638-1.096 1.25-1.866 2.477-2.838 3.891-.402.493-.602.8-1.133 1.134-1.692 1.982-3.054 3.935-4.64 6.124-1.167 1.418-2.11 2.6-3.384 3.823-1.202 1.42-2.075 2.802-3.152 4.425-.618.722-1.033 1.2-1.774 1.68-.922 1.02-1.518 2.041-2.332 3.28-.62.683-1.023 1.146-1.725 1.67-.745.937-1.192 1.814-1.862 2.917-1.046 1.18-1.87 2.135-3.075 3.117-2.434.1-4.851.918-6.48.122-10.26-5.017-20.746-9.754-30.406-15.786-18.783-11.73-33.09-28.489-47.67-44.814-1.915-2.144-3.44-5.005-4.136-7.786-1.08-4.31-1.375-8.829-1.855-13.275-1.064-9.853.7-19.08 6.24-27.46 3.958-5.985 7.837-12.024 11.75-18.039 0 0-.022-.027.32.018.808-.617 1.272-1.279 1.737-1.94 0 0-.05-.09.345-.012 2.95-1.742 5.448-3.647 8.07-5.363 5.924-3.878 11.448-9.099 17.963-11.19 14.16-4.542 26.819-12.029 40.12-18.227 8.987-4.187 17.833-8.759 26.394-13.755 6.075-3.545 11.57-8.086 17.554-12.348.465-.645.7-1.123.935-1.602 1.817-1.258 3.633-2.516 6.002-3.884 1.053-.671 1.554-1.232 2.054-1.793.378-.138.756-.275 1.719-.389 1.305-.097 2.026-.217 2.92-.14.822-.238 1.47-.675 2.278-1.306.103-.352.047-.51-.01-.668.348-.46.695-.921 1.484-1.705.747-1.375 1.05-2.428 1.355-3.482.2-.356.399-.713.986-1.083 11.397-10.64 22.433-21.238 33.372-31.936 1.11-1.087 1.63-2.777 2.424-4.188 0 0 .239-.314.609-.602 5.374-7.992 10.379-15.696 15.383-23.4 0 0-.036-.032.32-.066 3.658-7.43 7.534-14.632 10.102-22.273 2.613-7.773 3.938-15.98 6.069-24.205.29-1.124.34-2.04.47-3.33.235-1.613.39-2.853.899-4.203.79-2.007 1.227-3.903 1.663-5.8.042-1.391.084-2.782.628-4.551 1.279.871 2.738 2.128 2.723 3.368-.093 7.623-.309 15.257-.886 22.858-.713 9.399-1.834 18.767-2.749 28.152-.52 5.331-.98 10.669-1.467 16.003-.03.413-.06.826-.455 1.665-.75 2.73-1.135 5.032-1.52 7.334-.035.716-.07 1.432-.487 2.633-5.86 21.923-16.533 42.065-16.793 64.86 2.833-2.888 5.2-5.91 7.354-9.076 3.059-4.495 6.82-8.762 8.76-13.721 4.707-12.044 8.758-24.361 12.601-36.715 1.376-4.423 1.393-9.269 2.03-13.921.047-.71.093-1.422.514-2.63 1.394-5.791 2.414-11.085 3.435-16.378.019-.716.038-1.432.447-2.621.722-2.79 1.055-5.105 1.407-7.805a53.148 53.148 0 0 0-.166-2.647s.125.179.636.178c1.186 1.042 2.526 2.148 2.433 3.117-.799 8.364-1.885 16.7-2.794 25.053-.094.863.405 1.79.638 3.105.003 1.806-.003 3.195-.279 4.88-1.247 4.916-2.353 9.517-3.15 14.17-.422 2.466-.308 5.024-.465 7.89-.126 1.046-.225 1.741-.63 2.59-.657 2.453-1.008 4.753-1.358 7.052-.094 2.322-.188 4.645-.661 7.504-.72 2.853-1.061 5.17-1.402 7.486-.049.414-.097.829-.51 1.665-1.895 2.296-3.27 4.33-4.997 5.998-1.645 1.59-3.657 2.797-5.508 4.173 0 0 .021.078-.361.116-1.018 1.129-1.654 2.22-2.29 3.312 0 0-.18.356-.668.508-2.22 2.329-4.3 4.314-5.621 6.716-5.655 10.279-11.287 20.58-16.515 31.079-2.615 5.252-4.342 10.946-6.47 16.44-.461.984-.922 1.968-1.775 3.424-7.448 12.17-14.62 23.8-21.515 35.59-3.802 6.505-7.137 13.282-10.683 19.937m46.844-102.959-.285-1.263c-.121.096-.354.206-.344.285.055.428.17.848.629.978z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M270.182 632.937c-.466-1.861-.932-3.721-1.611-6.178.148-2.155.51-3.715.87-5.275 10.343-6.11 19.837-13.294 27.638-22.493 9.016-10.63 17.965-21.32 26.757-32.134 3.453-4.246 6.47-8.856 9.56-13.384 2.58-3.78 5.646-4.24 9.392-1.862 10.313 6.546 20.342 13.615 31.044 19.45 10.702 5.836 22.09 10.41 33.157 15.58 3.295 1.54 6.663 2.997 9.74 4.907 4.035 2.502 3.808 5.334 1.94 9.7-4.836 11.307-12.71 19.962-21.69 28.053-13.057 11.763-25.606 24.07-41.696 31.874-10.531 5.11-21.026 10.321-31.31 15.906-8.427 4.577-16.356 10.078-24.817 14.584-5.474 2.915-11.71 4.43-15.865 9.525-1.857 2.276-3.756 4.518-6.175 6.722-1.472-2.54-2.404-5.027-3.275-7.351l-3.563.694a71.622 71.622 0 0 0-.176-3.39c-.633-2.692-1.178-4.688-1.723-6.684.117-.819.234-1.638.416-3.095.372-8.109.677-15.579.983-23.05.118-5.543.202-11.088.369-16.631.103-3.436.331-6.868.632-11.007-.114-1.957-.356-3.21-.597-4.461z\"\n        />\n        <path\n            fill=\"#8E2D2B\"\n            d=\"M171.804 450.454c3.234-6.463 6.675-12.434 9.799-18.567 3.982-7.816 7.494-15.877 11.62-23.614 2.71-5.083 5.476-10.414 9.38-14.53 12.226-12.89 19.445-28.388 25.421-44.763 2.153-5.9 5.054-11.577 8.114-17.076 2.277-4.092 5.361-7.733 8.75-11.725 1.466.777 2.835 1.625 2.977 2.644.867 6.205 1.857 12.437 2.045 18.683.322 10.717-.63 21.514.296 32.16.824 9.467 2.584 19.068 5.555 28.074 3.051 9.252 8.124 17.83 12.212 26.748 4.012 8.749 8.34 17.39 11.707 26.386 3.052 8.156 9.66 14.885 9.694 24.564.54 1.65 1.095 2.948 1.666 4.587.955 1.207 1.891 2.072 2.77 3.293-1.247 3.24-2.437 6.126-3.898 9.168-.251 1.64-.23 3.122-.253 4.934-.093.993-.141 1.656-.482 2.518-.568 1.88-.843 3.562-1.117 5.244-5.004 6.761-9.918 13.591-15.042 20.26-3.272 4.259-6.887 8.253-10.284 12.417-2.247 2.753-4.33 2.64-6.515-.047-5.025-6.182-10.052-12.364-15.134-18.5-14.813-17.882-28.465-36.798-45.796-52.457-5.783-5.224-12.159-9.787-18.177-14.758-1.893-1.564-3.503-3.472-5.308-5.643z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M1149.55 465.575c.656 1.643 1.312 3.285 2.132 5.54.788 1.517 1.412 2.422 2.036 3.326l.33 1.58c.624 1.165 1.137 1.805 1.651 2.445 0 0 .005.322.097.81 1.981 3.76 3.871 7.032 5.76 10.304 0 0 .009.3.12.736.701 1.05 1.291 1.665 1.882 2.28.191.47.383.94.817 1.88 1.794.345 3.346.22 5.6.038 2.564 4.107 5.639 9.035 8.713 13.963 0 0-.034.309.023.712.172.548.287.693.403.838 1.22 2.44 2.442 4.879 3.775 8 3.428 10.127 9.338 18.818 8.432 29.506-.052.608.882 1.299 1.358 1.95-.014.336-.028.672-.14 1.545.611 3.861 1.32 7.185 2.028 10.51-.009.61-.017 1.22-.088 2.446.746 6.287 1.49 11.97 2.39 17.627.425 2.67 1.15 5.293 1.739 7.937.056 1.247.111 2.494.078 4.4-1.028 1.59-1.967 2.52-2.907 3.45 0 0-.061-.16-.036-.514-3.607-2.34-7.24-4.325-10.873-6.31-.295-.3-.59-.6-1.287-1.302a55.94 55.94 0 0 0-3.39-2.358c-.79-.99-1.579-1.98-2.742-3.494-2.274-2.9-3.087-4.918 1.07-5.663.621-.11 1.109-.964 1.658-1.474.285-.207.57-.414 1.26-.87.133-1.251-.141-2.251-.415-3.251-.264-.273-.528-.545-.955-1.315-2.793-3.23-5.424-5.96-8.055-8.69-2.473-2.331-4.946-4.662-7.645-7.558-1.588-1.56-2.95-2.557-4.312-3.603 0-.05-.095-.074-.074-.467-.525-2.277-1.073-4.161-1.554-6.284.097-.58.02-.896.053-1.52-.515-5.336-1.249-10.336-1.93-15.63-.058-.874-.168-1.454-.083-2.324-.503-2.995-1.201-5.7-1.864-8.743-.115-1.225-.267-2.11-.247-3.259-.433-2.424-1.038-4.585-1.614-7.077-.113-.745-.254-1.159-.257-1.867-.255-.995-.65-1.696-1.055-2.652-.14-.563-.274-.872-.315-1.54-.143-1.29-.377-2.223-.635-3.497-.522-1.607-1.022-2.873-1.448-4.401-.012-.423-.097-.583-.143-1.068-.103-.73-.246-1.136-.249-1.923-2.143-9.026-4.308-17.704-6.762-26.3-1.251-4.385-3.022-8.62-4.559-12.924-.048-.638-.095-1.275-.157-2.564.897-1.026 1.808-1.4 2.719-1.776.286.787.573 1.574 1.055 2.906 1.102 2.083 2.01 3.62 2.917 5.157 0 0 .016.399.064.926 1.274 2.801 2.5 5.076 3.727 7.35.05.341.099.681.264 1.552.624 1.188 1.132 1.846 1.64 2.504z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M1107.738 429.021c-1.982-3.132-4.075-5.501-8.033-2.299-.393.318-2.365-1.314-3.28-2.352 2.41.555 4.244.608 3.37-2.379a51.948 51.948 0 0 0-3.686-9.17c-.814-1.578-2.449-2.654-3.377.235-.48-.36-1.423-.813-1.372-1.066 1.127-5.592-2.384-5.547-6.573-5.662.995-2.75 2.378-5.026 4.08-7.309 3.691-5.287 7.065-10.567 10.763-15.834 1.184.025 2.045.036 2.905.047 0 0 .283.058.31.263.561 1.182 1.094 2.158 1.504 3.45.613 1.315 1.349 2.312 2.214 3.518.129.21.504.53.504.53.008.395.017.79.007 1.862 1.73 4.967 2.985 9.547 5.318 13.49 8.177 13.819 15.547 27.84 17.416 44.169.769 6.715 2.18 13.374 3.606 19.992 1.283 5.951 2.986 11.811 4.517 18.084.803 1.787 1.592 3.201 2.382 4.615l1.814-1.133c-.772-1.382-1.543-2.764-2.304-4.563-.714-5.44-1.44-10.464-1.756-15.496.947-.018 1.486-.028 2.176.277 1.218 3.796 2.286 7.277 2.965 10.84.67 3.016 1.727 5.95 2.88 9.2.128.757.161 1.197-.075 1.73.015.766.3 1.437.74 2.408.25.735.35 1.17.23 1.636-.012.224.194.42.515.983.759 2.906 1.403 5.443 1.87 8.29-.01 1.23.156 2.148.29 3.446.07 1.641.176 2.904.015 4.402.384 2.483 1.033 4.73 1.784 7.396.212 2.743.324 5.067.173 7.616-.084 1.732.094 3.24.235 5.06-.145.72-.255 1.125-.657 1.649-.619 1.768-.945 3.42-1.27 5.484-.166 2.556-.334 4.698-.743 6.858-.553.341-.864.663-1.175.985-.455.012-.91.024-1.915-.143-1.406-.129-2.26-.079-3.311-.304-1.4-.101-2.602.072-4.157.231-1.652-.46-2.953-.906-4.254-1.352 0 0-.068-.006-.042-.331-.171-.67-.368-1.013-.227-1.374 1.218-.692 2.097-1.368 3.207-2.033.23.01.673.139.884.377 3.116-1.47 2.194-2.985-.128-4.74-.1-.735-.097-1.163.127-1.716-.03-.76-.283-1.395-.714-2.316-.619-1.06-1.06-1.834-1.479-2.964-.896-1.788-1.815-3.222-2.859-4.987.205-1.427.536-2.523 1.16-3.617.441-.663.588-1.328.747-2.37-.199-3.444-.41-6.511-.299-9.611 1.302-.031 2.282-.028 3.227.363.418 4.207.87 8.025 1.323 11.844l1.797-.277c2.495-4.429-.095-8.165-2.135-12.318-1.709-1.414-3.374-2.492-5.113-3.514-.073.056-.246-.005-.07-.207.056-.512-.062-.824-.238-1.424-.132-.472-.206-.654-.228-1.144-.051-.713-.155-1.118-.344-1.871-3.065-2.512-4.218-.211-5.74 1.616-1.455-1.1-2.633-1.961-3.858-3.164-1.265-4.807-2.485-9.272-3.652-14.124-.491-3.2-1.036-6.014-1.58-8.828 1.124-.256 2.248-.513 3.963-.644 2.242 4.687 3.893 9.249 5.544 13.811l2.389-.687c-2.232-6.399.773-13.466-3.727-19.66-.796-1.095-.438-3.028-.614-4.574l4.687-.265c-.914-1.709-1.39-3.52-2.556-4.56-1.644-1.465-3.797-2.36-5.837-3.774-.266-.632-.427-.99-.427-1.762-.56-4.02-1.28-7.625-2.028-11.497-.091-.617-.155-.967-.04-1.613.275-1.448.37-2.602.863-3.774.882-1.13 2.066-2.542 1.738-3.306-2.398-5.591-5.1-11.053-7.705-16.555l-1.505.642c.913 2.553 1.893 5.083 2.72 7.663.856 2.668 1.563 5.383 1.971 7.997-2.103-2.879-3.764-5.73-5.606-8.457-1.323-1.958-2.878-3.174-4.24.061m-6.652-24.944-4.397-5.49-1.836 1.451c.993 1.357 1.985 2.713 3.368 4.8.908 3.093 1.816 6.186 2.805 9.992l2.497 5.07 1.782-.76c-.758-2.041-1.517-4.083-2.172-6.75.138-.398.275-.797.86-1.399-.122-.732-.245-1.464-.672-2.802-.72-1.137-1.439-2.274-2.235-4.112m47.54 141.443s-.088.048 0 0z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M817.665 416.213s-.173.047-.467-.307c-2.55-.102-4.807.15-7.432.28a110.658 110.658 0 0 1-4.273-2.359s.25-.427.69-.735c1.718-2.382 2.996-4.457 4.275-6.531.366-.087.732-.174 1.751-.295 6.209-1.195 10.685-3.706 13.59-8.939 2.69-4.844 5.993-9.343 8.904-14.07.996-1.615 2.173-3.42 2.295-5.207.205-2.983-1.215-4.41-4.177-2.245-.753.309-1.506.618-2.956.994-3.594-1.006-6.492-2.08-9.389-3.155-.343-.436-.685-.871-1.23-1.88-.269-3.009-.626-5.477-.355-7.874 1.237-10.964-5.17-21.105-14.071-21.75-3.294-.238-6.622.007-9.934.032-.418-.06-.836-.12-1.736-.441-1.37-.19-2.258-.117-3.146-.044-3.25-.114-6.5-.228-10.378-.643-1.947-.566-3.265-.83-4.584-1.094-.365-.12-.73-.24-1.48-.749-1.325-.752-2.265-1.116-3.205-1.48 0 0-.068-.018-.154-.346-.751-.718-1.417-1.108-2.082-1.498 0 0-.354-.232-.608-.614-.866-.783-1.477-1.184-2.089-1.585-.532-.592-1.063-1.184-1.908-2.297-2.62-2.88-4.927-5.239-7.233-7.598 0 0-.074.009-.085-.33-.598-.805-1.187-1.27-1.775-1.737 0 0-.07-.06-.096-.432-1.333-1.78-2.638-3.187-3.944-4.594 0 0-.172-.358-.238-.845-.607-1.05-1.148-1.614-1.688-2.177-.684-.933-1.618-1.777-1.985-2.821-.405-1.153-.839-2.943-.267-3.633.785-.95 2.716-1.841 3.789-1.522 7.964 2.366 16.493 2.846 22.686 10.106 6.888 8.075 19.365 9.477 28.726 4.595.44-.23 1.03-.33 1.307-.683 7.753-9.866 13.942-24.756.572-35.75-5.166-4.247-11.387-7.19-16.891-11.061-1.769-1.244-3.524-3.446-3.83-5.434-.155-.997 2.823-2.736 4.614-3.725 4.048-2.235 8.721-3.599 12.285-6.403 14.121-11.113 27.668-7.247 41.43.568 7.32 4.157 14.878 7.899 22.348 11.792 6.334 3.302 12.571 1.29 18.796-.452a4357.103 4357.103 0 0 0 18.578-5.246c3.737-1.064 3.89-1.38 2.944-5.67-11.968 5.213-23.1.402-33.99-3.512-7.358-2.645-9.662-10.469-7.028-17.97 2.077-5.915 5.644-10.4 10.524-14.437 9.613-7.952 18.715-16.527 27.937-24.943 3.59-3.277 7.042-2.61 10.635-.237 5.24 3.461 10.46 6.952 15.724 10.374.495.322 1.247.248 2.377.684 1.483.548 2.47.769 3.43 1.37.964.92 1.955 1.459 3.044 2.337 1.66 1.245 3.22 2.15 4.587 3.308-8.683-4.164-17.499-8.063-25.562-13.153-7.258-4.581-10.484-5.305-16.845-.19-3.234 2.6-6.33 5.394-9.31 8.284-5.353 5.194-10.112 11.13-15.99 15.613-4.782 3.647-7.226 8.056-8.599 13.447-1.487 5.841.477 10.854 6.134 13.119 5.496 2.2 11.39 3.6 17.234 4.67 3.753.686 7.733.095 11.61.16 2.028.034 5.435-.369 5.82.494 1.152 2.59 1.898 5.976-2.28 7.3-7.223 2.29-14.575 4.242-21.645 6.934-9.296 3.539-17.162 1.24-25.455-3.541-9.592-5.529-19.841-9.977-30.016-14.41-6.309-2.748-12.786-1.896-18.56 1.964-5.742 3.837-10.904 8.639-18.27 9.4-1.455.15-2.798 1.376-5.68 2.885 4.486 2.405 7.858 3.945 10.945 5.928 5.115 3.286 11.486 5.857 14.73 10.533 5.306 7.65 6.556 16.666 2.477 26.082-3.63 8.383-7.572 14.495-18.266 14.737-9.613.217-17.766-1.481-23.93-8.916-5.124-6.18-12.275-5.814-19.142-7.139 5.992 10.018 12.984 19.023 22.278 25.814 2.72 1.988 6.76 2.626 10.283 2.967 6.946.673 14.028.205 20.91 1.197 4.02.579 8.376 2.317 11.507 4.856 6.575 5.332 5.973 13.38 5.475 20.782-.301 4.47 2.152 7.013 4.835 9.19.99.803 4.081-.653 6.056-1.464 4.125-1.695 7.907-.91 8.196 2.184.35 3.75.814 7.592-2.842 10.514-1.899 1.518-3.393 3.678-4.699 5.778-4.91 7.895-9.307 16.203-19.865 17.984-1.103.186-1.843 2.527-2.751 3.868l.946 1.232c1.753-.573 3.584-.981 5.246-1.751 4.878-2.26 9.689-4.664 14.41-6.713-3.174 2.191-6.353 3.921-9.239 6.049-1.38 1.018-2.204 2.79-3.28 4.222z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M270.228 701.66c1.22-.633 2.39-.86 3.613-1.1.871 2.325 1.803 4.812 3.01 7.574-2.638 3.58-5.613 6.834-8.443 10.208-2.113 2.518-4.047 5.185-6.046 7.797-8.752 11.438-17.452 22.933-23.129 36.303-3.613 8.51-7.528 16.988-10.062 25.838-2.542 8.877-3.654 18.177-5.18 27.328-1.604 9.623-2.956 19.289-5.035 29.042-2.143-.352-3.67-.81-5.195-1.268-2.12-6.183-.92-12.23.324-18.418 1.952-9.716 3.325-19.547 5.026-29.315.705-4.044 1.623-8.051 2.526-12.478-4.66-.094-6.073 3.462-7.48 6.243-9.194 18.156-17.04 36.73-22.708 56.468-2.83 9.851-1.98 19.363-3.41 28.945-.999 6.703-1.91 13.525-1.756 20.269.231 10.052.885 20.165 2.394 30.096 1.334 8.778 3.885 17.396 6.273 25.98 1.8 6.468 4.147 12.786 6.332 19.142 2.411 7.018 4.915 14.004 7.021 21.267-1.676-1.014-2.995-2.29-4.314-3.566-1.293-3.739-2.593-7.475-3.88-11.216-3.405-9.9-7.142-19.701-10.103-29.732-2.467-8.362-5.018-16.907-5.766-25.524-1.46-16.81-1.62-33.71.64-50.554.813-6.052-.22-12.48 1.313-18.28 3.213-12.153 7.006-24.226 11.623-35.913 4.184-10.59 9.759-20.634 14.775-30.892.573-1.17 1.393-2.268 2.283-3.229 4-4.315 6.125-4.299 10.704.721 1.214-1.817 2.7-3.296 3.313-5.076 5.41-15.71 12.11-30.683 22.835-43.643 4.42-5.34 8.212-11.2 12.36-16.771 1.083-1.455 2.284-2.889 3.675-4.037 6.267-5.172 6.4-5.626 2.467-12.21zM444.233 189.056c-3.847 5.332-8.04 10.454-11.436 16.059-3.04 5.016-5.216 10.557-7.737 15.884-.565 1.195-.792 2.583-1.495 3.675-9.434 14.64-12.056 31.494-14.14 48.107-1.255 9.992.94 20.45 1.89 30.671.52 5.591 1.582 11.14 2.58 16.675.551 3.05 1.478 6.03 1.81 9.55-4.82.631-5.77 3.435-5.577 7.128-1.637-3.659-4.288-7.2-4.734-10.998-1.792-15.263-3.887-30.6-3.965-45.92-.069-13.3 1.378-26.836 4.12-39.853 2.312-10.984 6.724-21.555 13.582-31.047 4.747-6.57 8.78-13.57 15.301-18.625 1.149-.89 2.391-1.659 4.348-2.46 2.323.399 3.888.776 5.453 1.154zM578 1106.985c-4.013 2.495-7.756 5.704-12.093 7.345-10.745 4.064-21.638 7.864-32.718 10.863-5.808 1.571-12.128 1.317-18.228 1.733-6.615.45-13.241.72-19.863 1.073-6.122.327-12.267 1.167-18.36.891-14.879-.674-29.746-1.704-44.592-2.908a290.704 290.704 0 0 1-25.051-3.133c-3.83-.65-7.462-2.511-11.155-3.898-5.25-1.972-10.508-3.926-15.699-6.045-7.264-2.965-14.567-5.865-21.677-9.172-11.145-5.184-22.249-10.481-33.144-16.163-3.746-1.954-6.568-5.645-10.27-7.727-3.266-1.835-7.113-3.293-10.805-3.575-7.207-.55-14.487-.275-21.732-.118-4.123.089-8.296.32-12.316 1.13-1.229.249-2.024 2.641-3.226 4.444-.208.392-.325.495-.577.38-.744-.302-1.235-.489-1.849-.963-.657-1.13-1.192-1.974-1.728-2.818 1.973-3.858 5.37-5.178 9.438-5.259 2.163-.043 4.333.074 6.492-.04 8.664-.46 17.287 2.596 26.081-.7 4.448-1.666 9.03.423 12.636 4.037 7.947 7.967 17.466 13.531 27.874 17.67 13.689 5.442 27.376 10.889 41.03 16.419 4.124 1.67 8.256 3.396 12.17 5.497 7.398 3.969 15.316 5.038 23.547 5.336 4.76.172 9.47 1.543 14.233 1.814 14.57.826 29.153 1.403 43.733 2.022 2.657.113 5.334-.182 7.988-.036 10.336.567 20.418-1.005 30.541-2.915 7.621-1.438 15.63-1.114 23.092-3.03 8.432-2.165 16.482-5.866 24.625-9.083 3.693-1.46 7.21-3.363 11.197-4.776.395.76.4 1.233.406 1.705zM905.973 1043.12c5.887 2.786 11.927 5.29 17.628 8.415 11.468 6.287 22.494 13.425 34.18 19.257 12.92 6.45 24.405 14.713 33.755 25.476 12.406 14.28 20.913 30.245 16.545 50.317-1.121 5.153-1.295 10.51-2.326 15.688-.403 2.027-1.968 3.823-3.664 5.528-4.072-6.962-.222-13.952-.979-20.78-.757-6.828-.96-13.718-1.405-20.581l-1.233-.358c-.675 1.283-2.003 2.61-1.919 3.84.616 9.015-6.276 13.755-11.394 18.941-10.926 11.074-23.971 19.2-38.958 23.928-1.56.492-3.036 1.253-4.892 1.52-.329-1.016-.316-1.664-.06-2.316.243-.005.729 0 1.079-.003 1.455-.663 2.56-1.323 3.884-2.254 8.81-4.699 17.965-8.317 25.818-13.8 6.65-4.645 11.946-11.305 17.511-17.377 1.693-1.846 3.155-4.684 3.2-7.096.091-4.808 3.047-6.957 6.153-9.337l5.19 3.845c-.41-2.713-.256-4.238-.871-5.329-2.48-4.398-5.209-8.655-7.823-12.978-2.359-3.9-4.106-8.373-7.172-11.592-4.138-4.345-9.06-8.058-14.054-11.438-5.125-3.469-10.77-6.162-16.136-9.282-8.637-5.023-17.197-10.178-25.854-15.164-8.347-4.808-16.776-9.472-25.294-14.484-.387-1.051-.648-1.818-.91-2.586z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M779.998 1158.994c-.797-.338-1.593-.676-2.738-1.536-1.93-1.58-3.378-3.009-5.115-3.634-6.476-2.333-12.723-6.055-20.084-4.008-.446-.022-.892-.045-1.736-.464-.927-1.222-1.438-2.75-1.989-2.765-7.307-.2-14.625-.33-21.927-.08-1.2.041-2.336 1.991-3.501 3.06-1.052.106-2.103.212-3.86.035-5.145-.12-9.585.07-14.027.198-3.675.106-7.352.14-11.02-.163.976-1.837 1.944-3.307 2.912-4.777 0 0-.074.003.327 0 3.529-1.28 6.655-2.557 9.782-3.834.429-.058.858-.116 1.76.176 1.318.694 2.167 1.35 3.005 1.336 8.689-.135 17.377-.318 26.062-.612 6.054-.205 12.101-.603 18.152-.914.436.018.873.036 1.702.487 1.918 1.118 3.4 1.932 4.978 2.467 4.876 1.652 9.788 3.198 14.686 4.785.362.058.723.117 1.392.622 2.217 1.51 4.027 3.203 6.054 3.523 8.312 1.313 15.827 3.697 22.484 9.447 5.655 4.885 12.512 8.38 18.836 12.49 0 0-.008.037.08.313.415.418.742.56 1.07.701.567.468 1.135.936 1.751 2.054 3.74 4.42 4.335 11.18 11.046 12.03 0 0-.083.062-.078.402-1.127.877-2.339 1.97-3.374 1.822-1.693-.24-3.271-1.288-4.898-1.996-1.148-.89-2.296-1.781-3.617-3.3-3.58-2.646-6.987-4.663-10.394-6.68-.428-.295-.857-.59-1.548-1.368-.992-.868-1.722-1.253-2.452-1.638-1.708-1.313-3.416-2.627-5.459-4.474-3.714-2.212-7.094-3.89-10.474-5.568 0 0-.4-.037-.636-.444-3.865-2.456-7.405-4.692-11.16-6.477-1.787-.849-3.982-.838-5.992-1.216z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M262.514 1078.24c.939.928 1.474 1.771 2.155 3.218.854 1.263 1.562 1.923 2.52 2.794 1.974 1.788 3.7 3.366 5.425 4.944 1.662 2.087 3.324 4.175 5.203 6.846 1.158 1.405 2.098 2.226 3.039 3.047 0 0 .088-.024.087.32.594.812 1.19 1.279 1.784 1.746 0 0 .109.022.145.37.642.778 1.247 1.207 1.852 1.635 0 0 .11.012.148.36.639.78 1.239 1.212 1.84 1.645 0 0 .112.018.147.364.617.784 1.2 1.223 1.78 1.662 0 0 .137.033.21.378.66.754 1.247 1.162 1.834 1.57 5.919 5.866 11.838 11.732 18.017 18.15.868.982 1.476 1.412 2.084 1.842 0 0 .086-.022.057.35a32.203 32.203 0 0 1-.936 2.805c-2.95-1.891-5.901-3.782-9.332-6.106-7.404-4.099-14.327-7.764-21.25-11.43 0 0-.06-.01-.139-.354-.813-.649-1.548-.954-2.283-1.259-.346-.134-.692-.269-1.374-.797-1.997-1.435-3.658-2.477-5.318-3.52 0 0-.106.118-.135-.288-2.044-1.448-4.059-2.49-6.074-3.532 0 0-.335-.217-.593-.604-1.003-.683-1.748-.98-2.493-1.278-5.626-4.787-11.689-9.158-16.75-14.48-4.74-4.985-4.282-6.832 2.26-9.8 3.724-1.69 8.318-1.549 12.546-1.976.993-.1 2.09.834 3.544 1.378z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M570.955 690.883c-2.38 2.75-4.759 5.5-7.492 8.685-.759 1.081-1.164 1.727-1.57 2.373-5.57 5.77-10.943 11.754-16.787 17.233-3.501 3.282-7.741 5.777-11.841 8.384 3.855-3.868 8.22-7.2 11.887-11.177 8.858-9.605 17.554-19.37 26.005-29.335 7.926-9.345 15.658-18.873 23.113-28.597 12.574-16.403 19.02-34.816 19.835-55.738.627-16.097-2.334-31.403-6.417-46.578-4.535-16.855-13.564-31.364-24.936-44.687-9.457-11.08-20.89-19.564-32.33-28.23-6.994-5.298-13.653-11.048-20.355-16.72-16.19-13.702-32.33-27.461-48.447-41.247-1.625-1.39-2.961-3.118-4.42-5.028 1.9.84 4.007 1.773 5.634 3.239 9.072 8.174 17.837 16.697 27.084 24.664 6.836 5.89 14.247 11.114 21.857 17.048a400.305 400.305 0 0 0 3.241 2.797c13.78 11.01 28.729 20.87 41.018 33.348 12.967 13.167 25.49 27.46 30.832 46.103a864.14 864.14 0 0 1 6.147 22.5c.33 1.522.638 2.308.945 3.094 3.252 13.692 2.677 27.422 1.227 41.321-2.184 20.935-12.743 37.617-25.406 53.43-3.286 4.102-6.537 8.233-10.154 12.79-.818 1.083-1.288 1.728-1.757 2.373a316.858 316.858 0 0 0-5.131 5.757 72.166 72.166 0 0 1-1.782 2.198z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M269.074 621.336c.006 1.708-.355 3.268-.77 5.183-9.524.392-17.466-3.742-24.508-9.436-8.895-7.193-16.953-15.323-23.583-24.723-4.087-5.795-6.212-6.113-12.337-2.984-7.746 3.955-15.525 8.183-23.777 10.695-5.57 1.696-11.988.835-18.011.644-1.362-.043-3.258-1.841-3.755-3.24-.278-.783 1.695-2.533 2.862-3.625 2.158-2.02 4.581-3.76 6.693-5.822 6.19-6.043 14.69-9.536 18.688-18.068 3.023-6.45 3.064-7.357-1.575-12.574-7.03-7.906-13.549-16.265-20.563-24.185-3.058-3.453-6.684-6.451-10.338-9.288-.764-.594-3.205-.045-4.15.793-3.442 3.056-6.851 6.238-9.723 9.815-1.596 1.988-2.103 4.851-3.6 7.098-1.202-.705-1.904-1.19-2.607-1.674 3.257-8.746 10.008-14.724 16.784-20.552.985-.847 4.44-.416 5.48.656 6.216 6.419 12.055 13.203 18.03 19.857 5.748 6.402 11.388 12.909 17.32 19.137 2.251 2.364 2.623 4.355.813 6.972-3.624 5.242-6.65 11.024-10.932 15.647-3.646 3.938-8.824 6.422-13.094 9.836-1.971 1.577-3.393 3.84-5.064 5.791l.56 1.314c4.795-.71 9.57-1.636 14.39-2.089 11.322-1.063 19.812-8.676 29.759-12.893 5.086-2.157 6.467.41 8.76 3.216 5.346 6.54 10.208 13.591 16.248 19.418 6.821 6.58 13.965 13.314 23.698 15.535 2.47.564 5.28-.362 8.302-.454z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M671.98 356.02c7.553 5.27 15.157 10.468 22.638 15.837 4.297 3.084 8.596 6.22 12.522 9.748 3.443 3.094 5.308 7.723 10.357 9.4 1.313.437 1.572 4.048 2.315 6.2-2.13-.01-4.68.747-6.324-.153-15.182-8.306-28.993-18.398-41.874-30.114-11.424-10.39-24.003-19.664-36.839-28.29-7.985-5.365-17.453-8.498-26.153-12.839-6.33-3.158-12.298-7.1-18.774-9.891-9.199-3.965-18.6-7.552-28.133-10.626-7.685-2.479-15.657-4.124-23.57-5.82-4.847-1.037-9.877-2.329-14.729-2.017-14.902.96-29.816 2.22-44.601 4.259-5.215.719-10.074 4.025-15.463 6.023a.619.619 0 0 1-.363-.816c5.607-2.814 10.895-6.034 16.634-7.704 5.64-1.641 11.725-1.84 17.639-2.441 16.021-1.63 32.05-3.191 47.847 1.744 5.008 1.564 10.057 3 15.094 4.472 5.186 1.515 10.422 2.872 15.55 4.564 2.32.765 4.38 2.284 6.642 3.266 5.57 2.415 11.335 4.427 16.761 7.126 11.26 5.6 22.135 12.016 33.564 17.226 15.77 7.188 26.675 20.579 40.027 30.78 13.584 10.378 26.677 21.237 41.83 29.292.871.463 2.034.375 4.569.792-1.588-2.088-2.164-3.668-3.032-3.85-4.77-.992-6.764-4.924-9.482-8.189-1.467-1.762-3.272-3.293-5.108-4.689-7.514-5.712-15.11-11.316-22.65-16.994a121.191 121.191 0 0 1-7.252-5.924l.359-.371z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M754.16 88.236c2.527-.16 5.091.244 7.629.115 1.172-.06 2.29-1.161 3.578-2.169 1.841 4.187 3.16 8.943 5.332 13.271 2.794 5.57 6.013 10.975 9.534 16.119 3.007 4.393 6.699 8.317 10.114 12.48 1.669-3.74 4.32-2.34 8.431-1.367 8.065 1.91 12.057 7.401 16.252 13.36 5.514 7.831 11.408 15.402 16.715 23.367 3.411 5.119 6.06 10.745 9.05 16.145l-1.644 1.702c-1.728-.973-3.982-1.543-5.09-2.99-4.116-5.385-8.228-10.838-11.654-16.67-6.387-10.87-14.268-20.212-25.028-26.924-1.371-.855-3.057-1.206-5.016-1.923-.545-.066-.672.001-.798.068l.408.203c1.875 5.09 3.941 10.124 5.509 15.308.477 1.578-.423 3.57-.692 5.374-1.812-.754-4.39-.99-5.305-2.348-4.308-6.395-8.159-13.097-11.807-20.02 1.03.452 1.792 1.17 2.341 2.024 3.39 5.266 6.73 10.563 10.088 15.85l2.008-1.244c-1.602-16.245-12.559-27.503-22.6-39.475-.236 2.542.178 4.93.72 7.288.552 2.407 1.228 4.786 1.85 7.178-2.524-5.106-5.108-10.184-7.55-15.329a72.96 72.96 0 0 1-3.978-10.234c1.37-.542 3.232-.62 3.305-1.024.302-1.659.714-4.36-.12-4.936-1.622-1.122-4.053-1.074-6.78-1.64l2.02 5.141c-2.266-2.118-4.532-4.236-6.823-6.7z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M452.952 310.973c-4.981 3.706-10.279 7.072-14.791 11.28-1.86 1.735-1.873 5.348-3.018 7.979-1.16 2.665-2.681 5.174-4.375 7.815 2.62-7.053 1.89-15.62 9.999-20.684 5.435-3.394 9.548-8.894 14.297-13.404.942-.894 1.978-1.93 3.157-2.292 8.686-2.671 17.283-5.907 26.169-7.584 13.305-2.512 26.585-5.843 40.367-4.777 12.064.933 23.955 2.267 35.39 6.8 10.426 4.135 21.202 7.383 31.773 11.165 2.474.885 4.768 2.3 7.096 3.56 16.31 8.837 33.419 16.241 48.443 27.384 7.96 5.903 16.162 11.478 24.388 17.504.134.302-.105.55-.518.5-9.505-6.098-18.363-12.542-27.745-18.102-15.252-9.038-30.503-18.203-46.411-25.969-11.805-5.762-24.688-9.296-37.027-13.992-17.073-6.498-34.7-8.703-52.7-6.036-16.318 2.418-32.828 4.577-47.88 11.982-2.683 1.32-4.434 4.532-6.614 6.87z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M941.007 1172c-.012.647-.025 1.295-.047 2.258-6.46 4.369-13.654 3.184-20.427 2.398-17.11-1.985-33.021-8.196-48.492-15.517a1139.397 1139.397 0 0 1-26.692-13.06c-12.819-6.48-25.436-13.372-38.384-19.579-7.608-3.647-15.692-6.3-23.556-9.414-1.69-.67-3.353-1.406-5.297-2.587-.125-.926.018-1.376.162-1.827 2.232-.769 4.464-1.538 7.291-2.22 1.01.147 1.25-.03 1.313-.445a56.387 56.387 0 0 1 3.688-1.64c1.102-.308 1.632-.465 2.196-.26-2.416 1.98-4.867 3.599-8.446 5.96 6.163 1.29 10.298 6.476 17.08 4.087 1.396.409 2.483.68 3.59 1.312 3.148 2.766 6.003 5.7 9.455 7.476 8.414 4.327 17.141 8.039 25.667 12.156 3.949 1.908 7.71 4.203 11.577 6.282 2.051 1.104 4.154 2.111 6.225 3.18 5.98 3.087 11.773 6.632 17.979 9.167 8.225 3.361 17.05 5.326 25.107 9.006 9.84 4.493 20.26 4.022 30.496 5.108 3.072.326 6.338-1.176 9.515-1.841z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M289.388 479.087c-.048-9.328-6.656-16.057-9.708-24.213-3.367-8.996-7.695-17.637-11.707-26.386-4.088-8.919-9.16-17.496-12.212-26.748-2.971-9.006-4.731-18.607-5.555-28.074-.926-10.646.026-21.443-.296-32.16-.188-6.246-1.178-12.478-2.045-18.683-.142-1.02-1.511-1.867-2.714-2.87 1.548-2.814 3.497-5.553 5.743-8.406.517.675.899 1.459.933 2.257.411 9.53 1.05 19.063 1.065 28.596.015 9.707-.632 19.414-.889 29.123-.033 1.26.479 2.55.83 3.801.976 3.489 2.843 6.97 2.819 10.442-.042 5.984 1.284 11.304 3.842 16.652 3.828 8.005 6.914 16.364 10.691 24.395 7.786 16.554 15.82 32.99 23.39 49.89-1.637 1.072-2.912 1.728-4.187 2.384z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1092.854 983c.2-.306.4-.612 1.128-1.12 1.297-1.433 2.067-2.665 2.837-3.897.112-.141.224-.283.833-.665 1.394-1.598 2.291-2.957 3.189-4.316.839-.98 1.678-1.958 3.09-3.145 4.697-4.432 8.821-8.655 12.945-12.878 0 0 .044-.065.447-.051 2.532-.612 4.66-1.238 6.912-1.516-3.687 5.074-7.498 9.8-11.634 14.57-.71.742-1.095 1.442-1.674 2.414-7.189 9.744-14.332 19.111-21.123 28.727-4.079 5.775-7.61 11.938-11.753 17.844-1.97-.589-3.572-1.096-5.174-1.603-1.584-1.094-3.169-2.188-4.549-3.763 1.014-1.509 1.824-2.536 2.633-3.564.824-.954 1.647-1.909 3.012-3.117.974-1.152 1.408-2.05 1.842-2.95.403-.463.807-.926 1.728-1.657 1.131-1.257 1.743-2.245 2.356-3.234.415-.478.83-.956 1.752-1.733 1.397-1.67 2.287-3.04 3.177-4.41.944-1.183 1.888-2.365 3.368-3.859 1.91-2.234 3.284-4.155 4.658-6.077z\"\n        />\n        <path\n            fill=\"#DCDBDC\"\n            d=\"M416.042 571.873c-9.511-6.32-18.76-12.376-27.942-18.532-2.157-1.446-5.431-2.364-4.065-6.663 1.502.262 3.03.238 4.3.796 13.354 5.866 26.678 11.804 37.248 22.322 5.705 5.676 7.422 11.93 4.8 18.001-.488 1.13-1.416 2.068-2.252 3.252-4.11-6.6-7.957-12.775-12.09-19.176z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M644.839 761.986c.398-1.41.797-2.819 1.445-4.825.354-1.456.458-2.317.563-3.177 2.69-7.087 5.38-14.174 8.376-21.784.502-1.074.698-1.626.894-2.177 1.442-1.769 2.556-4.161 4.415-5.14 2.077-1.094 5.358-1.92 7.14-.991 1.772.922 2.998 4.098 3.246 6.416.268 2.502-.873 5.155-1.686 8.363-.328 1.487-.37 2.353-.412 3.219l3.154-2.902a4701.199 4701.199 0 0 0 9.377-20.734c.323-1.146.423-1.707.522-2.269 2.007-6.018 4.013-12.036 6.372-18.102-3.334 14.11-4.96 28.99-14.094 41.246-.794 1.065-1.308 2.37-2.217 3.307-1.098 1.131-2.479 1.988-3.737 2.964-.637-1.54-1.936-3.153-1.776-4.606.357-3.248 1.92-6.396 2.053-9.624.085-2.046-1.52-4.163-2.366-6.248-2.087.921-5.309 1.291-6.069 2.856-3.721 7.67-7.44 15.455-9.94 23.576-4.227 13.728-6.975 27.925-11.475 41.551-2.164 6.553-6.794 12.326-10.589 18.272-.688 1.079-3.274 2.165-4.046 1.697-1.277-.774-2.39-2.753-2.53-4.318-.867-9.593 1.402-18.717 4.582-27.688.702-1.98.869-4.151 1.406-6.655.587-.175 1.05.072 1.583.87.03 1.006-.01 1.46-.05 1.914-.062.4-.124.798-.382 1.792A330.552 330.552 0 0 0 627 785a199.574 199.574 0 0 1-1.385 3.857c-.36 1.79-.47 2.968-.58 4.147-.362 2.06-.724 4.12-1.35 6.865-.921 7.471-.9 7.596 1.323 9.726 5.5-.75 5.874-5.929 8.478-9.951a180.235 180.235 0 0 0 1.534-2.641c2.75-9.571 5.5-19.143 8.564-29.316.627-2.302.941-4.002 1.255-5.701z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M538.095 1080.139s-.375.158-.933.122c-1.114.87-1.67 1.775-2.642 2.685-3.37-.315-6.317-.765-9.28-.928-7.285-.4-14.577-.916-21.865-.9-4.705.01-10.263-2.057-13.721 3.708-2.955-1.574-4.81-5.42-9.097-3.003-10.559-3.732-35.855-3.888-39.062-.174 1.288.13 2.465.067 3.524.39 5.025 1.53 10.017 3.164 15.02 4.762-4.572-.582-9.145-1.162-13.717-1.747-6.083-.778-12.185-1.44-18.235-2.419-1.686-.272-3.219-1.486-4.812-2.913-.494-2.184-.997-3.722-1.5-5.26 5.249.322 10.5.618 15.746.986 1.312.092 2.603.574 3.91.607 29.18.734 58.36 1.438 87.54 2.125 3.134.074 6.272.013 9.637.316-.02.748-.266 1.195-.513 1.643z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M1078.418 1019.05c3.777-5.99 7.307-12.152 11.386-17.927 6.791-9.616 13.934-18.983 21.438-28.787.9-1.02 1.292-1.709 1.684-2.397 3.811-4.727 7.622-9.453 11.28-14.55-.154-.371-.2-.311.187-.13.643.055.898-.072 1.384-.123.553.053.874.024 1.402.22.797.382 1.39.533 1.98.685-.73 1.373-1.461 2.745-2.633 4.49-.785 1.087-1.129 1.802-1.474 2.517 0 0-.184.358-.582.629-.723.983-1.048 1.696-1.373 2.41 0 0-.206.338-.62.604-1.049 1.324-1.684 2.383-2.32 3.442-1.7 2.359-3.402 4.717-5.574 7.439-.842 1.052-1.213 1.742-1.584 2.431 0 0-.18.373-.55.671-.708.993-1.046 1.688-1.385 2.384-2.291 3.346-4.583 6.692-7.345 10.432-6.246 8.31-11.905 16.316-17.893 24.068-1.216 1.574-3.676 2.188-5.562 3.244-.4-.239-.799-.477-1.427-.942-.18-.457-.243-.652-.419-.81z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M555.39 836.186c4.747-6.169 9.33-12.474 14.314-18.446 2.333-2.795 5.318-5.332 9.92-2.575a29.924 29.924 0 0 1 1.32 1.855c.124.56.247 1.119.584 2.206.256.936.299 1.344.341 1.752-.312 2.067-.624 4.135-1.169 6.825-.363 1.483-.494 2.344-.625 3.206-.08 2.042-.159 4.084-.18 6.95.41 2.562.759 4.302 1.108 6.041.729.262 2.01.874 2.1.732.786-1.239 1.358-2.613 2.293-4.533.433-1.451.566-2.318.7-3.184.29-1.108.58-2.217 1.148-3.877.447-1.412.615-2.273.783-3.134 4.041-9.138 7.73-18.455 12.241-27.355 3.32-6.548 7.716-12.55 11.967-18.811-1.467 3.216-3.387 6.389-5.046 9.692-5.115 10.187-10.508 20.26-15.046 30.702-2.81 6.464-4.108 13.571-6.434 20.268-.548 1.576-2.51 2.66-3.82 3.97-1.132-1.673-2.807-3.2-3.3-5.043-1.87-6.987-1.16-13.863 1.023-20.796.575-1.825-1.007-4.589-2.239-6.511-.256-.4-4.038.47-5.022 1.696-5.268 6.559-11.094 12.928-14.958 20.29-5.1 9.72-8.365 20.386-12.823 30.466-1.767 3.996-4.615 7.514-7.31 11.274 1.015-2.686 2.37-5.398 4.065-8.68.794-2.1 1.25-3.631 1.705-5.162.365-1.083.73-2.166 1.347-3.781.415-1.088.579-1.644.743-2.2 2.967-6.753 5.935-13.505 9.227-20.822.564-1.382.803-2.198 1.042-3.015zM846.253 544.024c-1.785 4.05-3.57 8.101-5.636 12.772-.251 1.639-.221 2.658-.192 3.678l1.58-.424c1.912-1.116 3.822-2.232 6.183-3.803 2.203-2.4 3.957-4.344 5.71-6.29 2.684-3.465 5.311-6.976 8.064-10.387 3.998-4.954 8.087-9.836 12.481-14.728-9.58 12.01-15.771 27.101-29.475 35.944-1.742 1.125-3.607 2.059-5.753 3.272-1.765-4.23-1.197-7.503.624-10.896 1.677-3.126 2.904-6.494 4.478-10.095-5.752-1.377-11.01-1.231-14.928 3.063-6.198 6.794-12.07 13.898-17.852 21.055-4.999 6.188-9.739 12.589-14.48 18.98-2.838 3.827-5.328 7.917-8.247 11.677-1 1.29-2.828 1.937-4.278 2.877-.408-1.64-1.261-3.315-1.138-4.914.328-4.265 1.077-8.498 1.925-12.979.552 3.238.837 6.712.83 10.699a89.672 89.672 0 0 0-1.708 4.155l1.387.653 2.38-4.26c.859-.811 1.717-1.623 2.993-2.864.942-1.342 1.467-2.254 1.992-3.166 8.602-11.656 16.87-23.582 25.966-34.84 3.82-4.729 9.391-8.044 14.798-12.1 1.123-.377 1.614-.655 2.106-.933 1.04-.01 2.081-.02 3.776.18 1.83.253 3.008.294 4.186.335.501.356 1.002.713 1.788 1.519.337.906.388 1.363.44 1.82z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M410.277 337.135c-.342-4.023.609-6.827 5.372-7.048 2.506 6.919 4.643 13.935 7.005 21.692l3.029.57c1.521-4.168 2.917-7.991 4.516-12.125.595-.057 1.362.295 1.325.436-.762 2.904-1.324 5.914-2.536 8.63-1.111 2.493-2.944 4.663-5.2 8.105 3.544 4.822 8.103 11.026 12.969 17.735.962 1.27 1.618 2.035 2.275 2.8.554 1.022.91 2.237 1.692 3.036 9.627 9.85 19.316 19.64 29.262 29.998.823 1.06 1.373 1.565 1.922 2.07 1.74 2.022 3.482 4.044 5.218 6.408-1.69-.635-3.762-1.264-5-2.642-15.72-17.507-33.732-33.012-46.207-53.372-2.423-3.953-5.003-7.472-6.545-12.1-1.683-5.054-5.859-9.278-9.097-14.193z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1070.58 1010.065c-.428 1-1.238 2.027-2.35 3.24-4.996-1.712-9.77-3.434-14.367-5.54-17.415-7.977-32.89-18.922-46.598-32.168-8.292-8.014-16.197-16.582-23.154-25.753-3.154-4.157-4.277-10.278-5.089-15.693-1.35-9.007-1.565-18.153 1.895-26.924.06-.153.037-.352.125-.48 5.424-7.923 10.855-15.84 16.633-23.74-3.566 6.035-7.445 12.074-11.403 18.06-5.54 8.378-7.304 17.606-6.24 27.459.48 4.446.775 8.965 1.855 13.275.697 2.781 2.22 5.642 4.136 7.786 14.58 16.325 28.887 33.085 47.67 44.814 9.66 6.032 20.145 10.77 30.407 15.786 1.628.796 4.045-.022 6.48-.122z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M666.334 1118.438c2.581.69 5.163 1.38 8.226 2.51 1.193.542 1.905.644 2.617.747.674.2 1.348.4 2.4 1.05 1.088 1.095 1.799 1.739 2.51 2.382-6.634 4.154-12.977 8.9-19.966 12.33-11.803 5.792-21.606 13.98-29.93 23.824-7.781 9.201-14.737 19.108-21.903 28.817-1.59 2.155-2.54 4.783-3.783 7.194l1.46.983c2.148-1.687 4.294-3.374 6.762-5.144.32-.082.334-.07.271.28-1.827 2.415-3.369 4.76-5.454 6.425-.993.794-3.019.295-4.577.381-.01-1.685-.625-3.697.08-4.994 2.405-4.435 5.382-8.556 7.927-12.92 1.544-2.648 2.696-5.525 4.024-8.298.915-1.141 1.83-2.283 3.2-3.754a18.634 18.634 0 0 0 1.814-2.241c.904-1.144 1.809-2.289 3.198-3.753 5.675-5.475 10.905-10.592 16.02-15.822.86-.88 1.219-2.25 1.81-3.392.434-.013.87-.026 1.973-.074 2.441-1.347 4.213-2.658 5.985-3.969 1.816-5.141 7.54-4.224 10.92-7.027 3.95-3.277 8.211-6.179 13.108-9.815-6.857-2.51-12.39-4.535-17.966-6.935.724-.37 1.49-.365 2.788.031 1.145.39 1.759.389 2.372.387.41.063.821.126 1.716.555 1.123.325 1.76.284 2.398.242z\"\n        />\n        <path\n            fill=\"#DCDBDC\"\n            d=\"M716.329 196.622a98.52 98.52 0 0 0-3.4.261c-3.431 1.342-6.19 2.594-8.947 3.845-3.49-1.055-5.287-.648-5.759 3.856-.558 5.33-2.399 10.556-4.007 15.726-.346 1.113-2.074 2.48-3.164 2.48-1.04-.001-2.854-1.547-2.97-2.568-.345-3.032-.767-6.4.2-9.163 1.897-5.422.463-9.543-3.228-13.976 1.275-1.39 2.472-2.634 3.835-2.856 4.002-.651 8.07-.896 12.113-1.3l6.019.276c2.988.03 5.13.093 7.265-.005 2.921-.135 2.896 1.37 2.043 3.424z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M758.9 209.763s.296-.184.928-.056c3.075.413 5.52.96 7.959.926 4.49-.064 8.974-.47 13.757-.837.675-.274 1.053-.444 1.742-.494 1.785.876 3.26 1.634 4.734 2.39.618 1.264 1.236 2.528 1.976 4.26.26.876.399 1.284.399 2.037.23 1.832.597 3.32 1.282 6.09-6.812-3.032-12.745-5.332-18.348-8.263-5.777-3.021-7.903-2.253-9.441 3.936-1.012 4.072-2.53 8.02-3.82 12.023l-1.44.564c.26-8.74-6.709-11.455-11.65-15.867-1.608-1.435-3.13-2.965-4.156-4.482 4.28-.04 8.04.153 11.76-.155 1.486-.123 2.881-1.348 4.318-2.072z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M987.84 496.328c-1.506 1.784-3.342 3.55-5.232 5.256-1.99 1.797-4.034 3.537-5.643 5.958 10.596 2.373 17.407-4.436 25.334-9.996 1.197-1.126 1.923-1.847 2.649-2.569 3.821-2.203 7.643-4.407 12.056-6.794 1.07-.49 1.547-.797 2.026-1.104 9.902-.364 19.803-.985 29.706-1.002 6.689-.011 13.005 5.265 13.154 10.473.093.44-.008.344-.008.344l-8.165 5.639c8.486 5.626 15.877 10.066 25.598 5.211-3.487 3.874-7.676 5.886-13.136 3.124-3.516-1.779-7.277-3.065-10.857-4.726-3.894-1.806-4.09-3.573-.784-6.548 1.941-1.748 4.011-3.352 6.253-5.212-3.41-4.528-8.355-6.023-12.739-6.17-9.086-.305-18.34.057-27.284 1.57-5.048.853-10.132 3.873-14.29 7.093-7.506 5.81-14.678 12.005-24.413 13.486-2.325.354-4.874-.763-7.32-1.203 1.073-2.218 1.645-4.982 3.332-6.532 2.754-2.53 6.235-4.27 9.762-6.298z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M787.067 1258.734c-.38-.661-.37-1.29-.347-2.233 2.682-1.038 5.414-1.586 7.996-2.54 2.177-.805 4.178-2.083 6.167-3.941-13.567-1.146-27.532-.207-36.997-12.818 4.02-6.66 12.09-2.54 16.163-6.902-7.18-.415-14.697-.85-22.792-1.545-1.13-.788-1.685-1.318-2.24-1.847 8.368-.267 16.736-.737 25.1-.649 1.947.02 3.874 1.942 5.81 2.988-1.63 1.583-3.005 3.97-4.943 4.586-4.332 1.379-8.945 1.875-14.743 2.977 2.574 2.192 4.31 4.624 6.63 5.481 9.95 3.68 20.012 6.992 30.722 2.236 1.277-.568 3.429.832 5.175 1.32-.645 1.902-.74 4.807-2.038 5.52-4.157 2.28-8.74 3.798-13.198 5.508-1.977.758-4.047 1.269-6.465 1.859z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M782.976 209.183c-.379.17-.757.339-1.854.362-4.87-.525-9.023-.904-13.176-1.283 2.835-.417 5.662-1.102 8.506-1.18 3.335-.091 4.27-1.363 2.89-4.313-2.438-5.21-4.379-10.766-7.536-15.505-6.99-10.492-12.07-22.316-22.836-30.222-6.063-4.452-10.972-10.07-11.774-18.947-.76-8.394-4.106-16.594-6.692-24.76-.762-2.408-2.94-4.336-4.223-6.622-1.248-2.224-2.181-4.625-2.905-7.276 3.54 5.14 9.684 8.846 10.071 16.043.03.573 1.46 1.07 2.24 1.602.114.383.228.765.336 1.825.558 1.842 1.122 3.007 1.685 4.172.066.744.131 1.488-.093 2.869.481 4.572 1.716 8.483 1.927 12.448.477 8.98 6.465 13.534 13.186 17.688 1.255 1.218 2.51 2.436 4.039 4.22 3.494 5.107 6.925 9.515 9.878 14.224 3.405 5.43 6.297 11.178 9.586 16.683 2.02 3.38 4.366 6.563 6.565 9.834.05.442.098.883-.126 1.896-.08 2.462.113 4.352.306 6.242z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1110.295 820.376c-5.754 4.096-11.249 8.637-17.324 12.182-8.561 4.996-17.407 9.568-26.394 13.755-13.301 6.198-25.96 13.685-40.12 18.228-6.515 2.09-12.039 7.311-17.963 11.189-2.622 1.716-5.12 3.621-8.032 5.397 2.57-2.83 5.293-5.874 8.461-8.353 8.874-6.943 19.104-11.23 29.578-15.248 8.881-3.407 17.365-7.903 25.876-12.21a796.687 796.687 0 0 0 28.247-15.019c5.44-3.035 10.589-6.595 16.476-10.016.803-.033 1 .03 1.195.095z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1201.04 601.976c3.822 3.72 4.889 8.332 4.923 13.532.067 10.038.444 20.074.762 30.11.262 8.254.626 16.507.4 24.847-.988-.698-1.433-1.482-2.04-2.553l-3.483 9.352c.454-3.378 1.391-6.773 1.28-10.132-.474-14.256-.907-28.534-2.183-42.729-.313-3.481-2.739-6.286 2.029-8.417.676-.302.637-3.587.013-5.117-1.166-2.858-3.005-5.442-4.33-8.463 1.033-.36 1.83-.395 2.628-.43z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M492.48 907.014c4.823-7.426 9.646-14.852 14.73-22.81.458-1.08.652-1.63.847-2.18 2.807-4.02 5.24-8.38 8.507-11.983 5.065-5.585 7.314-5.292 12.305.958.475 1.065.763 1.548 1.051 2.03.289 2.714.577 5.428.884 8.921.322 1.457.626 2.135.93 2.813l1.48-1.623c.897-.77 1.794-1.54 2.993-2.323-1.05 2.314-1.978 5.1-3.87 6.836-1.937 1.778-4.057 1.244-4.123-2.153-.068-3.485.152-7.061-.583-10.416-.507-2.316-2.168-5.824-3.771-6.095-2.1-.356-5.37 1.376-6.86 3.234-3.07 3.826-5.325 8.313-7.859 12.561-3.44 5.77-6.814 11.577-10.242 17.353-1.845 3.11-3.615 6.28-5.683 9.237-.744 1.062-2.262 1.583-3.427 2.352-.482-1.11-1.25-2.186-1.392-3.338-.406-3.28-.557-6.592-.809-9.91-6.342-2.55-8.933 3.153-13.34 5.363 1.469-4.746 5.194-6.988 10.706-7.78 1.814.35 2.917.674 4.02.998.326 2.048.652 4.097.968 6.932-.009 2.275-.009 3.764-.009 5.252l1.076.103 1.471-4.332z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M532.91 112.673c1.032-.96 2.153-1.537 3.622-2.17 1.269 1.267 1.913 3.001 3.16 3.845 6.228 4.215 9.814 9.55 8.356 17.395-.09.482-.216 1.09-.012 1.473 1.196 2.236 2.485 4.422 3.742 6.625 1.079-2.138 2.842-4.202 3.081-6.43.402-3.73-.424-7.58-.197-11.348.083-1.371 1.698-2.651 3.189-3.748 7.099 4.049 13.623 7.872 20.147 11.696a84.06 84.06 0 0 0 1.865 2.173c1.656 2.207 2.906 3.99 4.156 5.772-5.225-3.7-10.387-7.492-15.697-11.064-3.354-2.257-6.93-4.185-10.329-6.214-.391 6.466-.769 12.307-1.089 18.151-.183 3.36-.993 7.225-4.774 6.754-2.23-.278-4.528-3.726-5.87-6.241-1.095-2.053-1.404-4.928-1.042-7.282 1.277-8.306-3.186-13.017-9.608-16.783-.971-.569-1.746-1.473-2.7-2.604z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M910.906 506.202c-.62 2.347-1.238 4.694-2.163 7.617a27.325 27.325 0 0 0-.942 3.093c-2.906 2.28-6.86 3.792-6.185 10.09 2.892-1.375 5.607-2.166 7.72-3.755 11.628-8.743 23.095-17.7 34.666-26.52 1-.763 2.355-1.063 3.745-1.33-4.81 4.247-9.779 8.3-14.838 12.236-7.694 5.986-15.438 11.906-23.197 17.807-.88.668-2.109.88-2.979 1.557-2.452 1.907-5.736 3.168-7.14.175-.888-1.894.826-5.536 2.244-7.863 2.281-3.746 5.283-7.053 7.98-10.545l-1.159-1.968c-4.998 1.15-9.98 2.374-14.998 3.435-7.452 1.575-10.9 8.2-16.46 12.568 3.688-9.345 11.844-13.252 20.826-15.898 3.28-.966 6.748-1.29 10.707-1.657 1.109.485 1.64.722 2.173.958z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M263.967 288.914c1.613-.652 3.165-1.39 5.007-2.274.532 4.891.778 9.929 1.015 14.967.411 8.718.817 17.436 1.154 27.038-.038 3.395-.007 5.906.025 8.418 0 0 .014.484-.432.71-1.854-1.69-4.286-3.5-4.496-5.538-1.061-10.283-1.592-20.622-2.206-30.948-.245-4.118-.223-8.252-.323-12.378 0 0 .195-.081.256.005z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M823.841 785.094c-1.019 1.838-2.446 3.61-3.751 5.47-7.527 10.73-16.06 20.917-22.271 32.363-7.865 14.493-13.534 30.16-20.752 45.028-3.29 6.774-8.024 12.846-12.428 19.34 2.11-5 4.503-10.121 6.99-15.196 3.734-7.617 7.556-15.19 11.303-22.8 4.5-9.14 8.438-18.608 13.58-27.37 5.906-10.062 12.737-19.596 19.445-29.163 2.034-2.9 4.995-5.15 7.884-7.672z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M774.065 123.295c-.602-2.729-1.278-5.108-1.83-7.515-.542-2.359-.956-4.746-.72-7.288 10.041 11.972 20.998 23.23 22.6 39.475l-2.008 1.243c-3.357-5.286-6.699-10.583-10.088-15.849-.55-.854-1.311-1.572-2.315-2.376-.34-.024-.528-.128-.645-.54-1.684-2.101-3.25-3.792-4.817-5.482-.066-.444-.132-.887-.177-1.668z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M541.168 1085.19c.19.094.379.188.848.799 1.615 1.88 2.95 3.243 4.287 4.607-19.944 3.78-39.906 3.3-59.905.41-6.212-.898-12.488-1.345-18.72-2.126-1.432-.18-2.799-.885-4.154-1.928 3.563-.19 7.143-.071 10.588.67 3.167.683 5.49.239 7.307-2.634 3.105.444 5.01 4.663 8.797 2.143 2.58 1.07 4.812 2.723 7.073 2.765 13.13.244 26.266.073 39.4.13 2.831.012 4.508-.885 4.422-4.183.074-.21.057-.654.057-.654z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M1149.544 507.067a357.003 357.003 0 0 1-2-8.166c-.068-.556-.343-.826-.343-.826-.099-.436-.197-.872-.282-1.885-.203-1.125-.42-1.674-.636-2.224-.034-.44-.067-.879-.088-2.001-.024-1.443-.06-2.202.204-2.95.902.045 1.502.077 2.102.11.144.406.287.812.218 1.634-.06.69.09.964.241 1.238.5 1.266 1 2.532 1.355 4.507.141 1.635.426 2.561.71 3.488.133.309.266.618.277 1.493.268 1.255.657 1.944 1.046 2.634.142.414.283.828.187 1.855.392 2.76 1.022 4.91 1.652 7.058.151.886.303 1.771.25 3.416.477 3.377 1.157 5.995 1.837 8.613.11.58.22 1.16.1 2.495.477 5.671 1.182 10.588 1.888 15.504.186.289.264.605.027 1.6.419 2.524 1.046 4.393 1.673 6.262 0 0 .095.024.006.33-.135.48-.18.655-.225.83-3.001-.378-6.003-.757-9.497-1.607-.598-.716-.704-.96-.81-1.206.168-2.141.336-4.283.795-7.04.617-2.21.943-3.806 1.27-5.401.11-.406.219-.811.688-1.713.141-2.032-.078-3.568-.297-5.103-.111-2.324-.223-4.648-.303-7.758-.53-2.946-1.09-5.105-1.65-7.265-.105-1.262-.21-2.525-.18-4.506.018-1.618-.098-2.517-.215-3.416zM725.949 1200.021c-3.348-.632-3.212-2.055-1.223-4.351.962-1.11 2.174-3.586 1.776-3.998-1.22-1.264-3.12-2.443-4.833-2.563-9.742-.685-14.335-4.078-16.966-13.736-1.733-6.36-7.318-5.99-11.566-6.116-6.714-.2-12.328-2.38-16.729-6.89-1.805-1.85-1.671-5.592-2.047-8.923 2.591-1.305 4.81-2.16 7.352-3.141.106 1.411.19 2.532-.104 3.672-1.762 1.527-3.146 3.035-4.53 4.543L685 1164c.432.05.865.1 1.701.54 2.025.786 3.645 1.182 5.265 1.578 1.062.01 2.124.021 3.683.434 4.448 3.384 11.808 1.162 12.894 8.52.111.739.222 1.478.11 2.793 1.873 6.386 6.55 8.59 12.19 9.113 7.715.716 9.687 1.962 10.289 7.144 0 0-.132-.117-.433-.071-1.784 2.02-3.267 3.996-4.75 5.97z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1029.913 665.696c-14.898-.063-29.432 3.112-43.799 6.702-8.29 2.072-16.316 5.425-24.22 8.769-8.523 3.605-16.765 7.874-25.502 11.868 3.378-2.575 6.856-5.754 10.933-7.634 9.538-4.396 19.249-8.484 29.114-12.081 6.399-2.334 13.154-3.756 19.822-5.266 6.493-1.47 13.036-2.974 19.64-3.623 4.565-.448 9.27.532 14.012 1.265z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M729.466 407.762c-.334-.018-.668-.036-1.615-.012l-2.846.203c-.912-.117-1.824-.234-3.253-.633-1.926-.652-3.335-1.023-4.744-1.394-3.613-.187-7.225-.375-11.066-.854 5.796-.023 11.873-.141 17.827.656 3.825.511 9.897-1.757 12.037-5.356 11.124 1.358 22.004 2.685 32.882 4.02 1.146.14 2.6-.058 3.374.566 4.46 3.594 9.375 4.4 14.919 3.482 1.155-.19 3.253 1.159 3.752 2.305.51 1.175.117 3.567-.804 4.378-2.167 1.907-4.884 3.189-7.747 4.643-.324-.448-.281-.815.07-1.507.583-.464.766-.68.858-.972 1.196-.556 2.391-1.113 4.062-2.109.847-1.564 1.22-2.689 1.592-3.813l-2.773-.393c-.447.061-.894.122-2.03.216a74.067 74.067 0 0 0-2.99.317c-1.048-.178-2.096-.357-3.698-.807a56.452 56.452 0 0 0-2.174-.927 128.064 128.064 0 0 0-4.969-3.167c-2.121-.367-3.629-.45-5.136-.532a91.06 91.06 0 0 1-4.747-.444c-1.181-.128-1.73-.114-2.28-.1-.72-.211-1.44-.421-2.81-.906-2.152-.398-3.653-.523-5.155-.647-.434-.051-.869-.102-1.947-.334-2.455-.12-4.267-.058-6.078.003-3.685-2.107-6.393.746-10.044 2.121-1.222.84-1.845 1.418-2.467 1.997z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"m681.988 1153.956-.275-3.653c-2.542.98-4.761 1.836-7.357 2.708-1.11.019-1.843.022-3.297.046-2.513 1.65-4.303 3.279-6.094 4.908-.777.327-1.555.653-3.005 1.04-3.104 2.035-5.537 4.01-7.97 5.985 0 0 .01.01-.368.011-3.642 1.435-7.047 2.62-10.126 4.376-2.692 1.535-5.018 3.714-7.505 5.608 0 0 .009.015-.327.04-1.445 1.01-2.555 1.992-3.99 2.972-.76.016-1.194.034-1.645.034l-.055-.058c2.33-2.436 4.291-5.456 7.057-7.203 9.642-6.09 19.301-12.26 29.474-17.365 6.204-3.113 13.34-4.398 20.097-6.366 3.116-.908 6.328-1.486 9.904-2.196-.56 1.487-1.529 2.957-2.825 4.832-1.153 1.53-1.977 2.657-2.802 3.783-1.638.197-3.276.394-5.722.573l-3.17-.075z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M637.008 382.98c-13.773-8.588-27.546-17.176-41.633-26.199-.235-.632-.155-.83-.076-1.028 9.552 5.473 19.102 10.948 28.655 16.417 11.834 6.774 23.434 14.01 35.596 20.13 6.983 3.515 14.878 5.215 22.565 8.033-1.592.404-3.387.507-5.885.359a47.206 47.206 0 0 0-4.225-.735c-1.101-.341-2.202-.682-3.853-1.26-1.413-.424-2.276-.612-3.138-.8-1.288-.71-2.576-1.422-4.379-2.447-1.88-.749-3.246-1.184-4.612-1.62 0 0-.258-.13-.552-.376-1.014-.664-1.733-1.083-2.452-1.502-4.425-2.658-8.85-5.317-13.818-8.212a38.34 38.34 0 0 0-2.193-.76z\"\n        />\n        <path\n            fill=\"#8D312E\"\n            d=\"M481.1 1084.833c-1.498 3.028-3.821 3.472-6.988 2.79-3.445-.742-7.025-.86-10.814-.973-1.018.278-1.769.28-2.888.216-5.374-1.663-10.366-3.298-15.39-4.827-1.06-.323-2.237-.26-3.525-.39 3.207-3.714 28.503-3.558 39.1.53.423 1.225.464 1.94.505 2.654z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M722.96 206.914c2.07 1.015 4.141 2.03 6.555 3.059-.403 5.932-1.05 11.865-1.997 17.75-.152.947-1.674 2.386-2.498 2.343-1.225-.064-2.69-1.011-3.488-2.026-.608-.774-.663-2.315-.407-3.381 1.472-6.116-1.098-10.581-5.809-14.967-1.341-.832-2.42-1.06-3.498-1.288 0 0-.403-.24-.478-.662 1.476-.566 3.026-.79 4.58-.832 2.345-.065 4.693-.003 7.04.004z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M742.286 212.02c1.562 1.487 3.084 3.017 4.691 4.452 4.942 4.412 11.91 7.126 11.652 15.867l1.44-.564c1.29-4.004 2.807-7.95 3.819-12.023 1.538-6.189 3.664-6.957 9.44-3.936 5.604 2.931 11.537 5.231 18.35 8.264-.686-2.771-1.053-4.259-1.038-6.033.833-.081 1.284.126 1.734.332l1.958 7.228c-2.196-.229-4.109-.002-5.637-.663-5.423-2.346-10.738-4.95-16.051-7.541-4.761-2.323-6.22-1.542-7.363 3.598a79.592 79.592 0 0 1-3.252 10.855c-.408 1.078-2.012 1.704-3.069 2.537-.896-1.166-1.92-2.256-2.661-3.513-1.515-2.57-2.354-5.777-4.407-7.747-4.965-4.764-10.466-8.968-15.927-13.682.724-.51 1.624-.737 2.84-.516 1.37 1.327 2.426 2.206 3.481 3.086z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M762.112 593.049c.71-.411 1.422-.822 2.44-1.19-6.749 15.734-13.399 31.624-21.021 47.034-4.122 8.333-9.77 15.938-15.04 23.66-1.208 1.771-3.696 2.67-5.595 3.97l-1.13-.99c.35-1.351.701-2.702 1.539-4.11 3.055 3.185 3.515-.342 4.75-1.385 2.957-4.143 6.082-8.18 8.81-12.468 1.73-2.72 2.87-5.816 4.531-9.296a59.62 59.62 0 0 0 .876-2.147c3.585-8.438 7.17-16.876 11.047-25.875.456-1.11.62-1.658.786-2.207 1.977-4.007 3.955-8.014 6.285-12.5.81-1.153 1.266-1.824 1.722-2.496z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M213.638 843.808c1.649.032 3.175.49 5.001 1.07.147 8.038.086 15.96-.215 23.873-.097 2.573-.82 5.123-1.803 7.574-.545-4.015-.545-7.92-.545-11.826l-1.72.005-.996 16.282 3.108-.913-.394 4.516-1.928.546c-.95-2.08-2.784-4.194-2.706-6.235.438-11.498 1.335-22.98 2.198-34.892z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M1080.217 507.745c.79-1.197 1.974-2.344 3.842-3.552 1.774-.425 2.865-.789 3.957-1.152 7.545-2.134 12.827 2.683 18.588 6.042 1.144.667 2.329 1.264 4.007 2.22 1.308.634 2.105.94 2.901 1.245l.035-1.6c-.033-1.037-.066-2.074.076-3.784-1.042-4.857-2.259-9.04-3.475-13.223a58.178 58.178 0 0 0-.067-1.97c.145-1.647.333-2.626.617-4.109 1 1.076 1.535 1.652 2.12 2.517.358.766.665 1.244.993 2.086.365 1.755.71 3.145 1.064 4.968 1.85 7.074 3.574 13.752 5.656 20.317.336 1.062 2.264 1.62 3.392 2.612-.11.826-.157 1.451-.18 2.315.023.239.335.603.335.603-5.383-3.787-10.71-7.655-16.168-11.33-3.4-2.29-6.77-5.283-10.565-6.143-4.104-.931-8.696.161-13.056.571-1.259.119-2.453.926-4.072 1.367z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M1134.44 513.056c.21 3.067.42 6.134.341 9.72a16.9 16.9 0 0 0-.763 2.226c-.33 1.096-.66 2.192-.98 3.934a23.776 23.776 0 0 1-.117 1.957c-2.939-2.323-5.878-4.646-8.83-7.291-.013-.322-.325-.686.03-.76.892-.7 2.005-1.5 1.876-1.921-.924-3.02-2.1-5.961-3.232-9.292-.173-1.328-.309-2.29-.302-3.613.416-1.822.69-3.284.964-4.746 1.179.86 2.357 1.72 3.745 3.14 1.26 2.004 2.31 3.449 3.362 4.893.44-1.44.88-2.878 1.685-4.36.593-.125.823-.208 1.052-.29.074.183.148.365.077 1.03-.007.8.129 1.116.265 1.433 0 0 .173.061.078.331.186 1.384.467 2.496.748 3.61z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M827.819 962.042c-.831-.693-1.808-1.708-2.155-2.907-4.371-15.067-7.72-30.413-5.888-46.124 1.294-11.1 3.16-22.327 9.52-32.367-.158 1.458-.681 3.071-1.066 4.717-1.471 6.29-3.459 12.524-4.21 18.902-1.126 9.575-2.36 19.321-1.709 28.869.609 8.927 3.618 17.69 5.546 26.53.139.635.077 1.314-.038 2.38z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1201.557 677.612c1.148-3.31 2.251-6.273 3.527-9.7.608 1.071 1.053 1.855 1.766 2.863.227.668.186 1.112.124 2.342-.015 3.602.006 6.418-.003 9.233-.02 6.57-.054 13.14-.083 19.71-.139 3.498-.278 6.995-.646 11.135-.428 3.351-.626 6.058-.824 8.766-.532 3.046-1.047 6.096-1.6 9.139-1.117 6.149-2.256 12.294-3.698 18.663.175-5.112.635-10.45 1.155-15.781.915-9.385 2.036-18.753 2.75-28.152.576-7.6.792-15.235.885-22.858.015-1.24-1.444-2.497-2.584-3.76-.514-.427-.664-.84-.77-1.6z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M546.695 1090.682a30.788 30.788 0 0 1-4.423-4.506c13.399 5.1 25.702-.467 37.83-4.811 14.862-5.323 29.339-11.723 44.352-17.581-4.939 3.283-9.947 7.228-15.622 9.533-9.857 4.004-20.09 7.103-30.233 10.37-6.694 2.156-13.457 4.153-20.289 5.808-3.63.88-7.475.878-11.615 1.187z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M469.77 782.882c-3.222 2.118-6.443 4.236-10.007 6.348 3.294-3.23 6.866-6.53 10.582-9.66 8.834-7.444 17.114-15.784 26.78-21.939 10.35-6.59 18.313-15.558 27.81-23.182-4.57 5.863-8.92 12.234-14.518 17.2-5.465 4.85-12.42 7.973-18.323 12.386-6.49 4.85-12.528 10.306-19.195 15.895a712.36 712.36 0 0 0-3.129 2.952z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M991.902 684.816c-1.198-.846-2.34-2.046-3.482-3.246 1.219-1.015 2.318-2.69 3.676-2.938 8.597-1.566 17.31-2.525 25.87-4.255 8.325-1.683 16.448-.236 24.54.918 7.276 1.038 14.401 3.136 21.749 5.095-8.565-1.155-17.267-2.761-26.016-4.058-3.432-.509-6.97-.289-10.456-.461-11.902-.589-23.445 1.859-35.013 4.105-4.124.8-1.743 2.773-.868 4.84z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M263.338 289.008c.473 4.027.451 8.161.696 12.279.614 10.326 1.145 20.665 2.206 30.948.21 2.038 2.642 3.848 4.449 5.775 1.854 3.013 3.662 5.905 4.624 9.056.52 1.698.234 4.956-.811 5.557-2.62 1.506-4.173-.645-4.823-3.178-1.888-7.353-4.51-14.621-5.418-22.096-1.35-11.097-1.517-22.34-2.073-33.526-.077-1.556.501-3.143 1.15-4.815z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1080.336 1021.13c1.814-1.384 4.274-1.998 5.49-3.572 5.988-7.752 11.647-15.758 17.754-23.772-2.197 4.594-4.726 9.286-7.43 14.303l3.522 1.602c-.89 3.625-2.881 5.594-6.882 6.142-1.907.262-4.382 1.862-5.094 3.507-.509 1.176 1.044 4.03 2.46 5.085 2.599 1.935 5.776 3.095 9.085 4.766-.06.963-.494 1.74-1.561 2.675-1.998-.473-3.363-1.104-4.727-1.735a91.453 91.453 0 0 1-2.482-1.602 66.888 66.888 0 0 0-2.455-1.522c-2.535-1.849-5.071-3.698-7.68-5.876z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1132.91 700.777c-4.945-3.17-10.424-6.14-14.665-10.355-4.742-4.713-10.59-6.566-16.419-8.627-7.766-2.745-15.7-5.019-23.585-7.421-4.077-1.242-8.202-2.325-12.493-3.769 7.307 1.126 14.997 1.904 22.247 4.118 9.235 2.819 18.615 5.9 26.99 10.564 6.71 3.735 12.011 9.999 17.925 15.49z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"m618.995 162.997 6.03 6.96c.884-.77 1.845-1.386 2.52-2.23 3.759-4.698 5.81-5.11 10.451-1.134 3.872 3.317 7.35 7.094 10.7 10.893-4.76-2.683-9.216-5.591-13.673-8.5 0 0-.023.014-.058-.328-1.228-1.575-2.297-3.938-3.973-.775-.335.807-.669 1.614-1.417 2.83-1.798 4.2-3.07 8.038-4.64 11.75-.42.993-1.75 1.6-2.66 2.385-.754-.95-1.794-1.796-2.179-2.876-.365-1.025-.453-2.522.045-3.417 3.054-5.495 1.196-10.522-1.146-15.558z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M521.005 321.948c-.797-.293-1.595-.586-2.988-1.178-3.738-.434-6.88-.57-10.022-.706-1.105-.252-2.21-.504-4.06-.809-2.48-.03-4.214-.007-5.95.016l-15.883-.088a38.23 38.23 0 0 0-3.129.298 57.369 57.369 0 0 0-4.008.278c-1.43.477-2.214.817-2.998 1.157-2.669.44-5.337.881-8.405 1.262.921-1.087 2.111-2.73 3.583-3.042 14.08-2.981 28.247-3.762 42.488-1.027 6.37 1.223 12.758 2.355 19.234 3.9-.36.544-.818.714-1.826.616-2.38-.404-4.208-.54-6.036-.677z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M439.832 807.25c-.31 1.355-.96 2.675-2.05 4.457-1.245 1.729-2.05 2.995-2.855 4.262-7.45 8.02-10.905 18.028-14.272 28.773-.391 1.133-.539 1.693-.686 2.253-1.59 4.222-3.185 8.441-4.765 12.666-.626 1.674-1.218 3.361-2.151 5.206.325-4.012.224-8.49 1.76-12.309 5.547-13.795 10.068-28.155 19.636-39.981 1.539-1.902 3.355-3.58 5.383-5.327z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M761.706 891.045c-4.038 7.124-8.152 14.437-12.885 21.324-8.503 12.374-17.378 24.492-26.443 36.706 1.783-3.487 3.78-7.05 6.06-10.422 10.453-15.472 20.98-30.893 31.504-46.318.35-.513.934-.865 1.764-1.29z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M535.002 323.98c-.576-.195-1.152-.389-1.87-.85 5.55-2.462 9.59 1.958 14.091 3.73 9.704 3.82 18.887 8.7 27.256 15.238 6.184 4.83 13.425 8.307 19.872 12.782-.992.286-1.66.176-2.33.066-.468-.32-.936-.64-1.86-1.263-1.025-.41-1.596-.52-2.166-.63a147.128 147.128 0 0 1-4.706-3.281c-1.383-.898-2.314-1.39-3.244-1.881-3.811-2.834-7.57-5.74-11.46-8.463-1.461-1.024-3.222-1.622-5.403-2.7-1.773-.699-2.99-1.11-4.208-1.52-2.076-1.417-4.153-2.834-6.746-4.53a17.16 17.16 0 0 0-2.123-.734c-1.113-.345-2.226-.69-3.876-1.29-1.097-.416-1.657-.578-2.217-.74a2078.507 2078.507 0 0 0-6.77-3.306c-1.109-.38-1.674-.504-2.24-.629z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M597.026 145.014c1.405-.665 2.811-1.33 4.623-1.64 2.341 3.092 4.321 5.801 6.194 8.583.839 1.246 1.462 2.637 2.183 3.962l-10.896-9.542c-1.153 2.491-2.567 5.588-4.019 8.666-1.044 2.215-1.888 4.59-3.31 6.536-.785 1.077-2.577 1.418-3.915 2.091-.638-1.396-1.763-2.776-1.813-4.194-.105-2.953.528-5.926.543-8.892.016-3.257-.32-6.516-.206-10.152 1.715.622 3.131 1.622 4.547 2.622-.001 1.356-.002 2.713-.375 4.572-1.01 2.615-1.823 4.696-2.203 6.854-.162.92.585 1.998.918 3.005.978-.408 2.492-.553 2.844-1.268 1.793-3.654 3.286-7.454 4.885-11.203z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M434.28 911.451c-.118-.52.06-.843.77-1.322a15.795 15.795 0 0 0 1.992-1.014c5.358-1.381 10.715-2.763 16.623-3.834 1.099 1.13 1.647 1.952 2.195 2.773-.008 1.037-.015 2.073-.325 3.706-.742 2.384-1.182 4.17-1.93 7.21 2.426-1.265 3.328-1.61 4.084-2.157 1.182-.854 2.265-1.843 3.39-2.774 4.027-2.728 8.053-5.456 12.432-8.159-4.781 4.19-9.831 8.466-15.095 12.46-1.918 1.457-4.345 2.244-6.54 3.337l-1.088-1.094c.58-2.482 1.331-4.94 1.686-7.455.275-1.946.055-3.963.054-5.948-2.003.192-4.082.11-5.993.635-4.034 1.109-7.98 2.537-12.256 3.636z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M203.943 988.37c1.365.92 2.684 2.197 4.29 3.56.828 1.418 1.37 2.749 1.89 4.795.631 1.225 1.286 1.734 1.94 2.243.336.107.583.317.666 1.21-1.332 6.247-.335 7.552 5.388 7.727 0 0-.096.092-.065.4 1.322 2.987 2.612 5.667 3.903 8.348-1.797.105-3.594.21-5.827.178-.986-1.748-1.535-3.36-2.4-5.072-.314-.1-.523-.453-.625-.911-.604-1.065-1.106-1.671-1.607-2.278a870.58 870.58 0 0 0-1.328-2.345c-2.61-5.245-5.068-10.23-7.581-15.571.4-.882.854-1.405 1.356-2.284z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1129.021 707.294c5.361 4.58 10.701 9.509 16.705 15.05-.757-9.412-7.938-14.289-12.757-20.907.716-.279 1.971-.554 2.27-.14 4.478 6.207 11.185 11.006 12.546 19.17.224 1.347-.732 2.89-1.143 4.343-1.604-.564-3.725-.662-4.724-1.771-4.48-4.975-8.641-10.237-12.897-15.745zM889.919 817.795c1.358-1.328 2.99-2.716 4.84-3.693 14.789-7.81 29.62-15.543 44.81-23.265-2.037 1.999-4.225 4.37-6.909 5.836-4.545 2.484-9.481 4.24-14.111 6.582-9.47 4.792-18.843 9.77-28.63 14.54z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M618.988 162.757c2.35 5.276 4.207 10.303 1.153 15.798-.498.895-.41 2.392-.045 3.417.385 1.08 1.425 1.927 2.178 2.876.912-.785 2.241-1.392 2.66-2.385 1.57-3.712 2.843-7.55 4.575-11.42-.646 3.895-1.333 7.983-2.754 11.797-.801 2.15-2.814 3.847-4.28 5.749-1.777-2.176-4.064-4.13-5.136-6.61-.634-1.469.367-3.889 1.128-5.67 2.253-5.276.766-9.545-2.99-13.437a15.868 15.868 0 0 1-3.067-4.532c2.414 1.002 4.488 2.35 6.563 3.698 0 0 .009.48.015.719z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1198.285 697.696c-1.889 8.017-3.214 16.224-5.827 23.997-2.568 7.641-6.444 14.843-10.085 22.29 2.208-6.825 4.95-13.639 7.234-20.603 1.502-4.576 2.236-9.398 3.517-14.055 1.016-3.691 2.341-7.298 4.091-11.22.732-.322.901-.365 1.07-.409z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M965.05 489.131c1.698-.132 3.396-.264 5.843-.406 2.206-.574 3.662-1.136 5.117-1.698 4.655.983 9.31 1.967 14.452 3.36.788 1.715 1.089 3.019 1.39 4.323-.937.518-1.874 1.037-3.135 1.532 0-1.263.325-2.503.64-3.701-9.95-5.802-19.73-1.477-29.473.184-3.2.546-6.258 1.93-9.746 2.755-.524-.481-.484-.756.114-1.235.829-.553 1.298-.873 1.767-1.192a586.63 586.63 0 0 0 8.225-2.544c2.039-.623 3.423-1 4.807-1.378z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M826.083 1174.496c-6.274-3.773-13.13-7.268-18.786-12.153-6.657-5.75-14.172-8.134-22.484-9.447-2.027-.32-3.837-2.013-5.794-3.43 5.642.94 11.863 1.197 16.899 3.77 7.814 3.995 14.871 9.496 22.147 14.507 2.8 1.929 5.32 4.265 8.018 6.753z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M692.856 673.983c2.745-5.622 5.49-11.244 8.6-17.333a119.89 119.89 0 0 1 3.595-3.61s-.05-.04.258-.155c.796-1.027 1.285-1.939 1.774-2.85a5.727 5.727 0 0 1 1.383-.255c-.456 1.665-.789 3.721-1.995 4.793-8.603 7.646-11.117 18.07-13.64 28.58-.92 3.83-2.376 7.532-3.83 11.56.51-3.784 1.264-7.836 2.304-12.54.357-1.832.428-3.011.499-4.19.093-.429.186-.857.518-1.8.337-1.077.436-1.638.534-2.2z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1165.697 768.047c-.447 1.398-.966 3.088-2.077 4.175-10.939 10.698-21.975 21.296-33.25 31.775 2.771-2.978 5.93-5.688 8.819-8.662 8.776-9.037 17.448-18.176 26.508-27.288z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M700.918 192.544c-3.958.787-8.027 1.032-12.029 1.683-1.363.222-2.56 1.467-4.056 2.57-5.175-2.753-10.126-5.83-15.791-8.863-1.154.043-1.593.043-2.033.042 2.979-4.82 4.968-5.126 9.395-2.156 4.051 2.719 6.985 7.79 13.15 6.401 2.857-.643 5.815-.908 8.744-1.12.815-.059 1.69.684 2.62 1.443z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M625.238 1063.9c1.812-1.697 3.83-3.64 6.225-4.82 1.305-.643 3.248.005 4.903.07-.613 1.687-.732 3.98-1.926 4.955-4.886 3.99-10.06 7.637-15.208 11.297-3.368 2.393-6.875 4.591-10.68 6.812 2.565-2.538 5.392-5.14 8.438-7.455 5.117-3.888 10.374-7.592 16.026-11.874.617-1.02.782-1.54.946-2.06l-2.427.637c-1.978.837-3.956 1.673-6.297 2.437z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M782.836 200.682c-2.24-2.908-4.586-6.092-6.605-9.47-3.29-5.506-6.181-11.254-9.586-16.684-2.953-4.709-6.384-9.117-9.645-13.985 2.521 1.855 5.414 3.757 7.553 6.294 2.172 2.577 3.679 5.737 5.337 8.72a1235.231 1235.231 0 0 1 10.075 18.515c1.08 2.024 1.946 4.162 2.87 6.61z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M795.01 342.543c3.188-.396 6.516-.641 9.81-.403 8.9.645 15.308 10.786 14.071 21.75-.27 2.397.086 4.865.143 7.695-4.355-.536-3.176-4.116-2.575-6.426 2.423-9.315-3.18-14.964-8.934-20.468-1.043-.997-3.44-.576-5.212-.812-2.393-.32-4.786-.643-7.303-1.336z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M833.182 375.888c2.601-2.249 4.021-.821 3.816 2.162-.122 1.786-1.299 3.592-2.295 5.208-2.911 4.726-6.215 9.225-8.904 14.069-2.905 5.233-7.381 7.744-13.32 8.854.019-.692.34-1.816.84-1.902 7.238-1.253 9.54-7.253 12.643-12.647 2.173-3.779 5.053-7.15 7.246-10.92.715-1.23.257-3.142-.026-4.824z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M755.69 1140.739c-5.74.584-11.787.982-17.841 1.187-8.685.294-17.373.477-26.062.612-.838.014-1.687-.642-2.681-1.313 7.048-.931 14.243-1.984 21.443-2.024 8.275-.046 16.554.804 25.142 1.538z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M691.812 988.208c-4.131 5.796-8.31 11.85-13.148 17.324-4.884 5.527-10.422 10.476-16.02 15.673 4.239-5.044 8.882-10.03 13.39-15.135 5.209-5.898 10.3-11.9 15.778-17.862z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M735.75 116.69c-.843-.14-2.272-.637-2.303-1.21-.387-7.197-6.532-10.903-10.059-16.432-.343-.502-.35-.942-.116-1.917-.752-5.085-2.888-8.708-7.62-10.226-.644-1.276-1.288-2.551-1.977-4.14 6.497 1.49 8.97 7.286 12.153 12.3 2.096 3.302 3.968 6.776 5.626 10.32 1.657 3.543 2.924 7.27 4.297 11.306z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M743.995 1219.995c-5.12-1.554-5.167-2.78.054-10.513-3.936-1.675-7.758-3.302-11.62-5.452 1.48-.633 2.999-.743 4.518-.854.444.031.888.062 1.77.478 4.054 1.387 7.672 2.389 11.29 3.391.43-.004.862-.009 1.625.427-.575 1.469-1.297 3.057-2.42 3.428-4.885 1.61-6.465 4.118-5.217 9.095z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M713.14 1114.626c2.855-1.462 6.039-3.67 9.366-3.914 9.77-.717 19.599-.655 29.574-.551-.799.484-1.773.773-2.733.735-12.133-.486-24.04 1.072-36.206 3.73z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M712.059 645.134c3.064-1.397 6.13-2.794 9.894-4.196a31.436 31.436 0 0 0 2.067-.139c6.154 1.825 6.567 2.57 4.045 8.162a26.797 26.797 0 0 0-.145 2.023c-.722 1.958-1.444 3.915-2.457 6.338-.86.583-1.432.7-2.003.818l3.75-13.72c-6.447-3.177-10.753 1.18-16.039 3.308-.49-.052-.76-.324-.586-.546.606-.83 1.04-1.439 1.474-2.048z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M137.861 540.274c.862.155 1.564.64 2.423 1.43-1.804 5.927-3.795 11.538-5.706 17.176-.509 1.501-.77 3.087-1.439 4.867-.607-.553-.92-1.34-1.199-2.457.117-.778.2-1.224.552-2.056.316-.488.426-.623.394-.687-.09-.182-.24-.335-.365-.5-.725-6.542 2.846-11.81 5.34-17.773z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M842.24 862.952c3.655-4.843 7.502-9.784 11.715-14.39 4.588-5.015 9.515-9.72 14.627-14.612-1.469 2.579-2.966 5.497-5.13 7.786-6.818 7.216-13.886 14.195-21.212 21.216z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M458.969 324.92c-2.119.923-4.237 1.847-7.092 2.89-2.745.048-4.753-.023-6.76-.094-.149-1.366-.296-2.732.06-4.364a84.022 84.022 0 0 1 2.856-1.265 48.222 48.222 0 0 0 2.741-2.574c.677-1.119 1.015-1.788 1.353-2.458.9-1.099 1.8-2.198 3.112-3.724 1.354-1.231 2.297-2.034 3.394-2.688l.46.448-11.718 15.446c2.552-.591 5.214-1.085 7.797-1.844 2.165-.637 4.239-1.583 6.724-2.243.56.46.509.722-.218 1.14-1.194.578-1.952.954-2.71 1.33z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M722.887 206.533c-2.274.374-4.622.312-6.967.377a19.285 19.285 0 0 0-4.798.745c-2.355-1.883-4.567-4.1-6.96-6.623 2.578-1.555 5.336-2.807 8.453-4.008-2.213 6.09-1.037 7.752 5.778 8.043 1.487.063 2.948.708 4.494 1.466z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M289.47 503.74c.048-.664.096-1.327.34-2.698.256-2.042.315-3.378.374-4.713 1.19-2.885 2.379-5.77 3.926-9.162 1.479-.667 2.6-.828 3.722-.613-1.646 5.997-3.291 11.616-4.937 17.235-.121.321-.243.642-.913 1.056-1.204-.306-1.858-.706-2.512-1.106z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M752.762 155.74c-6.755-3.81-12.743-8.365-13.22-17.344-.211-3.965-1.446-7.876-1.966-12.076 1.592 3.76 3.53 7.7 4.124 11.832.7 4.86 2.045 8.79 6.293 11.69 1.954 1.335 3.224 3.671 4.77 5.898z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M293.225 503.731c1.316-5.561 2.961-11.18 4.855-17.22.415-.408.582-.396.75-.384.566.784 1.042 1.659 1.714 2.338 2.921 2.947 2.787 5.492-.45 8.253-2.406 2.052-4.376 4.618-6.87 7.013zM682.5 1125.134c-1.124-.65-1.835-1.294-2.617-2.215 4.71-1.197 9.571-1.823 14.25-3.112 5.565-1.532 10.974-3.633 16.649-5.226-1.396 1.178-2.894 2.38-4.603 2.96-7.722 2.63-15.505 5.083-23.679 7.593z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1063.86 669.873c-7.045-.537-14.27-1.415-21.491-2.313-2.57-.32-5.133-.685-8.05-1.185 1.163-.744 2.709-1.888 4.19-1.81 3.381.18 6.757.834 10.088 1.523a201.502 201.502 0 0 1 15.262 3.785zM843.904 991.802c-2.713-3.093-5.87-6.28-7.917-10.065-3.12-5.767-5.472-11.948-8.114-18.326 2.669 3.677 5.528 7.6 7.878 11.807 2.953 5.285 5.49 10.804 8.153 16.584z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M710.917 963.02c.534.233.904.601.863.655-6.278 8.183-12.585 16.345-19.236 24.488a554.437 554.437 0 0 1 18.373-25.143z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M412.895 885.04c.474 1.728.949 3.456 1.313 5.88-.767 2.69-1.423 4.684-2.08 6.678l-3.76-.74c3.523-3.972 3.896-7.325 2.6-12.282-1.406-5.383.574-11.65 1.362-17.751.396 1.268.506 2.755.373 4.924a24.636 24.636 0 0 0-.469 3.273c-.11 1.709-.221 3.418-.347 5.919.325 1.895.666 2.997 1.008 4.1z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1076.211 683.157c5.637 1.117 11.592 2.252 17.356 4.013 4.21 1.287 8.17 3.397 12.373 5.455-4.83-1.067-9.839-2.3-14.74-3.87-4.973-1.596-9.84-3.527-14.989-5.598zM903.026 711.154c-4.344 3.454-9.05 6.797-13.782 10.103-3.794 2.651-7.618 5.258-11.78 7.882.229-1.112.52-2.669 1.435-3.257a594.19 594.19 0 0 1 24.127-14.728z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M421.388 1074.427c.89 1.573 1.393 3.111 1.76 4.931-1.445.224-2.754.166-4.59-.24a14.607 14.607 0 0 0-2.65-.844c-.97-.236-1.94-.472-3.43-1.048-1.43-1.837-2.337-3.335-3.244-4.833 1.245.043 2.49.085 4.285.447 1.839.59 3.129.86 4.419 1.131 1.021.14 2.043.282 3.45.456z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M935.09 693.219c-8.839 5.408-18.077 10.667-27.687 15.89 4.318-3.314 8.83-6.9 13.753-9.782 4.27-2.5 9.006-4.203 13.935-6.108z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M506.317 122.013c2.849-1.018 5.573-1.669 8.629-2.421.486.361.796.833.77 1.286-.165 2.884 1.687 7.035-2.736 7.752-3.999.649-6.004-2.53-6.663-6.617z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M731.46 1194.054c-.93-5.114-2.902-6.36-10.618-7.076-5.64-.523-10.316-2.727-12.185-8.739 5.391 2.42 10.51 5.133 15.736 7.616 2.054.976 4.474 1.188 6.509 2.191 2.863 1.413 4.073 3.445.557 6.008z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1092.965 1030.482c1.352.28 2.717.91 4.41 1.522.506.543.683 1.106.955 1.951 2.186 2.35 4.277 4.417 6.434 6.81-4.568 2.868-10.003-.274-10.419-5.594-.115-1.473-.894-2.893-1.38-4.689z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1133.775 547.017c.198.344.395.688.55 1.326-2.597-.937-5.294-1.955-7.637-3.508-.91-.604-1.618-2.59-1.316-3.626.27-.927 1.997-1.848 3.181-2.003 2.369-.31 4.806-.092 7.73-.092-.587-1.778-.975-2.954-1.115-4.611.44-.5.63-.52.821-.54.441.775.882 1.55 1.403 2.891.25 1.097.42 1.627.59 2.158-.002.429-.004.857.024 1.896.016 1.805.002 3.001-.012 4.198 0 0-.443-.129-.814-.486-2.84-4.193-5.704-4.78-10.832-1.797l7.427 4.194z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M378.942 542.77c-4.671 2.79-8.005.725-8.6-5.006 5.334-1.181 7.195-.167 8.6 5.006z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M723.293 1149.652c.78-1.154 1.916-3.104 3.116-3.145 7.302-.25 14.62-.12 21.927.08.551.015 1.062 1.543 1.666 2.673-4.905-.257-9.883-1.214-14.868-1.25-3.814-.028-7.637 1.108-11.841 1.642z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M986.319 751.978c3.345-8.677 7.054-17.357 11.04-26.252-.25 2.903-.162 6.302-1.435 9.077-2.706 5.896-6.119 11.467-9.605 17.175z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1181.681 744.011c-4.65 7.725-9.654 15.429-14.98 23.23 3.281-8.57 6.986-17.169 14.98-23.23z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M831.83 1190.486c1.527.38 3.105 1.429 4.798 1.67 1.035.147 2.247-.946 3.411-1.86 1.987 1.764 3.941 3.905 5.594 6.38-1.19.112-2.08-.11-3.406-.44l.896 3.606c-3.731-3.01-7.463-6.019-11.294-9.356z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M618.95 161.681c-2.052-.991-4.126-2.339-6.565-3.687-.954-.508-1.543-1.016-2.246-1.799-.834-1.601-1.457-2.992-2.296-4.238-1.873-2.782-3.853-5.49-5.83-8.582 4.244 3.751 8.63 7.757 12.768 12.005 1.664 1.708 2.781 3.947 4.17 6.301z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M943.856 788.735c7.215-5.353 14.817-10.548 22.769-15.77-3.937 6.798-11.219 9.823-17.576 13.997-1.415.93-3.195 1.303-5.193 1.773zM968.672 772.11c1.394-2.126 3.076-4.294 4.875-6.36a458.517 458.517 0 0 1 11.82-13.089c-1.404 2.915-2.702 6.316-4.968 8.85-3.443 3.85-7.557 7.1-11.727 10.6z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M777.862 1114.517c.268.606.125 1.056-.054 1.74-2.673-.398-5.3-1.087-7.952-1.651-5.172-1.101-10.359-2.132-15.683-3.545 5.757.413 11.665 1.13 17.556 1.973 1.93.276 3.815.876 6.133 1.483z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M765.23 591.818c2.134-5.754 6.065-9.96 12.262-11.801 1.072-.32 2.045-.974 3.685-1.755 1.692-.31 2.763-.34 3.833-.368.334.952.668 1.905.782 3.19-5.585-2.601-9.377 1.418-13.249 3.722-2.74 1.63-4.682 4.605-7.314 7.012z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M691.275 1153.565c.429-1.233 1.253-2.36 2.398-3.523 3.996-.103 7.673-.136 11.348-.242 4.442-.128 8.882-.318 13.63-.219-4.86.944-10.03 1.597-15.192 2.316-3.935.548-7.859 1.18-12.184 1.668z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M423.232 898.052c3.067.92 6.334 2.142 9.775 4.025.243 1.426.312 2.19.382 2.954-.468 1.875-.936 3.751-1.353 6.057-.934.681-1.918.932-2.903 1.182-.079-.918-.47-1.955-.176-2.732.808-2.13 1.905-4.15 3.238-6.95-3.119-1.507-5.94-2.871-8.963-4.536zM906.883 1279.827c1.766.403 3.22.982 4.674 1.561-.83 1.631-1.36 3.588-2.622 4.754-.623.576-2.595-.306-3.958-.528.532-1.87 1.063-3.74 1.906-5.787z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M654.041 189.403c.442-.434.87-.428 1.623.04.332 3.165.34 5.869.12 8.739.253.719.736 1.27 1.217 1.82a3.52 3.52 0 0 0 .03.33c2.597 5.449 4.01-.43 6.053-.294-1.462 1.603-2.97 4.568-4.375 4.52-2.802-.095-5.862-1.667-5.68-5.478.147-3.088.652-6.159 1.012-9.677zM752.292 1150.135c7.13-2.366 13.377 1.356 19.853 3.689 1.737.625 3.186 2.053 4.856 3.423-8.1-2.058-16.289-4.426-24.709-7.112z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M444.557 188.996c-1.89-.318-3.454-.695-5.427-1.135 2.203-3.908 5.566-6.427 10.15-6.798l1.183 1.242c-1.86 2.21-3.722 4.42-5.906 6.69z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M744.26 1220.119c-1.513-5.101.067-7.608 4.952-9.22 1.123-.37 1.845-1.958 2.739-3.372.879.34 1.77 1.067 2.662 1.793-1.318 1.298-2.41 3.137-3.995 3.797-5.66 2.36-5.915 2.769-3.02 8.528-.72.364-1.155.354-1.591.345-.494-.583-.989-1.165-1.747-1.871z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M622.018 1187.018c-.99 1.433-1.98 2.867-3.344 4.667-1.454.703-2.534 1.04-3.613 1.376 0 0-.013-.012-.003 0 2.817-6.826 7.687-11.724 14.558-15.083.358-.005.395.033.358.387-1.682 2.116-3.326 3.878-4.971 5.64 0 0-.003-.005-.344.027-1.108 1.017-1.874 2.001-2.641 2.986z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M892.033 1034.558c-4.488-2.894-8.999-6.108-13.448-9.406-1.305-.967-2.435-2.169-3.736-3.586 4.439-1.736 5.173 3.167 7.963 4.727 3.466 1.937 6.183 5.214 9.221 8.265zM830.16 878.964a229.336 229.336 0 0 1 11.4-16.122c-3.446 5.381-7.244 10.72-11.4 16.122zM874.809 1020.895c-5.385-3.779-10.72-7.906-16.067-12.381 6.692 2.049 11.896 6.401 16.067 12.38z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M279.319 1115.097c6.927 3.319 13.85 6.984 20.936 10.937-1.641-.17-3.646-.266-5.21-1.146-5.328-3-10.499-6.275-15.726-9.791zM843.368 1200.075c-.507-1.287-.769-2.342-1.14-3.84 1.324.33 2.214.553 3.439.789.605.205.94.347 1.137.596 1.35 1.708 2.722 3.404 3.917 5.217.113.171-1.324 1.679-1.41 1.62-1.953-1.303-3.818-2.738-5.943-4.382zM300.864 1166.253a206.64 206.64 0 0 1-14.532 3.577c-2.232.466-4.542.564-7.076.59 6.882-1.598 14.024-2.957 21.608-4.167z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M871.31 831.988c4.427-3.982 9.222-7.93 14.36-11.915-1.923 2.453-3.979 5.19-6.524 7.354-2.201 1.87-4.958 3.087-7.837 4.56z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1078.05 1018.967c.544.24.608.436.454.788.277 1.51.657 2.899 1.037 4.288-5.614 1.632-7.931-.45-6.645-6.324 1.583.152 3.185.66 5.155 1.248z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M777.233 1148.43c-4.764-1.266-9.676-2.812-14.552-4.464-1.577-.535-3.06-1.349-4.657-2.4 6.608 1.116 14.2.063 19.21 6.863z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M761.196 95.154c-.736-1.546-1.257-2.873-2.234-5.36 2.727.567 5.158.519 6.78 1.64.834.577.422 3.278.12 4.937-.073.404-1.934.482-3.299.67-.601-.584-.877-1.127-1.367-1.887z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M681.61 1153.975c1.165 0 1.951.019 3.132.08-1.116.976-2.624 1.911-5.053 3.416 1.55 1.825 3.285 3.87 5.166 6.221-2.495-1.52-5.135-3.347-7.776-5.174 1.384-1.508 2.768-3.016 4.53-4.543z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M659.78 1023.16c-4.42 4.016-9.198 8.005-14.33 11.955 4.422-4.02 9.197-8 14.33-11.955z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M690.97 403.465a47.079 47.079 0 0 1-2.724-.833c-1.123-.35-1.687-.469-2.25-.588-.298-.232-.596-.464-.949-.974a181.536 181.536 0 0 1 17.755 3.088c-.627.523-1.396.684-2.717.578-1.73-.408-2.91-.548-4.09-.688a39.196 39.196 0 0 1-2.788-.416c-1.135-.158-1.686-.163-2.238-.167z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M216.552 879.501c-1.1.67-2.114.969-3.192 1.285l.996-16.282 1.72-.005c0 3.906 0 7.811.234 12.037.265 1.077.296 1.836.242 2.965z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M736.756 1202.855c-1.328.432-2.847.542-4.562.905-.639.248-1.081.243-1.995-.052-1.711-1.099-2.95-1.907-4.19-2.715 0 0-.022-.487-.041-.73 1.464-2.216 2.947-4.191 4.795-6.15-.6 1.682-1.564 3.35-2.897 5.656 3.042.967 5.87 1.866 8.89 3.086z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M590.97 142.68c-1.429-.626-2.845-1.626-4.6-2.66-.932-.53-1.524-1.025-2.234-1.793-1.367-2.054-2.617-3.836-4.011-5.918 5.369 1.16 9.16 4.46 10.845 10.37z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M309.94 1132.611c.267-1.137.57-1.948.904-3.087 2.752 2.009 5.471 4.345 8.256 7.014-.885.274-1.836.214-2.997.35-.396.212-.582.228-1.04.304a35.389 35.389 0 0 1-5.123-4.58z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M585.728 1099.046c-.64 1.603-1.623 3.168-2.82 5.076 2.732 1.275 5.434 2.536 8.279 4.102-3.343-.548-6.83-1.402-10.68-2.717-.444-1.172-.523-1.883-.602-2.595 1.827-1.301 3.654-2.603 5.823-3.866zM566.831 1074.24c-4.5 1.62-9.391 3.088-14.548 4.07-.134-.802-.002-1.119.129-1.436 2.232-.278 4.464-.557 7.4-.907 1.303-.473 1.903-.874 2.504-1.276 1.375-.201 2.75-.403 4.515-.45z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M708.673 1174.662c-1.216-6.948-8.576-4.726-12.63-8.042 3.419.252 7.172.302 10.36 1.67 1.396.6 1.635 3.892 2.27 6.372z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M663.29 199.837c-2.249.065-3.662 5.944-5.881.498 1.425-1.007 2.506-1.682 3.587-2.358 1.424-2.95 2.849-5.9 4.62-8.535-.327 3.059-1.002 5.801-1.677 8.544-.148.55-.295 1.1-.649 1.851z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M780.212 1159.27c1.796.102 3.991.091 5.778.94 3.755 1.785 7.295 4.02 10.97 6.413-5.48-2.13-11.006-4.603-16.748-7.353z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M613.295 782.908c2.11-5.097 6.08-8.583 11.457-10.514-3.572 3.667-7.343 7.081-11.457 10.514z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M289.374 479.438c1.29-1.007 2.564-1.663 4.189-2.366.624.763.898 1.571 1.114 2.98-1.257 1.612-2.456 2.622-3.654 3.632-.554-1.298-1.108-2.597-1.649-4.246z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M635.063 169.326c4.417 2.569 8.874 5.477 13.635 8.528.304.141.302.146.298.51-.045.852-.086 1.339-.127 1.825-4.588-3.507-9.177-7.015-13.806-10.863z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M788.885 423.7c1.836-1.834 5.164-2.24 5.764-5.316 1.241 5.148 4.058 1.236 6.505 1.767.954.391 1.326.569 1.648 1.01-2.629 1.226-5.207 2.189-8.127 3.18-1.026.069-1.71.11-2.8-.02a36.057 36.057 0 0 0-2.99-.622z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M840.008 1189.6c-6.64-.52-7.235-7.28-10.913-11.415 3.622 3.45 7.232 7.268 10.913 11.415z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M291.04 484.025c1.181-1.351 2.38-2.361 3.71-3.657 1.488 1.483 2.842 3.25 4.138 5.389-.226.358-.393.346-.808.377-1.37.205-2.491.366-3.912.677-1.237-.714-2.173-1.58-3.128-2.786z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M454.786 793.214c.048.738-.254 1.463-.969 2.59-1.264 1.307-2.116 2.214-2.967 3.121-1.994 1.422-3.989 2.844-6.324 4.232 3.076-3.34 6.494-6.647 10.26-9.943z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M218.081 1007.557c-5.687.173-6.684-1.132-5.278-7.141 1.847 2.037 3.545 4.415 5.278 7.14z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M805.186 413.921c1.609.652 2.91 1.398 4.454 2.603-2.351 1.153-4.945 1.846-7.57 2.167-1.062-1.175-2.091-1.978-3.12-2.78 1.976-.632 3.953-1.264 6.236-1.99z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M798.603 415.978c1.376.735 2.405 1.538 3.196 2.828-.568.702-.896.917-1.225 1.132-1.867-.318-4.684 3.594-5.593-1.613 1.053-1.006 2.164-1.643 3.622-2.347zM788.446 423.757c1.301.092 2.163.242 3.413.805.207.688.103.99.076 1.318-1.052.037-2.105.074-3.978.123-3.17-.065-5.519-.142-7.868-.22-.031-1.657-.062-3.315.26-4.965.808 5.844 4.99 2.573 8.097 2.94z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1117.051 699.296c3.955 2.094 7.91 4.55 11.935 7.334a118.67 118.67 0 0 1-11.935-7.334zM826.011 783.114c-.047.323-.231.516-.762.584-.844-.517-1.689-.917-2.066-1.583-.674-1.19-1.066-2.54-1.576-3.824 1.297-.05 2.606-.224 3.888-.109.932.085 1.828.553 2.998 1.11.018.765-.222 1.27-.463 1.776 0 0-.022-.066-.333-.03-.77.716-1.228 1.396-1.686 2.076z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M746.008 1222.364c.435-.365.87-.355 1.634-.35.809.303 1.291.61 2.092 1.356 1.73 1.437 3.142 2.439 4.554 3.44 0 0 .37.013.55.055.734.572 1.288 1.102 2.003 1.876-4.794.431-9.363-.06-10.833-6.377z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1201.031 601.56c-.79.451-1.587.487-2.785.533-1.138-1.342-1.876-2.694-2.54-4.37 1.013-1.254 1.952-2.184 3.105-3.419.88 2.077 1.546 4.458 2.22 7.256z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M839.465 765.855c-1.69 3.741-3.742 7.444-6.142 11.123.575-4.352 1.086-8.907 6.142-11.123z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1179.767 576.19c-.137.603-.625 1.456-1.245 1.567-4.158.745-3.345 2.762-1.354 5.51-3.483.547-4.348-2.447-3.548-4.422.588-1.452 3.73-1.87 6.147-2.655z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1000.2 712.951c-.558-3.079-.712-6.234-.686-9.688 4.162 2.668 2.884 6.116.685 9.688zM856.948 1005.807c-3.068-2.749-6.083-5.863-9.104-9.32 5.071.761 7.113 4.86 9.104 9.32z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1134.298 549.066c1.386.085 2.687.531 4.556 1.235 1.757.105 2.947-.047 4.136-.2.855-.05 1.709-.1 2.779.09-3.97 3.829-6.273 3.632-11.471-1.125z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M591.844 1066.317a97.825 97.825 0 0 1-11.984 5.05c3.646-1.871 7.623-3.504 11.984-5.05z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M997.79 695.063c-2.074-2.792-4.005-5.996-5.949-9.559 4.263 1.37 6.299 4.538 5.95 9.558z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M797.886 1167.46c3.28 1.35 6.66 3.027 10.096 5.047-3.295-1.345-6.645-3.031-10.096-5.047z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M902.053 1041.683c-3.027-1.954-6.054-3.907-9.235-6.16 2.91 1.328 5.975 2.956 9.12 5.137.08.552.115 1.023.115 1.023z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M902.06 1042.06c-.007-.377-.042-.848.002-1.08 1.123.49 2.2 1.212 3.594 2.037.578.87.84 1.638.831 2.692-2.588.968-4.906 1.65-7.225 2.332.935-1.868 1.87-3.736 2.799-5.981z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1106.065 693.293c3.587 1.43 7.185 3.224 10.893 5.335a87.94 87.94 0 0 1-10.893-5.335z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M783.286 209.302c-.503-2.01-.696-3.9-.63-6.027a44.445 44.445 0 0 1 5.627 8.12c-1.738-.46-3.212-1.217-4.997-2.093z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M412.488 897.664c.297-2.06.953-4.054 1.81-6.368 1.038 1.34 1.874 3.001 2.448 5.098-.744.725-1.225 1.015-1.707 1.305-.73.01-1.46.02-2.55-.035z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M607.837 1059.158a73.578 73.578 0 0 1-10.652 5.28c3.32-2.011 6.81-3.725 10.652-5.28z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1171.961 562.504c2.684 2.383 5.315 5.114 7.878 8.174-2.688-2.39-5.31-5.108-7.878-8.174zM1184.923 590.893a84.443 84.443 0 0 1 10.738 5.968c-3.634-1.662-7.16-3.655-10.738-5.968z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M222.311 1016.69c-1.647-2.718-2.937-5.398-4.223-8.442 5.598 2.548 6.663 4.607 4.223 8.442z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M817.83 1180.507a94.064 94.064 0 0 1 10.154 6.065c-3.318-1.684-6.68-3.71-10.153-6.065zM664.262 197.853c.352-2.61 1.027-5.352 1.699-8.472.27-.57.544-.76.933-1.179.555-.225.994-.225 1.763-.205-1.138 3.254-2.605 6.488-4.395 9.856zM749.782 1206.765a88.708 88.708 0 0 1-10.742-3.028c3.43.715 6.975 1.732 10.742 3.028z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M820.34 374.006c3.033.712 5.93 1.787 9.235 2.916-3.122 3.648-6.528 2.739-9.236-2.916z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M706.604 1140.993c-2.709 1.31-5.835 2.587-9.367 3.83 2.714-1.31 5.832-2.587 9.367-3.83z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M599.782 1088.138c-2.058 2.074-4.475 4.09-7.244 6.054 2.06-2.071 4.472-4.092 7.244-6.054zM607.777 1082.15c-2.051 2.078-4.462 4.117-7.224 6.08 2.053-2.09 4.459-4.104 7.224-6.08z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M756.209 324.142c2.38 2 4.687 4.36 7.078 7.038a70.083 70.083 0 0 1-7.078-7.038z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M408.883 1072.27c1.258 1.62 2.166 3.119 3.227 4.885-1.805-.456-3.764-1.182-5.722-1.908.714-1.033 1.429-2.066 2.495-2.977z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M998.402 723.958c-.076-2.651.263-5.346.868-8.282a35.83 35.83 0 0 1-.868 8.282z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M653.958 184.052c.028 1.362.056 2.725.081 4.495-1.655-2.017-3.308-4.44-4.638-7.18 1.735.685 3.146 1.685 4.557 2.685z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M723.395 658.5c.636-.478 1.207-.595 2.055-.816.847.614 1.419 1.33 2.297 2.2-.927 1.197-1.387 4.724-4.214 1.328-.24-.886-.22-1.618-.138-2.711z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M271.422 336.806c-.286-2.255-.317-4.766-.284-7.72 3.23 2.014 1.759 4.746.284 7.72z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1066.236 681.165c2.4.155 5.06.591 7.926 1.303-2.418-.157-5.043-.59-7.926-1.303z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M774.204 125.314c1.604 1.34 3.17 3.03 4.815 5.032a37.648 37.648 0 0 1-4.815-5.032z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M653.97 183.68c-1.423-.628-2.834-1.628-4.583-2.662-.337-.034-.458-.425-.488-.627.01-.688.052-1.175.1-2.028 1.665 1.405 3.325 3.176 4.972 5.318z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M849.388 754.908c-1.316 2.036-2.97 4.066-4.956 6.153 1.318-2.016 2.968-4.088 4.956-6.153zM870.7 733.993c-1.352 1.456-3.083 2.84-5.163 4.22 1.362-1.432 3.072-2.862 5.163-4.22z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M289.177 503.938c.947.2 1.601.6 2.633 1.1-.781 1.384-1.94 2.667-3.425 4.047-.05-1.585.224-3.266.792-5.147z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M854.88 748.162c-1.113 2.05-2.58 4.034-4.388 6.05 1.118-2.016 2.576-4.067 4.389-6.05z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M933.195 209.277c-.987-.22-1.974-.44-3.074-.985.226-1.136.565-1.948.973-3.09 1.313.764 2.557 1.858 3.468 3.37-.679.514-1.023.61-1.367.705z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M552.01 1076.633c.27.558.14.875-.026 1.45-2.068.31-4.103.36-6.52.198 1.79-.77 3.967-1.33 6.545-1.648z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1199.541 690.065c-.154 1.24-.309 2.48-.716 4.174-.581.658-.909.864-1.237 1.07.274-1.615.548-3.229 1.244-5.059.42-.216.71-.185.71-.185z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M810.092 406.412c-.913 2.223-2.191 4.298-3.799 6.458a29.772 29.772 0 0 1 3.8-6.458z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M925.052 201.333c1.947.716 3.939 1.778 6.001 3.178-1.938-.719-3.948-1.775-6.001-3.178z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1199.896 689.955c-.355.11-.643.08-.784.045.456-1.966 1.053-3.899 2.048-5.838-.037 1.89-.473 3.786-1.264 5.793z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M264.017 1105.353c1.998.689 4.013 1.73 6.089 3.106-1.984-.695-4.028-1.725-6.09-3.106z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M575.83 1072.303c-1.207.938-2.809 1.748-4.619 2.063-.074-.832.059-1.17.192-1.508 1.344-.228 2.689-.456 4.428-.555z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M750.286 317.05c1.403 1.047 2.708 2.455 4.02 4.193-1.367-1.058-2.742-2.446-4.02-4.194z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M633.683 1042.96c-1.181 1.392-2.712 2.702-4.593 3.886 1.18-1.407 2.712-2.687 4.593-3.886z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M691.783 1165.817c-1.437-.095-3.057-.491-4.767-1.19 1.468.095 3.026.492 4.767 1.19z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M538.484 1080.193c-.142-.502.105-.949.49-1.619 1.57-.309 3.003-.395 4.839-.33-1.379.77-3.16 1.387-5.33 1.95z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1136.011 533.608c-.213.374-.404.394-.87.496-.832-.812-1.388-1.708-2.082-2.907-.095-.741-.052-1.179.105-1.93 1.032 1.119 1.95 2.553 2.847 4.341z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M270.223 1109.167c1.646.696 3.307 1.738 5.033 3.106-1.628-.703-3.323-1.73-5.033-3.106z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M754.178 1226.493c-1.302-.684-2.714-1.686-4.17-3.024 1.324.677 2.692 1.692 4.17 3.024z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1159.95 552.36c-.162-.453-.117-.628.018-1.059 1.451.74 2.813 1.737 4.154 3.053-1.335-.36-2.65-1.038-4.171-1.994z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M876.768 729.06c-.715 1.092-1.796 2.13-3.22 3.167.723-1.076 1.788-2.147 3.22-3.166z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M763.405 81.137c-.903-.983-1.6-2.29-2.176-3.91.874.987 1.628 2.286 2.176 3.91z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M265.945 1174.575c-.978.791-1.854 1.321-2.895 2.119-.164.268-.623.294-.853.286a19.743 19.743 0 0 1 3.685-3.78c.295.413.23.763.063 1.375z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M641.792 1037.112c-.715 1.1-1.766 2.118-3.246 2.879-.43-.432-.432-.605-.433-.778 1.115-.727 2.23-1.454 3.68-2.1z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M775.088 340.338c1.273-.124 2.591.14 4.11.67-1.22.084-2.642-.099-4.11-.67z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M631.336 167.952c1.332-3.232 2.401-.87 3.636.694-1.07.012-2.18-.307-3.636-.694z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1123.982 812.204c-.721.12-1.442.241-2.486.186 1.157-.869 2.638-1.562 4.524-2.109.46.305.516.463.074.744-1.037.475-1.574.827-2.112 1.18z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M571.045 1072.63c.225.566.092.904-.072 1.516-1.061.284-2.093.294-3.478.146.828-.735 2.01-1.311 3.55-1.661z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M591.796 1094.134c-.74 1.078-1.822 2.103-3.25 3.075.737-1.078 1.823-2.103 3.25-3.075z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M579.605 1102.963c.379.66.458 1.372.531 2.438-.496.747-.988 1.139-1.808 1.558-.333-.446-.339-.918-.373-1.745.43-.97.89-1.585 1.65-2.25z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M462.998 307.825c-1.089 1.158-2.191 2.1-3.6 3.154-.305.112-.612-.187-.572-.611 1.374-1.341 2.707-2.258 4.04-3.174 0 0 .119.416.132.631z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M417.861 1073.607c-1.213.094-2.503-.177-3.97-.722 1.18-.065 2.537.147 3.97.722zM737.793 122.712c-.648-.798-1.212-1.963-1.737-3.508.633.794 1.228 1.968 1.737 3.508z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1180.122 587.272c1.067.294 2.063.946 3.167 1.883-1.007-.318-2.123-.922-3.167-1.883z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1197.553 695.639c.363-.536.69-.742 1.19-1.027.123.836.074 1.752-.216 2.876-.41.252-.58.295-1.003.4-.171-.599-.088-1.258.03-2.249z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M701.572 71.984c-.993-.483-1.88-1.301-2.763-2.437.96.49 1.914 1.295 2.763 2.437z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M711.926 208.717c.97-.085 2.049.143 3.138.741-1.002.105-2.016-.162-3.138-.741z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M763.736 888.086c-.108.913-.57 1.866-1.358 2.897.118-.9.561-1.878 1.358-2.897z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M743.764 57.923c-.746-.47-1.361-1.294-1.92-2.447.72.478 1.387 1.286 1.92 2.447z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M790.152 341.973c.74-.359 1.628-.432 2.683-.268-.735.343-1.635.449-2.683.268zM770.324 338.102c.973-.017 1.913.347 2.966 1.002-.924-.013-1.962-.317-2.966-1.002z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M592.064 355.298c.626-.242 1.295-.132 2.3-.08.336-.06.675.198.805.367.05.366-.029.564-.122 1.082-.99-.126-1.965-.57-2.983-1.369z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M747.173 86.257c.982-.062 1.99.255 3.116.88-.95.037-2.02-.232-3.116-.88z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M176.196 1017.12c.67-.362 1.536-.509 2.601-.452-.67.358-1.537.512-2.601.451z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M999.725 699.167c-.765-.563-1.356-1.502-1.897-2.778.723.577 1.397 1.49 1.897 2.778z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M792.528 218.071c-.604.102-1.055-.105-1.75-.37-.383-.465-.522-.873-.479-1.55.916.358 1.65.985 2.229 1.92z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M271.009 1170.335c-.575.708-1.494 1.236-2.744 1.671.58-.678 1.49-1.265 2.744-1.67zM1128.885 805.278c.073 1.017-.231 2.07-.883 3.168-.064-1.014.22-2.073.883-3.168z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M252.517 301.887c-.235-.976-.103-2.012.309-3.205.205.944.131 2.045-.31 3.205z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1180.97 572.543c.328.619.602 1.619.595 2.634-.403-.74-.525-1.497-.594-2.634z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M828.363 781.062c-.092-.5.148-1.005.513-1.764.555-.347.987-.44 1.735-.439-.426.796-1.17 1.497-2.248 2.203z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M762.004 35.606c.672-.139 1.392.046 2.205.516-.657.127-1.408-.033-2.205-.516zM783.685 74.886c.64.271 1.067.82 1.445 1.641-.584-.274-1.12-.818-1.445-1.641z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M754.32 322.06c.691.122 1.28.588 1.886 1.356-.651-.135-1.32-.573-1.887-1.355z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M813.826 1177.478c.623.08 1.353.465 2.126 1.193-.645-.068-1.332-.478-2.126-1.193z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M698.452 68.05c-.662-.186-1.188-.68-1.693-1.465.624.192 1.227.673 1.693 1.464zM696.787 65.869c-.647-.225-1.224-.771-1.744-1.64.642.224 1.228.772 1.744 1.64z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M779.776 63.205c.577.302.926.735 1.202 1.456-.525-.25-.977-.787-1.202-1.456z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M712.915 81.676c-.714.038-1.426-.275-2.21-.894.69-.023 1.45.26 2.21.894z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M785.677 79.884c.605.326.991.926 1.29 1.799-.56-.326-1.034-.925-1.29-1.799z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M747.674 63.973c-.693-.138-1.294-.618-1.893-1.402.662.15 1.323.605 1.893 1.402z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M918.033 196.383c.637.059 1.323.45 2.104 1.143-.62-.068-1.338-.44-2.104-1.143z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M732.497 73.997c.623.09 1.192.51 1.784 1.211-.597-.106-1.217-.493-1.784-1.211z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M741.518 53.118c-.628-.252-1.092-.827-1.559-1.703.573.26 1.147.82 1.559 1.703z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M748.339 314.001c.658.23 1.2.794 1.708 1.671-.63-.236-1.228-.787-1.708-1.67z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M745.555 61.116c-.696-.25-1.214-.823-1.668-1.703.659.256 1.253.817 1.668 1.703z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M528.968 730.467c-.071.723-.44 1.313-1.093 1.862.075-.692.435-1.344 1.093-1.862z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M869.25 833.943c.122-.67.595-1.316 1.387-1.982-.134.656-.586 1.332-1.388 1.982z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1110.525 820.21c-.426.102-.622.038-1.121-.083.273-.644.85-1.232 1.741-1.669.08.629-.155 1.107-.62 1.752z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M886.913 819.783c.216-.732.79-1.367 1.695-1.961-.225.713-.782 1.385-1.695 1.96z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1119.214 812.711c-.198.78-.7 1.342-1.492 1.803.201-.74.695-1.382 1.492-1.803z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M526.971 732.456c-.069.72-.437 1.314-1.093 1.87.072-.69.433-1.343 1.093-1.87zM415.18 897.896c.34-.487.822-.777 1.592-1.155.338.087.388.262.337.69-.664.39-1.227.526-1.93.465z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1149.195 549.288c.347.226.453.471.635 1.107-.55.412-1.177.433-1.807.166.308-.61.62-.932 1.172-1.273z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M906.048 709.176c-.23.698-.815 1.287-1.719 1.863.242-.666.803-1.318 1.719-1.863z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M999.748 881.074c-.134.692-.598 1.354-1.392 1.983.134-.694.598-1.354 1.392-1.983z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M841.35 763.84c-.066.688-.452 1.339-1.147 1.99.07-.676.45-1.352 1.147-1.99z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M862.89 740.19c-.095.721-.548 1.378-1.312 2.057.11-.693.532-1.408 1.312-2.058zM860.904 742.21c-.083.727-.523 1.391-1.274 2.076.099-.699.508-1.418 1.274-2.075zM858.937 744.243c-.12.73-.596 1.38-1.389 2.017.134-.708.584-1.403 1.39-2.017zM843.762 761.083c-.118.643-.59 1.276-1.368 1.985.134-.614.574-1.305 1.368-1.985z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M875.192 524.803c.097-.681.517-1.349 1.26-1.982-.098.687-.517 1.342-1.26 1.982z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M856.883 746.174c-.1.742-.557 1.417-1.338 2.08.11-.725.546-1.436 1.338-2.08zM872.864 732.148c-.145.7-.646 1.34-1.474 1.956.154-.688.636-1.352 1.474-1.956z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M441.84 805.226c-.09.702-.5 1.369-1.234 1.992.088-.704.5-1.366 1.233-1.992zM443.803 803.181c-.082.693-.485 1.378-1.217 2.022.08-.703.488-1.367 1.217-2.022zM456.833 791.247c-.115.66-.548 1.299-1.291 1.918.117-.66.545-1.3 1.29-1.918z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M940.855 790.736c.235-.715.834-1.31 1.76-1.883-.246.682-.822 1.342-1.76 1.883z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M458.894 789.37c-.13.647-.566 1.26-1.308 1.836.13-.648.567-1.26 1.308-1.837z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M864.85 738.14c-.079.74-.516 1.429-1.279 2.117.09-.723.505-1.445 1.278-2.116z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M415.983 1078.594c.632-.155 1.34.01 2.197.422-.608.13-1.365.015-2.197-.422zM562.025 1074.525c-.31.568-.91.97-1.797 1.324.31-.528.908-1.009 1.797-1.324z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M620.736 1050.989c-.292.665-.91 1.232-1.84 1.627.296-.69.905-1.208 1.84-1.627zM623.825 1049.12c-.276.695-.879 1.259-1.798 1.692.28-.695.875-1.26 1.798-1.692zM627.722 1046.963c-.27.698-.866 1.295-1.779 1.731.273-.717.864-1.275 1.78-1.73z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M504.377 118.033c.607.288 1.086.88 1.482 1.766-.592-.292-1.1-.877-1.482-1.766z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1088.06 1027.346c.63.063 1.303.465 2.089 1.16-.608-.077-1.327-.45-2.09-1.16z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M276.918 1113.478c.718-.036 1.453.27 2.246.895-.704.028-1.467-.264-2.246-.895z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M765.336 334.037c.7.042 1.311.443 1.992 1.123-.647-.07-1.363-.416-1.992-1.123zM768.12 336.225c.666.042 1.332.432 2.06 1.123-.646-.058-1.354-.416-2.06-1.123z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M709.159 649.753c-.308-.411-.305-.813.014-1.547.624-.488.931-.645 1.239-.802l.403.407c-.36.741-.852 1.346-1.656 1.942z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M260.944 1103.462c.715-.047 1.46.25 2.275.869-.702.039-1.474-.243-2.275-.869z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M587.817 1097.153c-.135.704-.605 1.353-1.405 1.96.137-.7.604-1.357 1.405-1.96z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M744.26 84.118c.677.062 1.306.477 1.999 1.183-.64-.084-1.343-.456-2-1.183z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M714.472 958.788c-.013.777-.372 1.527-1.078 2.263.012-.773.371-1.532 1.078-2.263zM720.512 950.824c-.042.747-.432 1.465-1.161 2.185.045-.737.429-1.476 1.16-2.185zM661.867 1021.28c-.13.666-.587 1.305-1.364 1.903.133-.671.584-1.3 1.364-1.903z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M212.013 998.654c-.604-.195-1.259-.704-1.895-1.57.627.18 1.236.718 1.895 1.57z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M847.901 995.804c-.71-.091-1.38-.54-2.066-1.316.692.101 1.398.53 2.066 1.316zM845.875 993.823c-.702-.104-1.373-.564-2.043-1.35.691.113 1.382.554 2.043 1.35z\"\n        />\n        <path\n            fill=\"#5C2F2E\"\n            d=\"M827.147 1175.62c-.192.085-.519-.056-.942-.456.205-.096.506.067.942.456z\"\n        />\n        <path\n            fill=\"#902C2A\"\n            d=\"M132.4 558.27c.247-.058.395.095.486.277.032.064-.078.199-.278.36-.213-.099-.27-.257-.208-.637z\"\n        />\n        <path\n            fill=\"#603B3A\"\n            d=\"M637.823 1039.259c.291.127.292.3.385.717-.063.329-.217.414-.629.432-.186-.413-.116-.758.244-1.15z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M614.998 1193.41c1.142-.685 2.222-1.022 3.64-1.395-1.545 3.175-2.756 7.318-5.518 9.31-2.33 1.681-6.46.866-9.793 1.156-.13-3.108-1.475-6.917-.163-9.193 3.841-6.658 8.741-12.705 13.53-19.137-1.024 2.627-2.176 5.504-3.72 8.151-2.545 4.365-5.522 8.486-7.928 12.92-.704 1.298-.09 3.31-.08 4.995 1.559-.086 3.585.413 4.578-.38 2.085-1.666 3.627-4.011 5.454-6.426z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M623.362 1258.218c3.162-.083 6.33-.32 9.48-.162 1.042.053 2.033 1.126 3.048 1.733-.878 1.02-1.665 2.802-2.65 2.919-2.943.35-5.964.049-9.492-.357-.487-1.616-.436-2.874-.386-4.133z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M747.675 1255.943c-.292.499-.885.954-1.477.953-9.187-.007-18.374-.074-27.86-.396 7.025-.776 14.346-1.405 21.68-1.724 2.434-.106 4.903.585 7.657 1.167z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M642.69 1145.06c-.241 1.126-.6 2.495-1.46 3.375a505.942 505.942 0 0 1-15.882 15.536 460.27 460.27 0 0 1 17.343-18.91z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M622.865 1258.146c.447 1.33.396 2.589.45 4.212-5.22-.594-10.544-1.553-15.868-2.511l.094-1.774c4.943 0 9.885 0 15.324.073z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M636.391 1174.983c2.087-1.892 4.413-4.07 7.105-5.606 3.08-1.757 6.484-2.941 10.122-4.38-1.419 1.348-3.188 2.737-5.016 4.043-.783.56-2.044.73-2.481 1.448-2.175 3.57-5.855 3.77-9.73 4.495z\"\n        />\n        <path\n            fill=\"#8F2C2A\"\n            d=\"M693.192 1268.791c1.155-.074 1.883.08 2.717.971.055 1.084.003 1.43-.048 1.776-12.65-.101-25.3-.202-38.412-.403 1.251-.445 2.96-1.067 4.677-1.088 8.286-.104 16.576.013 24.862-.092 1.929-.024 3.85-.609 6.204-1.164z\"\n        />\n        <path\n            fill=\"#902C2A\"\n            d=\"M645.081 1116.946c-8.39-.316-16.779-.635-25.169-.944-4.11-.151-8.22-.282-12.166-.726 1.669-.445 3.172-.587 5.024-.703 1.538.064 2.727.103 4.391.22a200.8 200.8 0 0 0 8.526-.1c2.25-.02 4.105.003 6.429.105 2.34.052 4.21.025 6.515-.008 2.458-.123 4.482-.24 6.506-.357 0 0 .102.12.042.57a32.195 32.195 0 0 0-.098 1.943z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M272.923 1089.005c-2.034-1.387-3.76-2.965-5.705-5.06-.304-.92-.388-1.323-.472-1.725l.176-.155c2.668 1.732 7.154 1.79 6.001 6.94z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M645.488 1116.959c-.394-.511-.382-1.01-.322-1.879 3.04.057 6.032.486 9.392 1.156.367.24.444.6.444.6-3.035.045-6.071.09-9.514.123z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M654.345 1164.96c2.078-1.945 4.511-3.92 7.298-5.928-2.078 1.945-4.51 3.921-7.298 5.928zM625.374 1184c1.274-1.757 2.918-3.52 4.618-5.616.488-.353.922-.371 1.68-.387.347 4.197-2.89 4.994-6.298 6.003zM665.318 1157.943c1.438-1.607 3.228-3.236 5.374-4.878-1.436 1.61-3.228 3.233-5.374 4.878zM650.628 1141.004c-1.402 1.307-3.174 2.618-5.289 3.958 1.411-1.3 3.165-2.627 5.289-3.958z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M612.42 1114.547c-1.502.142-3.005.284-4.964.428-.772-.485-1.09-.971-1.405-1.764 1.714-.299 3.427-.29 5.541.033.544.646.687.974.829 1.303z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M632.364 1177.997c.745-.98 1.855-1.963 3.292-2.976-.757.97-1.842 1.972-3.292 2.976zM726.016 1201.377c1.233.424 2.472 1.232 3.85 2.33-1.188-.457-2.516-1.202-3.85-2.33zM622.356 1186.978c.429-.945 1.195-1.93 2.304-2.943-.427.948-1.197 1.925-2.304 2.943z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M280.867 1098.755c-.952-.487-1.892-1.308-2.834-2.468.948.486 1.897 1.31 2.834 2.468zM310.77 1128.814c-.594-.113-1.202-.543-1.849-1.27.587.119 1.211.537 1.85 1.27z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M621.69 1168.048c-.131.6-.585 1.237-1.357 1.919.132-.598.583-1.24 1.356-1.92z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M288.668 1106.873c-.61-.12-1.192-.56-1.808-1.287.59.13 1.212.55 1.808 1.287z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M592.058 1109.398c.806-.163 1.698.066 2.726.63-.79.144-1.714-.047-2.726-.63z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M290.695 1108.824c-.6-.093-1.186-.5-1.83-1.186.577.105 1.21.488 1.83 1.186zM286.74 1104.844c-.629-.112-1.23-.544-1.868-1.27.607.12 1.252.535 1.869 1.27zM284.75 1102.841c-.63-.11-1.236-.538-1.88-1.26.609.118 1.258.53 1.88 1.26zM282.761 1100.832c-.629-.144-1.224-.611-1.837-1.381.612.15 1.242.605 1.837 1.381z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M601.988 1112.565c.49-.215.66-.241.96-.124-.546.444-1.21.817-1.875 1.19.195-.317.39-.632.915-1.066z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M655.34 1116.782c-.338.053-.415-.306-.365-.483.328-.413.629-.448 1.118-.11-.028.295-.22.417-.752.593z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1210.986 753.244c-.325 4.452-.342 9.298-1.718 13.721-3.843 12.354-7.894 24.671-12.602 36.715-1.939 4.96-5.7 9.226-8.759 13.721-2.154 3.166-4.52 6.188-7.354 9.077.26-22.796 10.933-42.938 16.752-64.505.332 9.858-4.085 18.61-7.2 27.777-2.865 8.427-4.8 17.172-7.08 25.794-.238.9-.032 1.917-.032 3.971 5.47-5.386 10.315-10.112 12.398-16.753 4.808-15.33 9.358-30.739 14.032-46.11.333-1.095.83-2.14 1.563-3.408zM1199.237 815.824c1.502-1.376 3.514-2.584 5.159-4.173 1.727-1.669 3.102-3.702 4.946-5.69-2.085 7.021-4.078 14.326-6.981 21.249-4.335 10.338-9.285 20.42-14.043 30.579-.762 1.628-1.882 3.088-3.146 5.123-2.733-5.958.357-10.564 2.338-14.924 4.46-9.814 9.617-19.311 14.417-28.973.667-1.344.925-2.89 1.67-5.313-2.04 1.079-3.025 1.6-4.36 2.122z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M1137.658 472.022c.726 5.023 1.45 10.047 1.85 15.52-.748.524-1.169.6-1.59.675-1.518-5.9-3.221-11.76-4.504-17.71-1.426-6.619-2.837-13.278-3.606-19.993-1.869-16.328-9.239-30.35-17.416-44.169-2.333-3.943-3.588-8.523-5.238-13.199 5.818 10.489 11.736 21.266 17.179 32.279 2.917 5.903 5.027 12.205 7.472 18.34.365.915 1.04 2.065.77 2.819-2.29 6.393 1.358 10.585 5.12 15.107-.085.362-.464.376-.733.308-1.03-.526-1.792-.985-3.366-1.932l4.062 11.955z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1134.46 424.516c-5.208-8.252-10.188-16.23-15.168-24.208l1.916-1.184c10.8 8.963 15.256 22.27 22.558 33.51-3.026-2.615-6.051-5.23-9.306-8.118z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1148.642 488.744c-.74.348-1.341.316-2.486.04-1.217-2.073-1.889-3.904-2.56-5.735-1.067-3.482-2.135-6.963-3.307-11.15-1.09-3.747-2.074-6.79-3.058-9.832 0 0 .379-.014.565-.047.662.38 1.136.795 2.455 1.945-1.188-5.127-2.17-9.365-3.04-14.024 1.647 3.882 3.418 8.118 4.67 12.503 2.453 8.596 4.618 17.274 6.761 26.3z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1133.137 933.175c3.399-6.884 6.734-13.661 10.536-20.165 6.894-11.792 14.067-23.42 21.414-35.277-1.535 4.646-2.712 9.84-5.307 14.187-8.102 13.575-16.737 26.832-25.188 40.198-.318.504-.866.861-1.455 1.057z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1167.317 873.905c1.774-5.404 3.501-11.098 6.116-16.35 5.228-10.499 10.86-20.8 16.515-31.08 1.321-2.401 3.401-4.386 5.47-6.584-3.34 6.74-7.132 13.44-10.668 20.273-5.781 11.172-11.395 22.43-17.433 33.741zM1217.838 751.999c-.223-.898-.722-1.825-.628-2.688.91-8.354 1.995-16.69 2.794-25.053.093-.969-1.247-2.075-2.325-3.105-.365-2.271-.327-4.555.019-7.367.679-.619 1.051-.71 1.677-.554.463 1.468.67 2.69.789 3.382l3.54-8.745c-.225 3.095-.45 6.19-.946 9.927-.3 1.546-.33 2.45-.362 3.354-.156 4.628-.313 9.257-.717 14.558-.226 1.267-.205 1.862-.184 2.457-.81 4.348-1.62 8.697-2.748 13.442-.516.394-.712.393-.909.392z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1261.606 676.324c1.645 4.351 3.42 8.933 4.231 13.679.574 3.357-.16 6.937-.61 10.707-.897-.195-1.492-.68-2.45-1.46l-1.453 5.698c0-10.224 0-19.274.282-28.624z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1219.295 707.154c-.483-7.902-.08-15.658 3.556-22.968 3.827 5.144 3.045 10.832 2.386 16.982-.677.635-1.032.74-1.636.593-.45-1.483-.65-2.715-.778-3.498l-3.528 8.89z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1126.973 955.124c-.322.036-.643.065-1.408-.133-.814-.118-1.187-.016-1.56.087 0 0 .047-.06.077-.037-2.099.65-4.227 1.275-6.723 1.871 2.94-2.046 6.252-4.056 9.553-6.08 2.432-1.492 5.435-2.569 4.938-6.789l-6.774.791c1.72-2.892 2.873-4.833 4.412-6.532-1.4 4.533 3.17 3.836 4.597 5.606.013.77.025 1.541-.22 2.824-.21 1.103-.162 1.694-.114 2.284-.594 1.632-1.188 3.265-2.205 4.662-3.218-3.158-3.387.399-4.573 1.446z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"m1107.797 385.022 1.492-3.824c1.145.56 2.413.956 3.414 1.707 3.836 2.877 6.103 6.4 4.37 11.33l-1.975 1.833c-.774-1.63-1.547-3.259-2.763-5.318-1.807-2.196-3.172-3.962-4.538-5.728z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1177.12 930.223c-1.81 4.429-3.945 8.659-6.387 13.045-1.903.086-3.498.015-5.95-.093 3.053-4.544 5.909-8.942 8.993-13.173.345-.475 1.983-.008 3.344.221zM1192.804 549c-.6-.168-1.535-.86-1.483-1.467.906-10.688-5.004-19.38-8.265-29.199 1.72 2.522 3.578 5.327 5.008 8.335 3.275 6.89 6.24 13.9 4.74 22.33z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1207.193 701.801c-.276-6.31-.242-12.88-.222-19.451.009-2.815-.012-5.63.085-8.907.706.375 1.857 1.233 1.824 2.042a547.838 547.838 0 0 1-1.687 26.316z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1266.066 488.172c1.777 2.774 3.33 5.885 4.938 9.355-1.901.593-5.018 1.697-5.61.908-2.34-3.12-2.151-6.72.672-10.263z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1213.983 779.006c.128-2.516.014-5.074.436-7.54.797-4.653 1.903-9.254 3.443-14.169.757-.288.952-.282 1.147-.277.055 1.675.11 3.35.156 5.755.237 1.569.483 2.408.73 3.247-.062 1.283-.124 2.566-.517 4.255-1.365.888-2.966 1.113-3.322 1.901-.972 2.15-1.419 4.536-2.073 6.828z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1178.785 508.09c-3.171-4.541-6.246-9.47-8.81-13.576-2.254.182-3.806.307-5.388.112 4.474-5.023 4.842-5.085 8.187.712 2.293 3.974 4.089 8.234 6.01 12.753zM1118.861 370.382c1.728.565 3.51 1.561 5.621 2.636.174 2.951.016 5.823-.142 8.695l-2.577.255c-.95-3.719-1.9-7.437-2.902-11.586z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1248.18 545.751c1.035-.533 2.385-1.148 2.819-.755 2.412 2.193 2.034 7.603-1.764 11.901-.474-4.394-.817-7.578-1.054-11.146z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"M1265.888 665.149c.27.467.539.935.96 1.942.682 1.14 1.211 1.742 1.74 2.344.135 1.968.27 3.936-.082 6.195-1.828-2.819-3.17-5.93-4.836-9.787-.688 2.768-1.106 4.452-1.797 6.135-.454 0-.636.002-.817.004-.158-2.242-.316-4.483-.194-7.212 1.862-.199 3.444.09 5.026.379z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1213.954 779.356c.683-2.642 1.13-5.029 2.102-7.178.356-.788 1.957-1.013 3.32-1.516-.581 4.886-1.491 9.791-2.601 15.772l-1.239-6.25c-.483 2.51-.817 4.25-1.42 5.42-.341-1.651-.413-2.731-.485-3.811.098-.696.197-1.391.323-2.437zM1198.731 589.072c-.712-2.168-1.437-4.79-1.862-7.461a326.84 326.84 0 0 1-2.275-17.34c.822.592 1.922 1.458 2.037 2.439.85 7.282 1.506 14.588 2.1 22.362z\"\n        />\n        <path\n            fill=\"#FDFCFC\"\n            d=\"M1219.179 707.152c1.318-3.028 2.52-6.058 3.644-8.89.127.784.328 2.016.782 3.887.382 1.394.51 2.148.637 2.902-.125.706-.25 1.411-.457 2.468-1.294 3.348-2.508 6.346-3.621 9.095-.118-.691-.326-1.914-.777-3.813-.314-2.399-.386-4.12-.458-5.84 0 0 .134.189.25.19z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M1201.257 404.164c4.749.684 3.41 3.798 2.82 6.373-.068.296-2.254.107-3.459.142.088-2.15.176-4.3.639-6.515z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1265.908 664.769c-1.602.09-3.184-.198-5.053-.36-.132-2.441.025-5.01.21-8.047 1.666.645 2.907 1.125 4.507 1.625.752.424 1.145.83 1.623 1.512-3.404.924-1.618 3.117-1.287 5.27z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1214.928 734.244c-.702 5.085-1.722 10.379-3.053 15.82.704-5.107 1.72-10.36 3.053-15.82z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1134.08 943.509c-1.422-1.371-5.993-.674-4.268-5.318.543-1.199 1.147-2.047 2.025-3.05 2.31.324 3.923.936 2.825 3.674-.521 1.3-.41 2.855-.581 4.694z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M1107.469 384.947c1.694 1.84 3.06 3.607 4.545 5.684-1.288.329-2.697.347-4.526.364-.421-.002-.796-.322-.81-.837-.744-1.52-1.476-2.525-2.207-3.53-.532-.975-1.065-1.951-1.562-3.262 1.434.278 2.832.892 4.56 1.58z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1204.299 388.582c1.403 1.156 2.523 2.478 3.515 3.889.046.066-1.131 1.409-1.58 1.323-1-.19-2.464-.723-2.705-1.456-.339-1.03.262-2.368.77-3.756zM1137.394 951.187c-.385-3.184.505-5.332 3.843-6.369 1.301 4.026-.222 5.878-3.843 6.369zM1161.697 489.199c-2.03-2.891-3.92-6.163-5.788-9.81a82.69 82.69 0 0 1 5.788 9.81zM1139.93 444.8c-.958.755-1.87 1.13-2.887 1.859-.884-1.392-1.66-3.138-2.438-4.883l1.967-1.201c1.135 1.281 2.27 2.563 3.358 4.225z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1217.08 723.993c-.331 2.317-.664 4.633-1.31 7.071-.297-1.833-.278-3.787-.004-6.265.61-.617.962-.711 1.315-.806z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1194.712 561.089c-.853-2.876-1.562-6.2-2.078-9.825.869 2.925 1.546 6.15 2.078 9.825zM1274.088 519.471c-.465.402-.957.447-1.82.502-1.114-1.676-1.858-3.363-2.602-5.05l1.888-.867c.836 1.686 1.672 3.372 2.534 5.415z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1205.769 721.839c-.153-2.586.045-5.293.57-8.232.144 2.55-.038 5.33-.57 8.232z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1147.765 461.123c-1.345-1.878-2.572-4.153-3.727-6.794 1.329 1.888 2.588 4.143 3.727 6.794z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1210.216 803.776c.028-2.105.368-4.421 1.034-6.844-.023 2.14-.372 4.385-1.034 6.844z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1280.29 606.76c-1.316-1.06-2.389-2.365-3.825-3.682-.4-.198-.437-.382-.476-.85 4.578-1.806 5.184.621 4.301 4.532z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1198.153 758.778c.065-2.096.45-4.399 1.16-6.82-.064 2.126-.453 4.37-1.16 6.82zM1213.324 781.947c.379.926.45 2.006.575 3.488-.416 1.361-.885 2.32-1.644 3.421.061-2.157.412-4.457 1.07-6.91z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1218.543 707.043c.458 1.638.53 3.36.59 5.511-.384.523-.756.613-1.393.813a21.89 21.89 0 0 1 .803-6.324z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1127.179 955.355c.98-1.278 1.149-4.835 4.049-1.58-.425.931-.955 1.532-1.776 2.2-.884-.086-1.476-.237-2.273-.62z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1219.283 756.793c-.47.222-.664.216-1.151.21-.287-1.392-.28-2.781-.284-4.587.187-.416.383-.415.874-.423.475 1.518.655 3.046.56 4.8zM1143.928 452.87c-.98-1.164-1.888-2.701-2.734-4.59.978 1.172 1.893 2.695 2.734 4.59z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M1102.656 382.962c-.981.259-1.842.248-3.026-.057-.02-.764.282-1.235.585-1.706.647.03 1.294.061 2.248.204.309.504.311.896.193 1.559z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1120.484 970.055c.309-.98.944-2.04 1.891-3.194-.313.975-.939 2.045-1.89 3.194z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1196.557 819.164c.316-1.003.952-2.095 1.93-3.228-.31 1.02-.96 2.08-1.93 3.228z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1264.093 704.987c.257 1.033.251 2.216.05 3.715-.234-.978-.273-2.271-.05-3.715zM1217.1 723.61c-.372.478-.725.572-1.328.773-.028-1.025.194-2.157.79-3.354.435.689.497 1.443.539 2.581zM1222.68 721.047c-.253-.801-.222-1.705.07-2.838.245.758.229 1.746-.07 2.838zM1224.6 704.964c-.485-.667-.613-1.421-.745-2.564.35-.492.705-.597 1.313-.81.098 1.025-.056 2.157-.568 3.374zM1153.806 474.056c-.712-.52-1.336-1.424-1.931-2.67.692.535 1.356 1.41 1.931 2.67zM1220.15 765.848c-.502-.665-.748-1.504-.865-2.672.46.614.79 1.556.865 2.672zM1161.858 953.129c-.194.877-.744 1.751-1.602 2.706.21-.85.728-1.779 1.602-2.706zM1149.664 465.222c-.622-.305-1.13-.963-1.598-1.943.598.316 1.154.953 1.598 1.943zM1155.781 478.125c-.596-.299-1.11-.94-1.56-1.893.589.308 1.116.93 1.56 1.893zM1271.6 522.194c.254.832.318 1.923.363 3.423-.197-.78-.374-1.972-.362-3.423zM1163.66 492.219c-.693-.238-1.283-.853-1.877-1.798.657.253 1.317.837 1.876 1.798zM1221.737 738.067c-.263-.497-.284-1.092-.073-1.895.26.46.288 1.129.073 1.895zM1264.781 649.133c.47.394.713.92.826 1.732-.437-.342-.744-.971-.826-1.732zM1260.825 672.108c.412-.128.594-.13 1.052.208.356.781.435 1.224.514 1.667 0 0-.439-.037-.658-.012-.525-.563-.832-1.15-.908-1.863z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1125.367 962.976c.03-.643.374-1.358 1.055-2.117-.023.652-.381 1.348-1.055 2.117zM1113.334 979.967c.036-.653.407-1.343 1.085-2.105-.046.641-.398 1.355-1.085 2.105zM1123.428 966.037c-.006-.664.32-1.377.942-2.185-.005.648-.308 1.393-.942 2.185z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1165.892 949.243c-.154.644-.66 1.243-1.475 1.89.169-.613.646-1.274 1.475-1.89zM1167.895 947.273c-.104.65-.56 1.26-1.312 1.922.123-.619.542-1.291 1.312-1.922zM1134.014 948.911c-.31-.485-.359-1.076-.173-1.793.302.478.369 1.083.173 1.793z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1111.4 983.018c.003-.656.341-1.35.97-2.152-.016.633-.324 1.372-.97 2.152z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1232.313 406.09c.251-.053.438.19.599.715-.28.096-.492-.138-.599-.715zM1179.276 509.913c-.278-.031-.393-.176-.475-.597.235-.023.436.23.475.597z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M269.403 665.141c.07 7.366-.236 14.836-.754 22.66-.689-.793-1.648-1.979-1.56-3.083a248.432 248.432 0 0 1 2.314-19.577z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M199.823 987.728c-1.255-1.538-2.486-3.433-3.598-5.696 1.286 1.535 2.455 3.437 3.598 5.696z\"\n        />\n        <path\n            fill=\"#6E3533\"\n            d=\"M268.27 691.641c.654 1.536 1.199 3.532 1.654 5.932-.648-1.555-1.206-3.513-1.655-5.932zM269.88 633.158c.543 1.03.785 2.283.807 3.789-.516-1.02-.812-2.294-.807-3.789z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M189.68 967.084c-.61-.268-1.118-.88-1.628-1.802.576.279 1.152.869 1.628 1.802z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M125.645 589.203c-.118-.601.044-1.348.47-2.244.113.6-.038 1.35-.47 2.244z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M690.057 182.071c7.065-2.678 9.991-2.281 13.001 2.505-5.808.076-10.96 2.456-16.583-.95 1.07-.488 2.14-.975 3.582-1.555zM742.822 211.99c-1.591-.849-2.647-1.728-3.698-2.89 4.102-.007 8.198.27 12.978.725 1.661.114 2.639.048 3.616-.018.862-.11 1.723-.222 2.883-.188-1.138.868-2.533 2.093-4.02 2.216-3.719.308-7.48.115-11.759.155z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M596.674 145.06c-1.247 3.703-2.74 7.503-4.533 11.157-.352.715-1.866.86-2.844 1.268-.333-1.007-1.08-2.086-.918-3.005.38-2.158 1.194-4.24 2.199-6.447.55.793.735 1.681 1.11 3.487 1.871-2.589 3.253-4.5 4.986-6.46zM577.966 129.659c-6.492-3.472-13.016-7.295-19.759-11.38 2.924.938 6.29 1.755 9.155 3.428 3.731 2.178 7.066 5.035 10.604 7.952z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M767.568 208.22c4.53.42 8.683.8 13.258 1.43-4.065.514-8.55.92-13.04.983-2.437.034-4.883-.513-7.785-.949 1.54-3.703 4.39-2.459 7.567-1.464z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M662.026 84.402c4.142.772 8.29 1.975 12.697 3.424-3.464.517-7.195.983-10.908.872-.633-.02-1.19-2.514-1.789-4.296z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M716.75 196.735c.432-2.168.457-3.672-2.464-3.537-2.135.098-4.277.035-6.847-.107 2.156-2.706 11.419-2.728 12.874.09 1.564 3.029-.551 3.748-3.563 3.554zM715.466 86.917c4.918 1.506 7.054 5.129 7.805 9.883-2.892-2.73-5.544-5.666-8.33-8.96-.07-.624.088-.807.525-.923z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M660.632 197.917c-.717.736-1.798 1.411-3.257 2.084-.377-.003-.375-.001-.397-.295-.337-.76-.65-1.225-.964-1.691l-.029-8.56c.673.63 1.46 1.655 1.994 2.8.852 1.825 1.534 3.73 2.653 5.662z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M635.978 87.624c2.076-.702 4.603-1.249 7.554-1.753-1.285 3.893-4.587 1.315-7.554 1.753zM619.05 89.776c2.165-.743 4.657-1.305 7.55-1.819a50.972 50.972 0 0 1-7.55 1.819zM652.983 85.69c1.482-.653 3.385-1.168 5.687-1.592-1.488.637-3.377 1.184-5.687 1.593zM598.257 93.983c1.49-.703 3.294-1.269 5.465-1.795-1.473.67-3.312 1.301-5.465 1.795zM593.228 99.362c.408-1.298 1.017-2.372 1.904-3.534 2.682 2.773 1.156 3.61-1.904 3.534zM582.192 101.187c.92-.569 2.047-.873 3.533-1.075-.87.515-2.099.928-3.533 1.075zM574.242 102.38c.911-.576 2.037-.91 3.525-1.119-.862.538-2.086.948-3.525 1.118z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M755.397 209.652c-.656.221-1.634.287-2.842.286.687-.192 1.604-.316 2.842-.286z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M596.03 95.587c.192-.641.715-1.16 1.535-1.696-.204.594-.705 1.206-1.535 1.696zM555.193 105.28c.531-.335 1.266-.445 2.37-.508-.475.275-1.32.504-2.37.508z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1169.165 314.892c-.306 1.288-.81 2.345-1.312 3.74-.97-.58-2.055-1.406-2.894-2.432-2.003-2.449-3.989-4.471-7.459-1.109-3.083-2.33-5.558-5.015-8.378-7.267-1.17-.934-3.927-3.81-3.916 1.097l-4.17-6.956.904-.9 5.302 3.38 1.165-.592c-1.646-2.961-3.325-5.905-4.928-8.89-1.538-2.864-2.97-5.785-4.503-8.652-.576-1.078-1.408-2.99-1.938-2.929-1.275.15-2.937.945-3.564 2.001-2.625 4.426-4.85 9.087-7.385 13.57-1.034 1.83-2.163 3.883-3.81 5.025-2.666 1.847-4.376 1.008-3.2-2.676 1.393-.447 2.232-.806 3.328-1.407 1.798-3.373 3.338-6.503 5.198-9.768 1.749-3.42 3.178-6.706 4.607-9.992 1.43-1.422 2.708-3.82 4.321-4.071 3.926-.612 2.848 3.424 4.253 5.98.55 1.011.82 1.5 1.09 1.99 1.377 3.584 2.17 7.562 4.26 10.665 3.869 5.741 7.005 12.3 14.63 14.642 2.996.92 5.482 3.498 8.399 5.551z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1145.409 309.18c-.214-5.166 2.544-2.29 3.713-1.356 2.82 2.252 5.295 4.937 8.21 7.613 2.275 2.574 4.372 4.894 6.169 7.427.786 1.11.957 2.654 1.64 4.696-9.096-4.32-14.217-11.322-19.732-18.38z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1122.15 300.137c-.84.359-1.678.718-2.792.962-.298-.565-.32-1.016-.409-1.799-.066-.332.228-.266.655-.232 1.133.379 1.84.724 2.546 1.069z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1168.11 320.19c.57.183 1.13.688 1.717 1.487-.557-.191-1.142-.678-1.717-1.487zM1174.562 330.34c.513.24.848.633 1.123 1.302-.475-.2-.888-.675-1.123-1.303z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M1235.568 865.63c2.05-1.371 3.564-1.603 3.324 1.191-.212 2.464-.299 5.165-1.408 7.246-.746 1.398-3.196 2.67-4.85 2.63-2.9-.071-2.761-2.467-1.663-4.417 1.262-2.24 2.868-4.285 4.597-6.65z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1231.944 885.874c-1.814.92-3.437 1.532-5.06 2.142.063-1.707-.538-4.051.345-4.974 1.329-1.387 3.696-1.78 5.622-2.595l1.075 1.502c-.597 1.205-1.194 2.41-1.982 3.925z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1278.502 713.904c-.053-1.268.25-2.62.91-4.057.054 1.269-.25 2.62-.91 4.057z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1285.264 726.788c.008-.404.397-.616.595-.714.198-.1.156-.067.179.28 0 .845-.024 1.344-.048 1.843-.022 1.405-.044 2.81-.236 4.513-.28-1.64-.389-3.579-.49-5.922z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1251.507 856.018c.02.945-.315 1.972-.954 3.15-.002-.922.3-1.995.954-3.15z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1282.07 725.274c.407-.315.827-.322 1.562-.333.105.535-.105 1.072-.316 1.61-.41-.323-.822-.647-1.246-1.277zM1281.695 713.242c.178.989.08 2.246-.234 3.823-.159-.971-.1-2.263.234-3.823z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1270.02 800.134c.192-.035.215.433.12.647-.251.034-.42-.136-.548-.333-.019-.03.154-.183.429-.314z\"\n        />\n        <path\n            fill=\"#0B0908\"\n            d=\"M1098.59 287.117c-4.463-.408-5.688 1.458-5.147 5.915.694 5.72.045 11.61.83 17.308.527 3.834 2.534 7.465 3.912 11.882.701 5.503 1.37 10.31 1.642 15.14-1.169-.138-1.941-.296-2.809-.628-.095-.173-.29-.517-.221-.873-.646-1.366-1.2-2.585-2.138-3.299-.504-.382-1.775-.087-2.48.301-.262.144.103 1.427.162 2.573-.1 1.138-.18 1.894-.721 2.629-1.337.239-2.212.499-3.122.707-.033-.05-.135-.12-.291-.525.305-1.77.967-3.103 1.186-4.506.407-2.61 1.924-5.75-2.595-6.84-.49-.244-.738-.433-.957-1.027-1.002-.817-2.003-1.266-2.925-1.795.08-.08-.072.086-.01-.26-.014-.807-.09-1.269.203-1.761 1.218-.67 2.069-1.308 3.18-2.25.411-2.476.562-4.647 1.01-7.11.054-7.441-.188-14.59-.412-22.141.226-2.76.434-5.117.81-7.82.037-2.122.446-4.217-.364-5.595-1.057-1.801-11.67.065-13.55 2.254-2.146.327-3.966.445-5.972.29-1.33.067-3.044.05-3.523.81-2.123 3.368-5.662 3.503-8.992 4.097-1.39-.554-2.668-.77-4.385-1.15-2.678.754-6.276-2.817-7.432 2.206-.189.634-.303.994-.775 1.354-.836.012-1.314.023-2.105-.164-2.616-.63-4.916-1.368-7.222-1.389-1.545-.014-3.065 1.32-4.653 1.48-8.035.814-16.1 1.34-24.133 2.163-7.351.753-14.676 1.757-22.27 2.549-.614.167-.97.436-1.625.599-.693.018-1.09.142-1.827.078-2.795.746-6.386.51-5.646 5.053-.123.202-.418.57-.77.556-.82.013-1.289.04-1.707-.33-.98-1.751-1.97-4.212-3.046-4.25-3.182-.115-7.403-2-9.19 2.212-.73 1.722.48 4.265.86 6.821.111 1.68.17 2.974-.06 4.53-2.301.213-4.315.165-6.48-.313a34.743 34.743 0 0 1-.4-4.376c.19-1.341.341-2.315.864-3.35 2.604-4.836 2.112-6.49-2.165-7.2-3.327-.241-6.231-.452-9.194-1.029-4.479-2.217-5.03-2.013-5.558 1.892 0 .54.006.85-.116 1.54 1.727 4.954 3.588 9.526 5.544 14.488.716 2.677 1.337 4.963 1.616 7.29-1.606.04-2.871.037-4.268-.325-.935-2.94-1.739-5.52-2.42-8.418-.359-.964-.839-1.608-1.45-2.594-.185-1.065-.24-1.79-.042-2.723-.806-2.558-1.863-4.907-2.92-7.255-1.584-1.585 1.737-5.667-4.229-4.838-1.018.01-1.76.005-2.905-.218-2.353.311-4.302.841-6.47 1.523-.56.253-.9.353-1.616.318-2.918 1.628-5.553 3.279-7.936 5.236-.61.5-.42 1.972-.61 3.185-.01.187-.219.498-.537.455-.886.242-1.665.927-1.99.754-6.263-3.323-5.82 1.253-6.037 5.054.009-.008.024-.025-.378.02-2.998.471-5.594.897-8.134 1.024.806-1.368 1.556-2.437 2.694-3.49 1.253-1.349 2.118-2.716 3.263-4.166.594-.313.907-.542 1.573-.649.855-.544 1.356-1.211 2.204-2.045.671-.762.996-1.358 1.584-1.959 1.114-.717 1.965-1.428 3.184-2.043 1.184-.564 2-1.225 3.032-1.973.218-.087.662-.235 1.004-.143.827-.544 1.312-1.18 1.965-1.926.17-.112.565-.203.957-.028 5.53-.511 10.648-1.418 15.807-1.82 4.831-.375 9.704-.216 14.888-.237.974.222 1.619.39 2.362.938 3.185.553 6.271.726 9.63.955.639.125 1.004.193 1.525.588 1.188.636 2.22.946 3.62 1.34 1.868.04 3.37-.003 5.281.136 2.92-.45 5.43-1.079 8.33-1.75 1.68-.166 2.972-.29 4.681-.24 3.255-.464 6.093-1.102 9.37-1.781 3.037-.139 5.635-.237 8.694-.167 6.929-.497 13.396-1.162 20.149-1.858.663-.082 1.04-.133 1.831-.05 2.904-.536 5.396-1.207 8.325-1.891 2.468-.085 4.5-.156 6.58.092 1.07-.362 2.091-1.043 3.54-1.762 9.985-1.59 19.541-3.14 29.43-4.539 1.287-.33 2.243-.814 3.5-1.346.707-.09 1.112-.131 1.8.058 4.638-.363 8.98-1.199 13.357-1.479 3.731-.239 4.502-1.986 3.707-5.534.129-1.351.19-2.338.566-3.486 2.366-5.486 4.416-10.81 6.618-16.481.234-1.08.317-1.813.581-2.551.181-.005.519-.136.852-.028.908-.498 1.483-1.104 2.469-1.838 2.151.608 4.994.98 5.38 2.16.617 1.88.408 5.255-.862 6.325-5.91 4.979-7.575 11.2-6.889 18.461.018.625.035 1.249-.12 2.587-4.28 5.315-.436 9.413.65 13.686z\"\n        />\n        <path\n            fill=\"#DCDBDC\"\n            d=\"M1127.428 268.349c.632-.125 1.264-.25 2.516-.365 1.612.723 2.604 1.437 3.596 2.152-.534.963-1.068 1.926-2.033 3.31-1.3 2.841-2.17 5.262-3.266 7.974-1.285 2.7-2.345 5.109-3.625 7.632-.453.369-.573.67-.936.978-1.643-.52-2.926-1.002-4.18-1.739-.056-.582-.14-.91-.063-1.512-1.072-5.131-2.305-9.99-3.539-14.847 0 0 .086.053.452.03 3.937-1.22 7.508-2.417 11.078-3.613z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1098.393 270.79c-1.018-7.208.647-13.428 6.557-18.407 1.27-1.07 1.48-4.444.863-6.326-.387-1.178-3.23-1.551-5.724-2.236-1.221.053-1.688.056-2.098-.3 3.334-3.848 6.642-2.92 9.632-.12 2.42 2.268 2.026 8.687-.843 10.928-4.429 3.46-5.62 8.146-6.332 12.518 3.708 0 7.108 0 10.288.297-2.056.861-3.893 1.424-5.73 1.987-2.094.535-4.188 1.07-6.613 1.659z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M1098.866 287.29c-1.36-4.446-5.205-8.544-.861-13.395 3.462-.755 6.687-1.262 10.38-1.356.407 1.145.346 1.878-.128 2.553-2.38.066-4.436-.12-6.287.41-1.403.402-3.753 2.019-3.613 2.574 1.151 4.57 2.786 9.017 4.346 13.715l3.96-6.936c-.215 1.466-.432 2.932-.685 5.081-.333 3.096-.707 5.44-4.004 5.235-.945-2.569-1.889-5.138-3.108-7.88z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M1106.754 284.552c-1.246 2.327-2.402 4.35-4.051 7.239-1.56-4.698-3.195-9.146-4.346-13.715-.14-.555 2.21-2.172 3.613-2.573 1.851-.53 3.907-.345 6.31-.085.548.792.659 1.201.77 1.61 0 0-.106-.236-.57-.16-.827 2.091-1.189 4.107-1.55 6.123-.029.42-.057.84-.176 1.561z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1138.355 224.192c2.835 10.342 7.939 20.35 4.703 31.584-.209.724-.844 1.325-1.806 1.968-.525-.016-.877-.37-.688-.712 2.424-7.016 2.155-13.54-.318-20.179-1.793-4.817-2.896-9.892-4.053-14.73.89.77 1.526 1.42 2.162 2.069z\"\n        />\n        <path\n            fill=\"#131211\"\n            d=\"M1101.833 295.518c3.438-.143 3.812-2.486 4.23-5.198.61-.016 1.1.268 1.855.656-1.012 4.456-2.292 8.807-3.572 13.159l-2.654-.345c0-2.642 0-5.283.14-8.272z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1115.504 271.94c1.628 4.85 2.861 9.708 3.545 14.764-1.055.064-1.562-.071-2.07-.206 0 0 .026-.005.055-.356-.395-1.284-.82-2.217-1.244-3.15a101.97 101.97 0 0 0-3.613-1.034c2.163-2.066 3.816-4.251 1.79-7.636-.249-.415.731-1.564 1.537-2.382z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1124.835 288.938c1.06-2.41 2.12-4.818 3.671-7.563 1.11-.692 1.729-1.048 2.348-1.403.226.022.453.044 1.019.114-1.09 3.335-2.52 6.62-4.496 9.751a65.528 65.528 0 0 1-2.542-.9z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1156.027 292.567c-.835 4.928 3.926 5.351 5.926 8.216-5.01.031-7.557-2.858-7.616-8.913.615-.103 1.057.2 1.69.697z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1129.92 262.87c-2.309.824-4.618 1.648-7.338 2.251-.465-.383-.517-.544-.51-1.039 2.522-1.02 4.982-1.707 7.537-2.096.166.493.238.689.31.884z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1127.006 268.204c-3.148 1.341-6.72 2.538-10.682 3.714 2.018-4.463 6.646-2.754 10.682-3.714z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1105.278 269.393c1.565-.825 3.402-1.388 5.825-2.214 1.311-.36 2.036-.454 3.088-.352.535.345.742.493.95.64-3.197.73-6.394 1.46-9.863 1.926zM1138.58 223.993c-.861-.45-1.497-1.1-2.484-2.18-.78-1.417-1.21-2.403-1.64-3.389.628-.089 1.256-.178 2.362-.28 1.361 1.205 2.245 2.423 3.145 3.982-.374.784-.765 1.226-1.382 1.867z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1130.886 279.57c-.651.757-1.27 1.113-2.154 1.513.605-2.375 1.475-4.796 2.682-7.318.06 1.733-.218 3.568-.528 5.805z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M1107.256 282.814c.035-1.839.397-3.855 1.095-5.931-.032 1.877-.4 3.816-1.095 5.931z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1133.84 270.058c-1.292-.637-2.284-1.351-3.614-2.235.787-.614 1.913-1.058 3.038-1.502.293 1.22.585 2.44.576 3.737z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1115.474 267.377c-.54-.057-.748-.205-1.18-.862 1.744-.873 3.714-1.238 5.486-1.314-1.026.978-1.854 1.666-2.682 2.355-.43-.09-.86-.18-1.624-.179z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1109.418 276.985c-.48-.366-.59-.775-.724-1.51.037-1.058.098-1.791.098-2.9 3.762.433 2.297 2.418.626 4.41z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1117.359 267.753c.567-.886 1.395-1.574 2.772-2.575.994-.463 1.437-.613 1.881-.763l.235.727a18.814 18.814 0 0 1-4.888 2.611z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1140.902 257.906c-1.304 1.141-2.783 2.106-4.964 3.034-.928-.101-1.156-.167-1.102-.495.542-.694.803-1.125 1.38-1.553.804-.334 1.293-.672 2.086-1.05.893-.183 1.483-.325 2.073-.468l.527.532z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1146.859 257.207c.403.972.552 2.151.487 3.56-.39-.965-.565-2.16-.487-3.56z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1130.297 262.872c-.45-.197-.522-.393-.316-1.095 1.693-.705 3.106-.902 4.4-.834-.174.453-.23.64-.284.827-1.14.368-2.282.735-3.8 1.102z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1275.894 264.458c-.358.539-1.004.939-1.955 1.257.352-.52 1.01-.958 1.955-1.257z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1142.122 283.88c-.516-.335-.785-.825-1.035-1.606.44.29.86.871 1.035 1.606z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1209.001 298.563c.26-.594.844-1.099 1.734-1.56-.266.578-.838 1.113-1.734 1.56zM1296.872 256.512c.593-.087 1.311.116 2.173.574-.587.076-1.318-.104-2.173-.574z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1134.378 261.838c-.226-.255-.171-.442.012-.877.128-.248.165-.254.165-.254.227.066.455.132 1.034.237-.075.348-.502.655-1.21.894z\"\n        />\n        <path\n            fill=\"#131211\"\n            d=\"M1108.937 289.202c.094.218-.106.553-.543 1.066-.076-.197.087-.574.543-1.066z\"\n        />\n        <path\n            fill=\"#FEFEFE\"\n            d=\"M1236.664 291.826c.012.059.082-.068.105-.098.023-.03-.116.039-.105.098z\"\n        />\n        <path\n            fill=\"#131211\"\n            d=\"M1118.983 362.01c-.196.336-.588.181-.787-.285-.191-1.23-.184-1.992-.176-2.755.7.405 1.4.81 2.25 1.5-.263.592-.676.898-1.287 1.54zM1126.942 368.694c-.651-.069-1.355-.49-2.202-1.21.621.085 1.385.471 2.202 1.21z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M1027.092 1471.65c-8.822-16.177 8.197-30.672 20.44-31.546 10.1-.722 20.23 9.624 20.258 19.786.026 9.369-3.655 17.027-12.052 20.264-5.25 2.024-12.097 1.308-17.87.103-4.172-.872-8.751-3.368-10.776-8.607z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1193.7 1441.513c7.693-.788 10.449.558 12.595 6.858-3.374 0-6.36-.007-9.345.002-3.306.01-6.62.165-9.914-.02-1.053-.06-2.055-1-3.08-1.539.763-.964 1.332-2.342 2.328-2.807 2.225-1.04 4.663-1.624 7.415-2.494z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"m888.004 1442.996 3.901 4.157c-1.574.587-3.134 1.63-4.724 1.676-4.968.142-9.951-.001-14.918-.253-1.111-.056-2.178-1.005-3.265-1.543.822-1.095 1.418-2.699 2.512-3.184 2.532-1.126 5.305-1.712 8.202-2.086-1.917 1.492-4.057 2.553-6.196 3.614l.117.961h15.156l-.785-3.342z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M888.002 1442.998c.253 1.067.504 2.137.787 3.34h-15.156l-.117-.96c2.139-1.062 4.279-2.123 6.554-3.479.785-.372 1.434-.448 2.552-.161 2.106.662 3.744.96 5.382 1.258l-.002.002z\"\n        />\n        <path\n            fill=\"#A2A2A1\"\n            d=\"M887.936 1442.616c-1.57.082-3.208-.216-4.99-.835 1.545-.062 3.234.197 4.99.835z\"\n        />\n        <path\n            fill=\"#902E2C\"\n            d=\"M852.926 102.73c8.284 1.368 16.748 2.262 24.656 4.853 9.072 2.972 17.767 7.211 26.383 11.4 3.114 1.514 5.27 4.917 8.316 6.674 4.543 2.62 9.467 4.587 14.264 6.754 10.732 4.848 21.545 9.523 32.212 14.512 7.058 3.301 13.982 6.908 20.829 10.63 2.056 1.118 3.551 3.22 5.481 4.629 2.635 1.923 5.256 4.03 8.205 5.326 10.343 4.543 20.927 8.547 31.2 13.235 3.966 1.809 7.328 4.928 10.998 7.401 6.174 4.16 12.365 8.295 18.569 12.41 1.51 1.001 3.098 1.887 4.84 3.12-1.268 4.024-3.746 4.134-6.379 1.78-2.127-1.902-3.386-1.06-5.996-.515-8.643 1.805-15.527 8.384-25.83 6.59-10.745-1.87-22.165.456-33.28.29-12.202-.183-24.523.367-36.45-3.264-1.721-.524-3.63-.968-5.377-.772-7.823.877-11.579-5.816-17.225-8.962-6.865-3.825-13.808-7.516-20.575-11.508-1.563-.922-2.918-2.647-3.732-4.313-3.776-7.733-7.116-15.683-11.02-23.347-3.675-7.21-7.568-14.348-11.918-21.164-3.157-4.949-7.915-8.938-10.717-14.037-4.737-8.618-13.023-13.298-20.133-19.443 1.13-.866 1.871-1.434 2.679-2.279z\"\n        />\n        <path\n            fill=\"#8E2D2B\"\n            d=\"M831.983 100.944c1.395.07 2.79.139 4.583.338.707 1.24 1.637 2.737 1.225 3.4-4.438 7.138 2.562 10.887 4.345 16.22 1.715 5.128 1.878 10.79 2.467 16.246.033.311-2.489 1.507-3.397 1.164-1.25-.47-2.513-1.843-3.043-3.13-3.855-9.349-12.997-14.729-17.564-23.576-.854-1.655-3.436-2.388-5.158-3.634-3.255-2.356-6.464-4.777-9.693-7.17l.466-1.563c1.803-.452 3.606-.903 5.83-1.445 5.994.74 11.567 1.568 17.609 2.8 1.09.385 1.71.368 2.33.35z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M940.993 215.05c-1.56-.905-3.12-1.81-4.677-3.298.313-1.018.622-1.453.93-1.888 28.394 5.836 57.175 5.304 85.905 4.792 5.377-.096 10.878-2.378 16.012-4.428 5.213-2.081 10.144-2.512 15.506-.958 2.898.84 6.023.899 9.032 1.865-2.751 1.204-6.133 3.19-8.102 2.242-5.06-2.435-9.756-1.834-14.274.147-6.795 2.978-13.635 4.465-21.089 4.06-5.943-.323-11.934.225-18.332.15-1.364-.108-2.3.022-3.661.03-18.761-.89-37.096-1.658-55.734-2.473-.708-.111-1.112-.176-1.516-.24z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1002.332 217.97c5.97-.161 11.961-.709 17.904-.386 7.454.405 14.294-1.082 21.089-4.06 4.518-1.98 9.214-2.582 14.274-.147 1.97.948 5.35-1.038 8.33-1.968 1.224-1.412 2.207-2.545 3.274-4.003 1.562-1.867 2.965-3.488 4.535-4.928 1.801-1.654 3.683-3.242 5.665-4.67.903-.652 2.398-.57 3.168-1.3 5.965-5.664 12.189-5.35 19.005-1.546 3.206 1.79 6.886 2.732 10.065 4.433-5.91-1.507-11.51-3.455-17.169-5.215-1.195-.372-2.952-.575-3.86.03-6.172 4.117-14.73 4.49-17.926 13.395-2.387 6.65-10.426 10.062-15.453 7.64-4.727-2.276-9.192-2.04-13.37.261-12.817 7.063-26.478 3.958-39.88 3.595.14-.534.247-.832.35-1.131z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M937.208 209.858c-.27.44-.58.876-.992 1.555-1.093-.296-2.084-.835-3.047-1.755.37-.476.714-.572 1.575-.817.516-.149.926-.062 1.212.244.569.46.853.615 1.137.77 0 0 .077-.003.115.003z\"\n        />\n        <path fill=\"#8E2D2B\" d=\"M804.467 98.442c.062-.037-.061.037 0 0z\" />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M936.997 209.628c-.188.072-.472-.083-.844-.473.257-.189.535-.028.844.473z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M463.377 1448.427c-2.03-.082-3.608-.163-6.315-.304 3.825-5.973 9.317-6.128 14.12-6.878 4.282-.669 8.098.973 10.234 7.182h-18.039z\"\n        />\n        <path\n            fill=\"#DCDBDC\"\n            d=\"M342.806 1444.864c1.794-.605 3.587-1.21 5.998-1.874 1.274-.497 1.932-.936 2.59-1.374 4.292-1.103 8.14-.283 11.607 3.307.113 1.498.12 2.338.127 3.178-6.503.076-13.006.152-19.876-.27-.394-1.32-.42-2.144-.446-2.967z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M363.47 1448.144c-.349-.883-.356-1.723-.228-2.963.28.736.425 1.871.228 2.963zM342.456 1444.887c.376.8.402 1.623.377 2.86-2.6-.187-2.436-1.352-.377-2.86zM351.085 1441.456c-.349.598-1.007 1.037-1.959 1.369.354-.58 1.002-1.055 1.96-1.369z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M1117.765 358.817c.247.916.24 1.679.238 2.823-1.057.315-2.12.248-3.686-.228-2.455-.194-4.409.022-6.362.237-1.174.947-2.347 1.893-4.068 3.1-1.031.265-1.516.269-2.026-.126.182-1.903.39-3.409.677-5.311.065-2.283.05-4.169.165-6.441-2.835-5.088-3.783-10.142-2.228-15.466.471.234.646.353.821.472 1.034 1.974 2.068 3.948 3.465 6.461 1.743 2.533 3.12 4.525 4.499 6.517 1.029.698 2.058 1.395 3.416 2.528 1.024 1.48 1.72 2.525 2.416 3.57.806.57 1.612 1.14 2.673 1.864z\"\n        />\n        <path\n            fill=\"#ADADAD\"\n            d=\"M1101.557 337.844c-.436-.086-.61-.205-1.092-.408-.306-.084-.242-.095-.242-.095-.668-4.808-1.337-9.616-1.879-14.765.913-.926 1.698-1.51 3.02-2.157 1.107.777 1.677 1.615 2.11 2.809.134 1.967.406 3.578.678 5.382 0 .452.005.71-.22 1.19-.009 2.012.215 3.8.487 5.917.125.987.202 1.645.278 2.304-.96-.07-1.919-.14-3.14-.177z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1104.165 329.579c-.008-.258-.012-.517.212-1.322-.104-2.16-.435-3.772-.765-5.385-.57-.838-1.141-1.676-2.023-2.754.039-2.051.389-3.861.739-5.672l1.852.154c2.06 7.542 4.44 15.055.875 23.238-.434-.476-.51-1.134-.454-2.59-.056-2.42-.246-4.045-.436-5.67z\"\n        />\n        <path\n            fill=\"#100F0E\"\n            d=\"M1124.616 289.052c.884.134 1.55.382 2.442.92-1.313 3.42-2.853 6.55-4.651 9.923-.964-.103-1.67-.448-2.654-.808-.48-1.88-.683-3.743-.448-5.966 2.509-.239 4.921.426 4.735-3.053.003-.346.123-.647.576-1.016z\"\n        />\n        <path\n            fill=\"#131211\"\n            d=\"M1109.23 350.435c-1.348-1.572-2.726-3.564-4.187-5.895.977-.684 2.036-1.03 3.669-1.564.18 2.613.334 4.825.517 7.459z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1123.68 290.03c.546 3.517-1.866 2.852-4.33 2.625-.392-.109-.364-.117-.335-.634.172-1.503.314-2.49.457-3.475 1.282.482 2.565.964 4.208 1.484z\"\n        />\n        <path\n            fill=\"#100F0E\"\n            d=\"M1119.5 288.291c-.17 1.24-.313 2.227-.473 3.72-.715-1.22-1.415-2.947-2.08-5.093.54-.285 1.047-.15 1.94.06.472.403.557.73.613 1.313z\"\n        />\n        <path\n            fill=\"#131211\"\n            d=\"M1115.078 356.605c-.682-.697-1.378-1.742-2.075-3.16.686.69 1.373 1.752 2.075 3.16z\"\n        />\n        <path\n            fill=\"#100F0E\"\n            d=\"M1115.84 283.373c.375.552.799 1.485 1.197 2.781-.4-.557-.775-1.478-1.198-2.78z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M831.804 100.725c-.441.237-1.062.254-1.73.026.485-.245 1.018-.245 1.73-.026z\"\n        />\n        <path\n            fill=\"#FEFEFE\"\n            d=\"M890.733 1294.275c.728-.164 1.24-.115 1.753-.067l-.126.73c-.614-.15-1.228-.3-1.627-.663zM897.555 1290.388c.396.013.619.23.842.447-.338-.08-.676-.16-.842-.447z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1102.46 359.709c-.208 1.505-.417 3.01-.756 5.261a6770.77 6770.77 0 0 0-1.697 10.062c-.137 1.943-.274 3.885-.102 5.997.007.64-.296 1.112-.6 1.862-3.373 5.56-6.747 10.84-10.82 16.188-2.968.226-6.717 2.179-4.25-2.915 4.134 2.044 4.086-1.293 5.243-3.628.652-1.348 1.038-2.45 1.728-3.733 2.67-6.775 5.036-13.366 7.502-20.257.145-.717.189-1.135.528-1.76 1.272-2.495 2.248-4.786 3.224-7.077z\"\n        />\n        <path\n            fill=\"#131211\"\n            d=\"M1100.386 374.97c.143-3.043.665-6.15 1.344-9.602.64-.35 1.126-.354 1.974-.347-.736 3.302-1.837 6.594-3.318 9.948zM1108.382 361.75a22.38 22.38 0 0 1 5.546-.427c-1.631.39-3.375.458-5.546.426z\"\n        />\n        <path\n            fill=\"#FEFEFE\"\n            d=\"M1114.015 1019.019c-.115.034-.245.05-.213.008.162-.057.197-.026.213-.008z\"\n        />\n        <path\n            fill=\"#FBFBFB\"\n            d=\"M1090.902 388.986c-.386 1.1-.772 2.202-1.534 3.165-1.38-1.137-2.384-2.138-3.578-3.29-.416-.385-.6-.65-.752-1.22-.728-.317-1.443-.358-2.504-.26-1.065.33-1.784.523-2.647.427-2.343 3.287-4.544 6.862-6.87 10.698-.83.917-1.532 1.573-2.564 2.183-.807.617-1.282 1.282-1.73 2.004.027.057-.086 0-.367-.073-.64.067-1 .208-1.489.009.05-2.012.098-3.712.435-5.354.654-3.191 1.8-6.441-2.541-8.506-1.146-.734-2.066-1.23-2.998-1.908-.013-.18.045-.54.127-.91-2.424-3.816-5.353-6.103-10.272-4.01-1.427-.067-2.464-.145-3.623-.566-2.442-.087-4.762.169-7.464.493-1.409.04-2.436.01-3.56-.384-4.35-.111-8.653-.183-12.845.468-7.42 1.153-14.782 2.699-22.143 4.202-1.079.221-2.02 1.114-3.365 1.807-1.04.227-1.741.343-2.859.229-2.915-.105-5.413.022-8.29.077-1.392-.19-2.407-.31-3.496-.803-6.907-1.997-13.863-3.105-19.855-7.317-6.865-4.825-14.576-6.315-22.692-3.988-1.876.538-3.334 2.53-5.033 4.05-.047.197.248.476.003.656-1.082 1.05-1.92 1.922-3.09 2.765-.846.638-1.36 1.305-2.05 2.024-.496.168-.812.284-1.255.158-.544.385-.961 1.01-1.435 1.665-.057.029-.122.137-.472-.029a130.26 130.26 0 0 0-11.824 6.085c-.552.32-.593 1.52-.93 2.548-.832.622-1.606 1.008-2.558 1.197-2.041.759-3.905 1.714-6.09 2.665-1.105-.33-1.888-.654-2.72-1.335-.85-.587-1.653-.818-2.715-1.124-.575-.244-.89-.414-1.241-.923-1.593-1.543-3.147-2.751-4.71-3.947-8.132-6.219-18.914-8.452-25.548-16.983-.449-.577-1.84-.421-3.016-.703-.5-.291-.683-.552-.753-1.239-2.289-3.672-3.933-3.541-4.82.767-.01.198-.192.548-.54.522-3.085 3.686-5.82 7.397-8.591 11.067-.035-.043.05.027-.29.031-.84.919-1.339 1.833-2.116 2.877-1.038.802-1.798 1.474-2.904 2.133-2.193 1.903-4.039 3.822-6.082 5.986-1.39 1.427-2.583 2.609-4.121 3.805-1.399 1.058-2.451 2.1-3.757 3.334a69.68 69.68 0 0 1-2.468 1.433c-4.837 2.347-9.648 4.75-14.526 7.01-1.662.77-3.493 1.179-5.246 1.752l-.946-1.232c.908-1.341 1.648-3.682 2.751-3.868 10.558-1.78 14.954-10.089 19.865-17.984 1.306-2.1 2.8-4.26 4.7-5.778 3.655-2.922 3.19-6.764 2.84-10.514-.288-3.094-4.07-3.88-8.195-2.184-1.975.811-5.066 2.267-6.056 1.464-2.683-2.177-5.136-4.72-4.835-9.19.498-7.402 1.1-15.45-5.475-20.782-3.131-2.54-7.486-4.277-11.506-4.856-6.883-.992-13.965-.524-20.911-1.197-3.524-.341-7.562-.98-10.283-2.967-9.294-6.79-16.286-15.796-22.278-25.814 6.867 1.325 14.018.959 19.142 7.14 6.164 7.434 14.317 9.132 23.93 8.915 10.694-.242 14.635-6.354 18.266-14.737 4.08-9.416 2.829-18.432-2.478-26.082-3.243-4.676-9.614-7.247-14.73-10.533-3.086-1.983-6.458-3.523-10.944-5.928 2.882-1.509 4.225-2.735 5.68-2.885 7.366-.761 12.528-5.563 18.27-9.4 5.774-3.86 12.251-4.712 18.56-1.964 10.175 4.433 20.424 8.881 30.016 14.41 8.293 4.78 16.159 7.08 25.455 3.54 7.07-2.69 14.422-4.643 21.645-6.932 4.178-1.325 3.432-4.712 2.28-7.301-.385-.863-3.792-.46-5.82-.494-3.877-.065-7.857.526-11.61-.16-5.844-1.07-11.738-2.47-17.234-4.67-5.657-2.265-7.621-7.278-6.134-13.119 1.373-5.391 3.817-9.8 8.599-13.447 5.878-4.483 10.637-10.419 15.99-15.613 2.98-2.89 6.076-5.684 9.31-8.284 6.361-5.115 9.587-4.391 16.845.19 8.063 5.09 16.88 8.989 25.562 13.153.598-.188 1.002-.123 1.845.312 2.15.926 3.828 1.79 5.58 1.982 6.87.752 13.754 1.645 20.65 1.828 10.048.266 20.11-.035 30.531-.077 1.093.009 1.823 0 2.552-.008 13.428.124 27.089 3.229 39.906-3.834 4.178-2.302 8.643-2.537 13.37-.26 5.027 2.421 13.066-.99 15.453-7.641 3.196-8.905 11.754-9.278 17.927-13.395.907-.605 2.664-.402 3.86-.03 5.658 1.76 11.259 3.708 17.262 5.547.8.34 1.217.722 1.954 1.577 1.297.908 2.274 1.344 3.252 1.78 0 0 .042-.09.089.28 4.318 2.828 8.589 5.288 12.86 7.748.274.163.52.361.919 1.114 1.163 1.623 2.147 2.726 3.13 3.83.67.696 1.338 1.392 2.263 2.228.684 1.126 1.113 2.112 1.64 3.408 1.508 5.27 2.61 10.344 4.404 15.161 2.473 6.639 2.742 13.163.318 20.179-.78.485-1.37.627-2.443.61-1.063.31-1.642.778-2.221 1.247-.261.431-.522.862-1.064 1.556-.28.262-.318.268-.326.25-1.423.18-2.836.377-4.622.784-2.834.896-5.294 1.583-7.815 2.603-.505.483-.948.633-1.744.807-2.321.388-4.29.753-6.362 1.429-.828.407-1.553.502-2.644.563-3.767-.034-7.167-.034-10.875-.034.712-4.372 1.903-9.058 6.332-12.518 2.87-2.241 3.263-8.66.843-10.928-2.99-2.8-6.298-3.728-9.76.403-.2 1.037-.217 1.43-.233 1.824 0 0-.338.13-.694-.136-3.871 1.711-4.103 5.028-3.96 8.824-.14.72-.25 1.126-.675 1.64-.506.89-.7 1.67-.995 2.73-.495.962-.888 1.646-1.658 2.371-.922 2.856-1.466 5.67-2.192 8.794-.953.842-1.723 1.375-2.582 1.536-2.074.137-4.058.646-6.343 1.247-.717.144-1.133.195-1.738.004-1.091.216-1.994.674-3.207 1.214-.736.1-1.163.116-1.748-.114-1.073.09-1.988.425-3.221.847-.756.127-1.193.169-1.874-.04a1319.543 1319.543 0 0 0-40.216 5.693c-1.953.307-3.757 1.556-5.937 2.474-.736.149-1.166.192-1.875-.056-2.418-.38-4.588-.75-6.688-.508-17.47 2.014-34.929 4.14-52.655 6.147-.609-.228-.953-.37-1.388-.867-6.456-1.715-12.77-3.802-19.197-4.238-7.116-.482-14.343.44-21.5 1.023-1.19.097-2.268 1.582-3.626 2.621-.524.67-.82 1.146-1.114 1.62 0 0-.396.09-.847.056-.87.013-1.29.06-1.953-.073-1.414.729-2.586 1.637-3.886 2.807-.168.627-.208.993-.248 1.36-.851.71-1.702 1.421-2.966 1.943-1.176.515-1.939 1.218-2.938 2.152-.508.795-.78 1.36-1.052 1.924-.314.23-.627.46-1.407.583-2.818.463-4.842 1.253-3.465 4.338-.75 1.07-1.5 2.139-2.277 3.532-.027.324.038.36-.297.332-2.367 1.431-4.4 2.89-6.73 4.262-.684.058-1.071.203-1.792.308-1.164.528-1.993 1.095-3.17 1.773-1.074.128-1.8.145-2.815-.134-5.619-.044-11.333-2.35-16.398 2.15-2.835 1.801-5.856 3.094-7.644 5.36-2.55 3.232-1.586 7.396 1.17 8.58 3.355 1.443 6.408-.44 8.012-4.85.026.076-.083-.043.29.08 2.2-.546 4.03-1.216 6.293-1.939 2.481-.037 4.526-.022 6.775.275 2.089-.497 3.974-1.276 6.17-2.165.749-.132 1.187-.155 1.849.127 2.477.126 4.793-.478 6.973-.157 12.453 1.83 24.87 3.898 37.308 5.832 1.468.228 2.988.128 4.807.147.746.053 1.168.14 1.663.57 2.86 1.63 5.644 2.92 8.433 4.202 11.897 5.466 23.786 10.948 35.695 16.387 8.173 3.732 16.374 7.404 24.74 11.406 1.498.93 2.808 1.575 4.137 2.18 13.429 6.119 27.928 4.957 42.076 5.978 3.256.235 6.628-1.144 10.322-1.821 1.126.021 1.877.083 2.844.427 1.631.087 3.221.245 4.433-.358 9.39-4.673 18.714-9.478 28.042-14.276 3.281-1.687 4.754.294 5.24 2.938.338 1.84-.387 3.865-.56 5.814-.19 2.159-.292 4.325-.433 6.489-.044.418-.088.836-.55 1.67-2.252 4.804-4.199 9.149-5.871 13.597-.806 2.142-1.095 4.478-1.618 6.726M907.205 221.931c-5.08 1.967-10.217 3.805-15.226 5.939-4.868 2.073-9.752 4.2-14.317 6.842-1.455.843-1.909 3.413-2.82 5.192 1.78.125 3.687.718 5.32.282 4.16-1.11 8.156-2.829 12.31-3.961 1.077-.293 3.263.325 3.632 1.126 2.031 4.408 4.3 3.51 7.352 1.084 1.973-1.567 4.469-2.476 6.73-3.68.814 2.404 1.637 4.807 2.43 7.218.1.306.016.668.075.993 1.2 6.653 7.96 11.32 14.415 9.958 7.013-1.48 12.465-7.11 13.77-14.216 1.141-6.224 3.072-7.52 9.31-7.003 2.588.215 5.244-.374 7.869-.598l.445-1.87c-1.44-1.104-2.728-2.577-4.348-3.249-6.748-2.796-13.745-5.027-20.364-8.086-6.46-2.987-12.42-2.83-18.549.582-2.315 1.288-4.876 2.134-8.034 3.447m196.194-20.503-6.445 1.515c1.171 1.927 2.034 4.172 3.6 5.693 1.606 1.56 3.837 2.54 5.907 3.542 3.33 1.612 4.99.439 4.83-3.315-.195-4.577-3.857-5.735-7.892-7.435z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1127.81 210.779c-4.191-2.127-8.462-4.587-12.808-7.374.115-.38.305-.431.79-.512 4.176 2.498 8.057 5.025 12.018 7.886zM1114.848 202.76c-.885-.112-1.862-.548-2.915-1.314.89.11 1.856.55 2.915 1.314z\"\n        />\n        <path\n            fill=\"#902C2A\"\n            d=\"M696.125 1271.706c-.213-.514-.161-.86-.02-1.726.93-.088 1.77.343 3.562 1.263-1.728.332-2.503.48-3.542.463z\"\n        />\n        <path\n            fill=\"#151515\"\n            d=\"M244.007 1410.008c1.576-1.34 2.98-3.003 4.765-3.938 1.418-.743 3.302-.594 4.98-.842-.152 1.764.373 4.206-.585 5.16-2.655 2.644-5.832 4.818-9.012 6.849-.994.635-2.656.225-4.013.294.44-1.276.712-2.648 1.367-3.802.633-1.116 1.66-2.008 2.51-3.357-.003-.359-.019-.372-.012-.364z\"\n        />\n        <path\n            fill=\"#FEFEFE\"\n            d=\"M1262.715 674.038c-.403-.498-.482-.94-.566-1.722.415-2.021.833-3.705 1.521-6.473 1.665 3.858 3.008 6.968 4.677 10.186.374.793.422 1.48.415 2.509-1.944-1.254-3.834-2.849-6.047-4.5z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1269.213 680.212c.495-.278.877-.25 1.544-.176-.138.784-.56 1.521-.982 2.259-.225-.593-.45-1.185-.562-2.083z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1131.958 215.696c-1.002-.744-1.986-1.847-2.999-3.286.986.753 2.002 1.84 2.999 3.286z\"\n        />\n        <path\n            fill=\"#8F2D2A\"\n            d=\"M1270.89 614.379c.725.154 1.422.685 2.203 1.578-.267 1.154-.617 1.946-1.577 4.116-.336-2.733-.495-4.025-.626-5.694z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1268.689 669.087c-.63-.254-1.159-.855-1.691-1.77.595.265 1.194.843 1.691 1.77z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M211.368 1008.901c.63.276 1.13.882 1.594 1.797-.599-.283-1.16-.875-1.594-1.797z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1286.113 727.962c-.1-.264-.076-.763-.079-1.634.05.218.126.809.079 1.634z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M462.989 306.92c-1.456 1.19-2.79 2.107-4.316 3.298a43.31 43.31 0 0 1-3.297 2.837c-.761-.555-1.25-1.26-2.081-2.024 1.837-2.397 3.588-5.61 6.27-6.929 15.053-7.405 31.563-9.564 47.88-11.982 18-2.667 35.628-.462 52.701 6.036 12.339 4.696 25.222 8.23 37.027 13.992 15.908 7.766 31.159 16.931 46.41 25.97 9.383 5.56 18.24 12.003 27.627 18.224 2.748 2.11 5.168 4.094 7.665 5.974 7.54 5.678 15.135 11.282 22.65 16.994 1.835 1.396 3.64 2.927 5.107 4.69 2.718 3.264 4.712 7.196 9.482 8.189.868.18 1.444 1.761 3.032 3.849-2.535-.417-3.698-.33-4.569-.792-15.153-8.055-28.246-18.914-41.83-29.292-13.352-10.201-24.256-23.592-40.027-30.78-11.43-5.21-22.304-11.626-33.564-17.226-5.426-2.699-11.19-4.71-16.761-7.126-2.263-.982-4.323-2.5-6.643-3.266-5.127-1.692-10.363-3.049-15.549-4.564-5.037-1.472-10.086-2.908-15.094-4.472-15.796-4.935-31.826-3.374-47.847-1.744-5.914.601-11.999.8-17.64 2.441-5.738 1.67-11.026 4.89-16.633 7.704zM1122.003 475.99c-5.019.123-1.928-4.265-3.265-5.895-2.197.492-4.88 1.965-6.249 1.171-1.585-.918-2.014-3.83-2.374-5.916 1.664 1.164 2.759 2.365 3.853 3.567l1.725-.872c-2.484-7.234-4.926-14.484-7.525-21.677-.235-.65-1.486-.934-2.266-1.388-.474-.898-1.584-2.133-1.317-2.637 1.468-2.765 3.274-5.35 5.558-8.02 2.776 3.258 6.01 5.87 3.45 10.92-.87 1.72 1.891 5.28 3.105 8.267.317.595.524.922.633 1.598.34 1.945.778 3.54 1.238 5.43.085.68.147 1.067.002 1.647.442 1.528 1.092 2.863 1.784 4.462.398 1.203.754 2.142 1 3.462.142 2.214.395 4.047.648 5.881zM1081.907 409.79c-1.607 1.346-3.213 3.727-4.82 3.728-1.405 0-2.812-2.677-4.857-4.85-1.645.888-4.204 2.54-6.97 3.694-3.426 1.428-7.014 2.468-10.55 3.625-1.525.5-3.153.726-4.631 1.33-4.402 1.795-14.136.358-17.142-3.085-1.046-1.197-.924-3.413-1.335-5.164 1.425-.312 2.85-.624 4.028-.464-4.15 2.475-2.004 4.321.268 5.164 6.236 2.313 12.538 2.91 18.817-1.238 2.02-.09 3.637-.206 5.463-.1 3.872-2.204 7.533-4.632 11.44-7.167.656-.45 1.064-.795 1.804-1.138.775-.687 1.22-1.375 1.869-2.24.7-.375 1.197-.574 1.813-.487.44 1.757.763 3.23.902 4.914-.308.562-.432.912-.862 1.402-.905 6.775 3.138 1.26 4.763 2.075z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1122.08 476.357c-.33-2.2-.583-4.034-.377-6.322.438-3.682.419-6.91.399-10.138 1.936 1.14 4.09 2.034 5.733 3.5 1.165 1.039 1.642 2.85 2.556 4.56l-4.687.264c.176 1.546-.182 3.48.614 4.575 4.5 6.193 1.495 13.26 3.727 19.66l-2.389.686c-1.65-4.562-3.302-9.124-5.212-13.932-.27-.992-.279-1.74-.365-2.853z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M1073.092 404.124c-.41.344-.818.688-1.815.925-1.272-.857-1.956-1.606-2.64-2.356 0 0 .113.057.46.115.794-.652 1.24-1.363 1.686-2.073.702-.656 1.404-1.312 2.582-2.2 1.919-1.626 3.362-3.02 5.143-4.469.572-.836.807-1.618 1.118-2.756.185-1.309.295-2.261.404-3.214.72-.192 1.439-.384 2.702-.412.741.305.937.446 1.19 1.014.255 1.846.453 3.265.594 5.014-.219.983-.38 1.635-.542 2.286-2.206 5.26 1.543 3.307 4.193 3.088-1.002 2.216-2.385 4.491-3.764 7.132.003.364-.214.074-.635-.063-.854.542-1.287 1.221-1.72 1.9 0 0-.048-.055-.4-.074-1.634-.148-2.916-.277-4.198-.407.124-.35.248-.7.919-1.295 2.312-4.435 1.895-5.499-1.384-5.166-.497.198-.994.397-2.057.749-.989.856-1.413 1.56-1.836 2.262z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M836.871 400.862c1.192-1.181 2.385-2.363 4.132-3.78 2.964-1.57 5.375-2.903 8.34-4.118.92.206 1.288.295 1.485.716a27.868 27.868 0 0 0-.66 1.714c-.4.208-.802.416-1.526.908-1.096 1.089-1.87 1.892-2.643 2.695-3.078 2.625-6.156 5.25-9.852 7.974-1.18.668-1.74 1.238-2.3 1.807 0 0-.03.307-.199.29-.582.07-.997.153-1.713.126-.947.33-1.592.77-2.236 1.21-.336.181-.672.362-1.584.574-1.163.571-1.75 1.111-2.338 1.651 0 0-.025.308-.242.336-1.934 1.211-3.652 2.394-5.37 3.577-.555-.063-1.11-.127-2.084-.26.66-1.5 1.484-3.273 2.864-4.291 2.886-2.128 6.065-3.858 9.24-6.049.853-.712 1.592-1.126 2.916-1.712 1.647-1.238 2.709-2.303 3.77-3.368zM860.977 375.004s.182-.35.594-.566c1.741-.273 3.07-.33 4.398-.388.09.326.273.587.822 1.216 3.57 3.825 6.868 7.215 10.076 10.96-.474.98-.858 1.608-1.536 2.265a9.304 9.304 0 0 1-1.422-.202 924.98 924.98 0 0 1-3.63-3.646c-5.936-4.196-7.227-4.124-11.757.432-1.368 1.376-2.58 2.906-4.238 4.239-1.02-.537-1.664-.946-2.25-1.666.057-.733.055-1.155.053-1.576 0 0-.084-.07.311-.024 3.496-2.974 6.596-5.994 10-9.016.85-.207 1.397-.412 1.943-.618-.696-.507-1.392-1.014-2.413-1.572-.535.02-.743.091-.951.162z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M912.96 397.475c.774-.386 1.548-.772 2.777-1.409 4.54-2.984 8.623-5.718 12.707-8.452 0 0 .065-.108.484-.223.68-.521.94-.929 1.2-1.337.316-.116.632-.232 1.483-.29 1.17-.226 1.805-.51 2.837-.794 2.197-.27 3.998-.54 5.713-.514-.307.645-.528.993-.75 1.34 0 0-.246-.072-.694-.023-4.876 3.762-9.305 7.474-13.733 11.186-.57.117-1.142.233-2.254.484-3.085 1.3-5.63 2.465-8.72 3.578-1.258-.215-1.97-.378-2.47-.92.616-1.128 1.018-1.877 1.42-2.626z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1116.586 453.242c-1.102-2.719-3.864-6.28-2.992-7.999 2.56-5.05-.675-7.662-3.148-11.108-1.003-1.599-1.716-3.031-2.568-4.789 1.223-3.56 2.778-2.344 4.1-.386 1.843 2.728 3.504 5.578 5.605 8.438.362.062.389.072.318.49.656 1.33 1.384 2.243 2.113 3.133 0-.024-.046-.027-.046-.027-.095 1.154-.19 2.308-.773 3.616-1.244-.185-2-.525-2.757-.865-.416 1.33-1.223 2.682-1.154 3.987.096 1.855.837 3.675 1.302 5.51z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1054.311 412.503c-5.875 4.175-12.177 3.578-18.413 1.265-2.272-.843-4.419-2.69-.2-4.83.73.02 1.144.176 2.154.559 6.12 2.938 11.048 1.06 15.924-1.395-.159 1.751-3.635 3.517.535 4.401z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M1105.94 445.416c.742.018 1.993.301 2.228.952 2.6 7.193 5.04 14.443 7.525 21.677l-1.725.872c-1.094-1.202-2.189-2.403-3.577-3.77-.54-.975-.788-1.786-1.222-3.261-1.15-3.748-2.114-6.833-3.08-9.918-.037-2.038-.074-4.077-.15-6.552z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M939.868 385.865c-.235-.416-.014-.764.671-1.402 3.24-.89 6.278-2.516 8.74-1.886 6.1 1.563 11.938 4.156 17.918 6.624.374.753.712 1.219 1.05 1.684-.97-.109-2.045.016-2.894-.365-4.704-2.111-8.884-5.253-14.8-3.751-3.136.796-6.801-.49-10.685-.904zM1014.017 393.306c-2.653.723-5.278 1.918-7.966 2.082-7.977.485-16.12 3.006-23.537-1.77 6.687-.594 13.063-.723 19.758-.813.74-.018 1.162-.074 2.003.09 3.526.284 6.634.347 9.742.41z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1001.953 392.766c-6.376.13-12.752.258-19.547.521-2.786-.054-5.151-.242-8.153-.645-2.18-.598-3.724-.98-5.267-1.361 0 0-.297-.335-.518-.365-.559-.496-.897-.962-.878-1.749 4.707.393 9.036 1.3 13.412 1.777 6.967.758 13.966 1.23 20.951 1.822z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M1055.042 404.104c.662-1.428 1.127-2.995 2.023-4.257 3.467-4.882 2.505-8.234-3.396-9.79-3.623-.954-7.462-1.092-11.43-2.139-.226-.543-.25-.983.203-.958 2.76.006 5.153-.422 7.359.04 10.42 2.18 12.07 2.856 10.704 12.043-1.315 1.496-2.32 2.878-3.622 4.205-.811.25-1.326.552-1.841.856zM914.556 401.073c2.544-1.165 5.089-2.33 8.002-3.384-.493 1.217-1.17 2.571-2.254 3.375-2.688 1.993-5.594 3.69-8.356 5.587-3.087 2.12-8.362 1.089-12.783-3.2-.044-.773-.107-.937.209-.938 5.669 2.914 10.78 4.01 15.182-1.44zM1112.768 490.09l-2.07-2.228c-.284 1.483-.472 2.462-.68 3.79-.836-.692-2.479-1.887-2.317-2.743.59-3.134-.703-7.738 5.438-7.582 1.346 3.081 2.11 5.873 2.856 8.676-.016.012-.048.036-.443.022-1.192.013-1.988.04-2.784.066zM854.659 389.44c1.283-1.459 2.495-2.99 3.863-4.365 4.53-4.556 5.821-4.628 11.429-.497-.304.62-.726 1.154-1.064 1.105-7.693-1.1-9.715-.039-13.825 6.488-.962 1.528-2.907 2.437-4.647 3.427-.083-.664.08-1.125.713-1.936 1.49-1.641 2.51-2.931 3.53-4.221z\"\n        />\n        <path\n            fill=\"#C6BBB9\"\n            d=\"M1116.012 489.991c-.763-2.791-1.527-5.583-2.465-8.65-.226-1.023-.278-1.77-.078-3.055 1.018-.844 1.784-1.15 2.55-1.457.656.825 1.312 1.65 2.049 2.81.625 3.15 1.17 5.963 1.349 9.197-.849 1.072-1.332 1.725-2.009 2.218-.595-.46-.995-.761-1.396-1.063z\"\n        />\n        <path\n            fill=\"#DCDBDC\"\n            d=\"M1092.804 413.441c.856-3.274 2.49-2.198 3.305-.62a51.948 51.948 0 0 1 3.686 9.17c.874 2.987-.96 2.934-3.397 2.007-1.408-3.43-2.465-6.801-3.594-10.557z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M1053.707 407.74c-4.807 2.816-9.736 4.695-15.521 1.716 1.382-.662 3.026-1.39 4.67-1.387 3.862.006 7.673.173 10.968-2.627.376.797.396 1.244.258 1.821-.159.13-.375.478-.375.478zM873.93 388.64c.355-.273.73-.195 1.585.06 1.042.658 1.605 1.137 2.25 1.95 3.518 1.925 6.956 3.515 10.389 5.158-.006.052.095.022.039.308.287.752.63 1.219.897 1.769-.076.083-.235.244-.235.244-5.787-1.71-11.83-3.005-14.926-9.49z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1014.328 393.149c-3.419.093-6.527.03-9.928-.618 6.118-1.412 12.528-2.24 18.839-2.727-2.475 1.304-4.85 2.266-7.226 3.228a6.931 6.931 0 0 0-1.685.117z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M925.187 397.237c4.225-3.99 8.654-7.702 13.445-11.367-2.674 3.567-5.572 7.224-8.836 10.519-.915.923-2.908.78-4.609.848z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M801.154 420.151c-.251-.428.077-.643.677-.973 2.864-.808 5.458-1.501 8.177-2.532 2.383-.59 4.64-.842 7.132-.808-.478 1.084-1.192 1.881-2.318 2.999-.833.373-1.253.427-2.03.335-1.169.185-1.98.515-2.79.846-1.181.136-2.362.272-4.236.371a18.253 18.253 0 0 0-2.913.509c-.373-.178-.745-.356-1.699-.747z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M1109.859 494.163c1.505 3.961 2.722 8.144 3.762 12.611-1.011-.876-2.278-1.932-2.592-3.22-.73-2.997-1.002-6.106-1.17-9.391zM460.714 914.02c-.76.95-1.843 1.94-3.025 2.793-.756.546-1.658.892-4.084 2.157.748-3.04 1.188-4.826 1.922-6.821 1.803.478 3.312 1.165 5.187 1.87zM853.54 549.962c-1.395 1.94-3.149 3.885-5.19 5.995-1.898-5.877-.909-7.068 5.19-5.995zM1039.998 387.978c-2.232 3.78-5.54 1.712-8.716 1-.132-.88-.044-1.198.455-1.482 2.35-.082 4.288-.2 6.413-.103.74.338 1.295.461 1.848.585zM897.02 402.932c-4.359 1.894-5.916-1.624-8.079-4.47-.086-.333.073-.494.473-.544.82-.052 1.241-.054 1.871.209 1.941 1.27 3.673 2.274 5.39 3.546.104.598.225.929.345 1.259z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M802.802 421.16c.79-.444 1.53-.626 2.628-.655.558.211.76.27.722.669-.578.758-.919 1.179-1.259 1.6-.837.19-1.673.379-3.098.818-1.672.596-2.757.942-3.841 1.288-.44.037-.882.075-1.84.113-.876-.084-1.07-.312-1.097-.68 2.578-.963 5.156-1.926 7.785-3.152z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M1016.247 393.307c2.141-1.237 4.517-2.2 7.34-3.522 1.108-.568 1.77-.775 2.275-.801-.156.18.13.563.13.563-2.13 3.795-5.755 4.068-9.745 3.76zM508.085 320.445c3.052-.245 6.194-.109 9.612.325-2.99.217-6.256.136-9.612-.325zM992.002 495.029c-.451-1.623-.752-2.927-1.174-4.555.988-.6 2.096-.874 3.522-1.229v7.515c-.817-.525-1.507-.969-2.348-1.731zM625.02 809.1c-2.234-1.635-2.256-1.76-1.331-8.831.626 2.588.984 5.463 1.33 8.832zM1105.802 452.193c1.253 2.86 2.217 5.945 3.21 9.413-1.147-2.807-2.323-5.997-3.21-9.413zM627.349 784.946c.118-1.818.586-3.69 1.266-5.853 1.283.567 2.354 1.426 3.766 2.56-1.82 1.258-3.251 2.249-5.032 3.293zM820.344 416.78c1.54-1.42 3.257-2.604 5.332-3.75.04 3.473-2.075 4.402-5.332 3.75zM780.121 426.186c2.317-.325 4.666-.248 7.452-.086-2.029 3.198-4.686 2.576-7.452.086zM542.688 866.05c-.114 1.485-.57 3.015-1.278 4.771-1.198-.326-2.142-.879-3.49-1.668 1.683-1.162 3.054-2.11 4.768-3.102z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1077.144 407.714c1.588-.01 2.87.119 4.532.29.36.428.34.812.276 1.49-1.67-.52-5.713 4.995-4.808-1.78z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M445.135 328.12c1.99-.333 3.997-.262 6.436-.142-1.62 3.421-3.972 2.623-6.436.142zM498.081 319.605c1.64-.357 3.375-.38 5.525-.266-1.534.291-3.481.445-5.525.266zM521.069 322.32c1.764-.235 3.592-.099 5.696.308-1.694.202-3.663.133-5.696-.308zM742.125 403.94c1.663-.357 3.475-.419 5.602-.268-1.608.329-3.531.446-5.602.267zM794.675 424.34c.37.341.563.569 1.13.775a9.701 9.701 0 0 1-3.663 1.048c-.18-.611-.076-.913.122-1.43.7-.283 1.385-.323 2.41-.392zM535.049 467.624c-.961-.45-1.89-1.245-2.965-2.312.986-.797 2.12-1.321 3.884-2.138-.37 1.71-.628 2.907-.92 4.45zM581.281 843.749c-.627-1.488-.977-3.228-1.309-5.358a23.039 23.039 0 0 1 1.31 5.358zM787.754 594.006c-.339 1.487-1.133 2.907-1.926 4.327l-1.387-.653c.473-1.214.945-2.428 1.684-3.766.569-.075.871-.025 1.629.092zM492.155 906.934c-.165 1.524-.656 2.968-1.146 4.412l-1.076-.103c0-1.488 0-2.977.055-4.853.65-.103 1.246.18 2.167.544zM488.976 898.681c-1.105.054-2.208-.27-3.648-.68.393-.695 1.121-1.303 1.85-1.912.6.738 1.2 1.476 1.798 2.592zM644.471 762.084c.054 1.601-.26 3.3-.906 5.19-.042-1.57.248-3.33.906-5.19zM1115.942 476.497c-.689.638-1.455.945-2.485 1.416-.493-.659-.722-1.483-.952-2.307 1.12.186 2.24.372 3.437.89zM750.064 404.336c1.44-.237 2.941-.112 4.717.267-1.37.202-3.013.148-4.717-.267zM969.053 391.599c1.476.064 3.02.445 4.758 1.108-1.434-.076-3.062-.433-4.758-1.108zM765.065 406.425c1.436-.27 2.944-.188 4.728.143-1.368.236-3.013.223-4.728-.143z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1031.326 387.462c-.088.318-.176.636-.305 1.21-1.436.37-2.83.486-4.625.738-.403.137-.69-.245-.482-.81 1.943-.757 3.677-.947 5.412-1.138z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M786.127 411.3c.789-.197 1.713-.066 2.637.065-.372 1.124-.745 2.249-1.432 3.525-.565-.987-.817-2.125-1.205-3.59zM964.817 488.831c-1.15.678-2.534 1.055-4.288 1.48-.082-3.436 2.108-2.313 4.288-1.48zM710.585 647.182c-.48.379-.788.536-1.354.721.21-1.424-1.338-4.47 2.614-3.054-.22.894-.654 1.503-1.26 2.333zM558.99 335.56c1.202.058 2.42.469 3.83 1.143-1.612 1.697-3.16 2.15-3.83-1.143zM456.14 907.867c-.828-.634-1.376-1.455-2.039-2.556 2.397-1.088 2.807-.642 2.038 2.556zM975.817 486.777c-1.262.812-2.718 1.374-4.511 1.848 1.214-.759 2.766-1.428 4.511-1.848zM671.546 738.983c-.624.972-1.675 1.94-2.726 2.907.042-.866.084-1.732.35-2.794.799-.17 1.374-.144 2.376-.113zM846.16 399.236c.613-1.042 1.386-1.845 2.512-2.693-.55.948-1.45 1.94-2.512 2.693zM435.297 815.943c.435-1.24 1.24-2.507 2.329-3.947-.464 1.191-1.212 2.556-2.33 3.947zM625.378 792.944c-.233-1.119-.122-2.297.224-3.74.196 1.051.158 2.366-.224 3.74zM1087.796 502.766c-.872.638-1.963 1.002-3.418 1.348.824-.552 2.011-1.088 3.418-1.348z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1054.24 407.134a23.39 23.39 0 0 1-.026-1.689c.384-.376.63-.551.8-1.106.543-.539 1.058-.842 1.924-.753-.666 1.443-1.682 2.496-2.698 3.548z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M696.054 404.385c1.121-.197 2.3-.057 3.71.358-1.064.175-2.358.077-3.71-.358zM717.08 406.32c1.337-.023 2.746.348 4.33 1.055-1.302.004-2.78-.328-4.33-1.055zM656.08 394.23c1.31.036 2.675.471 4.234 1.226-1.264-.063-2.72-.444-4.234-1.225z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1040.307 387.846c-.862.008-1.416-.115-1.96-.721 1.22-.385 2.43-.287 3.642-.19 0 0 .024.44-.013.658-.478.185-.919.153-1.669.253z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M782.97 416.964c.048.615-.135.83-.618 1.022-.846-.643-1.483-1.338-2.12-2.033.866.229 1.732.458 2.738 1.01zM413.179 884.827c-.626-.889-.967-1.991-1.264-3.458.546.84 1.047 2.042 1.264 3.458zM798.17 425.17c.868-.636 1.953-.982 3.39-1.357a9.794 9.794 0 0 1-3.39 1.357zM672.055 400.305c1.124-.187 2.299-.026 3.718.39-1.059.157-2.363.057-3.718-.39zM555.016 836.135c.134.868-.105 1.684-.584 2.713-.855-.436-1.47-1.082-2.084-1.729.765-.345 1.53-.69 2.668-.984zM704.667 653.028c-.693 1.06-1.77 2.108-3.148 3.29.72-1.012 1.741-2.157 3.148-3.29zM843.938 540.372c-1.091.272-2.269.23-3.71-.044 1.033-.246 2.328-.257 3.71.044zM842.004 559.688c-.525.503-1.052.644-1.579.786-.03-1.02-.059-2.04.133-3.304.629.555 1.036 1.355 1.446 2.518zM784.943 577.557c-1.003.366-2.074.395-3.546.427.4-2.736 1.771-2.6 3.546-.427zM691.479 678.059c.254 1.103.183 2.282-.126 3.722-.225-1.041-.212-2.344.126-3.722zM813.148 419.317c.42-.053.841-.107 1.58-.17-.263.736-.844 1.483-1.55 1.717-.093-.858-.061-1.202-.03-1.547z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M812.791 419.172c.326.49.294.834.217 1.438-.937.179-1.827.098-2.862-.288.667-.635 1.477-.965 2.645-1.15z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M781.06 411.78c.678-.37 1.445-.464 2.59-.455-.583.312-1.543.52-2.59.454zM450.807 899.206c.245.56.191 1.058.138 1.556l-1.343-.34c.303-.426.605-.852 1.205-1.216zM725.05 408.296c.699-.396 1.443-.45 2.56-.47-.036 2.349-.94 2.824-2.56.47zM832.237 409.305c.414-.084.829-.168 1.55-.168-.302.789-.91 1.493-1.633 1.686-.05-.847.017-1.182.083-1.518zM433.678 904.95c-.359-.683-.428-1.447-.451-2.593.278.582.509 1.547.45 2.592zM459.17 325.193c.556-.65 1.314-1.025 2.403-1.41-.513.555-1.358 1.12-2.404 1.41zM447.838 321.814c-.588.606-1.372.94-2.49 1.286.543-.511 1.419-1.035 2.49-1.286zM549.854 330.121c.786-.025 1.321.127 2.03.505-.491.548-1.156.87-1.82 1.192-.154-.507-.307-1.013-.21-1.697zM472.16 321.189c.591-.613 1.376-.953 2.496-1.273-.544.528-1.424 1.037-2.496 1.273zM479.06 319.757c.68-.377 1.448-.478 2.59-.461-.585.324-1.545.53-2.59.46zM451.762 317.04c.027.685-.311 1.354-.906 2.139-.635-.331-1.013-.777-1.391-1.223.644-.31 1.288-.62 2.297-.916zM728.27 650.984c-.334-.45-.318-.898-.22-1.675.875.01 1.668.346 2.461.684-.63.33-1.261.661-2.241.991zM614.22 572.823c-.57-.595-.877-1.381-1.163-2.502.49.546.957 1.428 1.164 2.502zM562.245 701.957c.054-.662.459-1.308 1.146-2.041.572.372.861.833 1.15 1.294-.648.254-1.297.508-2.296.747zM665.046 398.234c.83-.149 1.693.039 2.756.491-.773.126-1.748-.015-2.756-.491zM1071 498.998l-2.566-.476.389-1.087c.692.301 1.384.603 2.126 1.235l.051.328zM1061.94 496.943c.884.243 1.811.533 2.738.822l-.548 1.123c-.695-.438-1.39-.877-2.166-1.655-.082-.34.02-.243-.024-.29zM451.236 798.945c.465-.927 1.317-1.834 2.458-2.861-.498.88-1.285 1.88-2.458 2.861zM805.032 423.017c.201-.664.542-1.085 1.293-1.58-.11.558-.632 1.19-1.293 1.58zM470.154 782.916c.515-.886 1.413-1.737 2.61-2.673-.543.846-1.385 1.776-2.61 2.673zM580.394 830.958c-.188-.81-.057-1.672.32-2.753.164.755.081 1.729-.32 2.753zM587.7 830.044c.159.821-.01 1.682-.439 2.75-.137-.766-.013-1.738.438-2.75zM585.752 837.053c.21.828.077 1.695-.29 2.795-.174-.763-.114-1.76.29-2.795zM646.534 754.042c.208.802.104 1.663-.233 2.753-.182-.745-.13-1.72.233-2.753zM908.148 516.906c-.135-.833.077-1.671.539-2.72.103.765-.045 1.74-.54 2.72zM412.538 874.957c-.229-.799-.154-1.662.161-2.752.208.744.176 1.716-.16 2.752zM571.145 691.14c.296-.837.781-1.417 1.521-2.132-.274.707-.803 1.548-1.521 2.132zM472.159 412.852c-.8-.323-1.35-.829-1.989-1.604a4.877 4.877 0 0 1 1.989 1.604zM439.018 377.584c-.643-.419-1.3-1.184-1.987-2.266.637.428 1.305 1.173 1.987 2.266zM580.077 348.256c.898.126 1.829.618 2.917 1.391-.856-.154-1.87-.59-2.917-1.39zM792.822 588.074c-.154.88-.68 1.793-1.49 2.863.183-.838.651-1.835 1.49-2.863zM1004.577 494.99c-.355.709-1.08 1.43-2.1 2.275.38-.672 1.055-1.468 2.1-2.276zM1113.085 510.96c.45.52.439 1.054.427 1.588-.796-.306-1.593-.611-2.558-1.176.443-.305 1.056-.352 2.131-.412zM706.726 650.072c-.132.874-.621 1.786-1.398 2.838.156-.84.599-1.82 1.398-2.838zM532.916 883c-.196.681-.69 1.222-1.183 1.763-.303-.678-.607-1.356-.889-2.4.607-.078 1.19.21 2.072.638zM535.033 324.284c.535-.18 1.1-.056 1.851.298-.482.155-1.151.08-1.85-.298zM544.034 328.223c.538-.147 1.098.015 1.835.415-.486.124-1.15.008-1.835-.415zM544.806 860.044c.15.535-.014 1.09-.405 1.833-.12-.48-.014-1.146.405-1.833zM420.271 846.968c-.155-.533-.007-1.093.374-1.833.132.482.03 1.144-.374 1.833zM846.525 543.968c-.324-.401-.375-.858-.422-1.66.235.304.464.955.422 1.66zM835.907 539.912c-.336.536-.827.814-1.613 1.09.29-.452.873-.9 1.613-1.09zM655.81 730.04c.11.534-.085 1.086-.528 1.805-.09-.484.066-1.136.529-1.805zM582.19 820.948c-.363-.378-.406-.786-.476-1.5.563-.149 1.154.008 1.745.165-.316.435-.632.87-1.269 1.335zM1018.866 486.836c-.315.55-.793.857-1.568 1.169.27-.467.837-.94 1.568-1.17zM581.186 816.851c-.553-.301-.866-.772-1.217-1.532.46.261.959.812 1.217 1.532z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1082.415 408.042c.066-.666.499-1.345 1.172-1.89-.108.715-.457 1.297-1.172 1.89z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M834.17 408.869c.237-.66.797-1.23 1.68-1.74-.239.648-.798 1.24-1.68 1.74zM831.935 409.194c.236.447.17.782.057 1.37-.566.238-1.084.222-1.948.023.3-.623.944-1.064 1.89-1.393z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M775.089 410.089c.55-.099 1.09.12 1.784.59-.496.077-1.145-.098-1.784-.59zM436.884 908.867c-.328.534-.815.82-1.596 1.094.283-.454.86-.898 1.596-1.094z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M826.098 412.743c.266-.654.854-1.194 1.756-1.645-.268.645-.852 1.202-1.756 1.645z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M507.76 882.043c.102.53-.092 1.08-.54 1.788-.087-.485.078-1.127.54-1.788zM499.955 877.603c-.241-.395-.24-.787-.21-1.178.002-.01.306.002.469.003-.004.393-.009.785-.26 1.175zM681.586 716.027c.188.52.088 1.081-.232 1.832-.166-.471-.11-1.13.232-1.832zM530.162 872.87c-.53-.323-.818-.806-1.1-1.584.452.278.896.85 1.1 1.584zM1071 499.001l1.527.906-.545.626c-.303-.323-.607-.645-.946-1.252l-.036-.28zM633.464 776.61c-.116.448-.398.722-.698.975-.007.007-.211-.22-.324-.337.284-.271.569-.542 1.022-.638zM629.272 776.967c-.251-.424-.212-.878-.074-1.662.525.041.953.412 1.381.783-.339.283-.678.565-1.307.879zM886.954 504.604c-.24-.395-.239-.788-.209-1.179.001-.01.306.002.469.003-.005.393-.009.786-.26 1.176zM910.914 505.89c-.54.076-1.072-.161-1.757-.65.487-.055 1.126.142 1.757.65zM875.39 512.463c-.449-.115-.723-.398-.977-.698-.006-.008.22-.212.338-.324.272.284.543.569.638 1.022zM634.667 797.057c-.055.659-.463 1.372-1.163 2.233.075-.627.442-1.403 1.163-2.233zM1000.39 490.464c-.448-.116-.723-.398-.976-.698-.007-.008.22-.212.337-.325.272.285.543.57.639 1.023zM832.39 535.464c-.448-.115-.723-.398-.977-.698-.006-.007.22-.212.338-.325.272.285.544.57.64 1.023zM951.85 492.814c-.3.558-.77.878-1.532 1.22.259-.471.811-.965 1.533-1.22zM1065.396 493.955c.395-.241.789-.24 1.18-.21.01.001-.002.306-.004.47-.393-.005-.786-.01-1.176-.26zM729.84 407.81c.248-.627.87-1.205 1.82-1.812-.263.6-.855 1.23-1.82 1.811zM860.535 533.39c.116-.448.399-.723.7-.977.007-.007.212.22.324.338-.285.272-.57.544-1.024.64zM692.571 674.025c.187.52.088 1.081-.235 1.828-.167-.472-.108-1.13.235-1.828zM588.028 353.348c.537-.186 1.108-.076 1.85.276-.49.168-1.154.094-1.85-.276zM741.944 636.11c.121.548-.085 1.08-.518 1.788-.088-.484.052-1.143.518-1.787zM578.217 682.91c.12-.627.59-1.272 1.36-2.016-.136.6-.573 1.3-1.36 2.017zM753.794 608.059c.146.535-.02 1.083-.408 1.816-.117-.478-.01-1.14.408-1.816zM637.03 383.276c.528-.122 1.078.053 1.803.464-.476.101-1.128-.033-1.802-.464zM723.97 640.527c-.406.317-.862.362-1.654.33.31-.253.957-.427 1.654-.33zM686.03 402.34c.529-.177 1.093-.057 1.84.292-.48.155-1.144.08-1.84-.292zM691.039 403.72c.482-.25 1.033-.246 1.798-.055-.434.228-1.081.27-1.798.055zM847.954 404.603c-.24-.394-.239-.787-.208-1.178 0-.01.305.002.468.003-.005.393-.009.785-.26 1.175zM790.536 582.389c.116-.447.398-.721.697-.974.008-.007.212.22.324.337-.284.27-.568.542-1.02.637zM570.391 699.466c-.45-.117-.725-.4-.98-.7-.006-.008.221-.213.34-.326.272.285.545.57.64 1.026zM758.043 405.778c.473-.264 1.023-.278 1.791-.115-.425.24-1.07.302-1.79.115zM761.755 593.079c-.1.642-.556 1.313-1.304 2.118.12-.607.535-1.347 1.304-2.118zM653.068 392.313c.67.058 1.39.477 2.265 1.186-.634-.082-1.425-.453-2.265-1.186zM462.535 400.39c.116-.448.399-.723.7-.977.007-.007.212.22.325.338-.286.272-.57.544-1.025.64z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M897.374 402.899c-.474-.297-.595-.628-.43-1.39.873-.009 1.462.415 2.051.84.063.165.126.33.12.75-.507.093-.947-.07-1.741-.2z\"\n        />\n        <path\n            fill=\"#902C2A\"\n            d=\"M898.927 1048.137c2.654-.778 4.972-1.46 7.686-2.144 8.787 4.725 17.216 9.39 25.563 14.197 8.657 4.986 17.217 10.141 25.854 15.164 5.366 3.12 11.011 5.813 16.136 9.282 4.994 3.38 9.916 7.093 14.054 11.438 3.066 3.22 4.813 7.692 7.172 11.592 2.614 4.323 5.343 8.58 7.823 12.978.615 1.091.461 2.616.87 5.329l-5.19-3.845c-3.105 2.38-6.06 4.529-6.151 9.337-.046 2.412-1.508 5.25-3.2 7.096-5.566 6.072-10.862 12.732-17.512 17.376-7.853 5.484-17.008 9.102-26.193 13.8-1.682.934-2.77 1.596-3.859 2.258 0 0-.486-.005-.73 0-3.42.67-6.686 2.172-9.758 1.846-10.236-1.086-20.656-.615-30.496-5.108-8.058-3.68-16.882-5.645-25.107-9.006-6.206-2.535-11.999-6.08-17.98-9.167-2.07-1.069-4.173-2.076-6.224-3.18-3.868-2.079-7.628-4.374-11.577-6.282-8.526-4.117-17.253-7.83-25.667-12.156-3.452-1.775-6.307-4.71-9.116-7.617 1.745-1.886 3.172-3.272 4.598-4.658-1.315-.584-2.63-1.167-4-2.082-1.32-.188-2.582-.045-4.085.413-.411 1.883-.582 3.45-.752 5.019-6.472 2.526-10.607-2.66-16.77-3.95 3.579-2.361 6.03-3.98 8.47-6.26.03-1.066.072-1.468.397-2.028.431-.555.58-.952.727-1.35 4.955-2.569 9.91-5.138 15.654-7.607 5.668-2.042 10.672-3.942 15.399-6.38 7.835-4.04 15.313-8.807 23.278-12.55 6.733-3.165 14.127-4.918 20.877-8.053 4.242-1.97 7.834-5.338 11.718-8.078 0 0 .034.12.363.151 4.138-3.26 7.947-6.553 11.756-9.846 1.879-1.944 3.758-3.888 5.972-5.929z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M880.472 1063.75c-3.52 2.751-7.112 6.119-11.354 8.089-6.75 3.135-14.144 4.888-20.877 8.053-7.965 3.743-15.443 8.51-23.278 12.55-4.727 2.438-9.73 4.338-15.047 6.41 15.518-7.323 28.894-19.38 46.344-24.087 8.334-2.248 15.922-7.263 24.212-11.014z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M612.77 1114.573c-.491-.355-.634-.683-.75-1.283 7.281-.32 14.537-.371 21.672.112-.763.795-1.404 1.056-2.046 1.316-1.854-.022-3.709-.044-6.315-.215-3.383-.028-6.014.091-8.645.21a376.11 376.11 0 0 1-3.916-.14z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M892.62 1054.097a154.468 154.468 0 0 1-11.473 9.78c3.46-3.293 7.3-6.521 11.474-9.78z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M792.899 1107.937c-.041.402-.082.804-.147 1.507-.554.458-1.084.615-1.886.748.132-1.16.537-2.297 1.42-3.126.523.495.568.683.613.87zM537.232 1082.777c1.246.62 2.492 1.24 3.837 2.136.1.276.116.72-.255.797a17.628 17.628 0 0 1-3.877-2.614c.096-.109.295-.32.295-.32zM644.803 1114.233c-1.69.317-3.714.434-6.26.38-.524-.172-.458-.565-.458-.565 2.127-.005 4.255-.01 6.718.185z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M637.697 1113.962c.388.086.322.479.411.656-1.782.205-3.652.232-5.992.18.172-.34.813-.601 1.745-1.052 1.343-.084 2.395.023 3.836.216z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M534.936 1082.941c.556-.905 1.112-1.81 2.028-2.632.263.683.166 1.281.168 2.174.1.294-.1.504-.512.572-.837.007-1.26-.053-1.684-.114zM662.164 1117.381c-.557.262-1.17.263-1.941-.02.524-.27 1.205-.255 1.941.02zM677.088 1121.381c-.623.211-1.335.109-2.165-.255.614-.193 1.345-.126 2.165.255zM666.225 1118.21c-.529.27-1.166.31-1.989.069.504-.288 1.192-.293 1.99-.069z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M826.309 783.03c.16-.596.619-1.276 1.417-1.973-.146.62-.633 1.255-1.417 1.974z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M793.183 1107.779c-.329-.03-.374-.218-.55-.664.086-.392.301-.527.897-.673.232.385.084.782-.347 1.337z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M786.679 1111.921c.135.5-.104.678-.722.472-.043-.43.198-.567.722-.472z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M1116.53 956.968c-3.778 4.234-7.902 8.457-12.352 12.677a212.332 212.332 0 0 1 12.352-12.677zM1092.523 983.03c-1.043 1.892-2.417 3.813-4.104 5.81 1.05-1.876 2.412-3.83 4.104-5.81zM1084.499 992.976c-.561 1.33-1.45 2.7-2.645 4.127.57-1.325 1.443-2.706 2.645-4.127zM1100.516 973.043c-.573 1.318-1.47 2.677-2.672 4.084.578-1.316 1.462-2.679 2.672-4.084zM1096.494 978.004c-.445 1.211-1.215 2.443-2.31 3.69.444-1.213 1.214-2.44 2.31-3.69zM1079.573 999.08c-.287.988-.899 1.976-1.813 3.014.295-.972.891-1.992 1.813-3.014zM1075.516 1004.03c-.135.84-.569 1.738-1.32 2.665.128-.85.575-1.727 1.32-2.665zM1124.156 812.403c.364-.55.901-.903 1.778-1.184-.309.508-.957.945-1.778 1.184z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1179.652 830.134c-.277-.277-.392-.697-.447-1.125-.01-.079.223-.19.344-.285.095.421.19.842.103 1.41z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M289.912 496.486c.213 1.178.154 2.514-.057 4.226-.173-1.104-.194-2.587.057-4.226z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1158.482 542.724c-.926-4.58-1.631-9.497-2.16-14.874.911 4.539 1.645 9.539 2.16 14.874zM1156.469 524.771c-.875-2.328-1.555-4.946-2.067-7.985.866 2.285 1.564 4.99 2.067 7.985zM1154.358 512.77c-.801-1.887-1.431-4.035-1.852-6.466.814 1.88 1.42 4.041 1.852 6.465zM1159.983 550.53c-.648-1.477-1.275-3.346-1.762-5.631.689 1.469 1.237 3.353 1.762 5.63zM1152.487 503.825c-.528-.396-.917-1.085-1.176-2.086.525.39.92 1.09 1.176 2.086zM1151.117 499.633c-.376-.568-.66-1.494-.779-2.788.402.565.636 1.497.78 2.788zM1149.034 491.735c-.224-.012-.375-.286-.354-.652.257.069.342.229.354.652z\"\n        />\n        <path\n            fill=\"#7C3431\"\n            d=\"M1116.698 453.51c-.577-2.103-1.318-3.923-1.414-5.778-.069-1.305.738-2.656 1.154-3.987l2.578 1.16c.372.49.436.841.375 1.881.59 4.289 1.305 7.888 2.02 11.488.16.358.321.716.587 1.348.124 3.503.143 6.731-.185 10.033-.704-.866-1.06-1.805-1.31-3.35-.504-1.84-1.115-3.076-1.726-4.312-.061-.388-.123-.775-.075-1.838-.351-2.25-.813-3.823-1.274-5.396-.206-.327-.413-.654-.73-1.249z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M1117.972 437.47s-.027-.01-.025.009c-.77-2.676-1.477-5.391-2.333-8.06-.827-2.579-1.807-5.11-2.72-7.662l1.505-.642c2.606 5.502 5.307 10.964 7.705 16.555.328.764-.856 2.175-1.738 3.306-.398.018-.351.02-.419-.3-.703-1.282-1.34-2.244-1.975-3.206z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1117.602 491.213c.483-.652.966-1.305 1.762-1.99 1.532 4.432 2.752 8.897 4.017 13.704-.228 1.805-.502 3.267-1.206 4.892-1.636-3.513-2.843-7.189-4.06-11.279-.177-2.051-.345-3.689-.513-5.327z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1134.114 547c-2.68-1.304-5.02-2.626-7.766-4.177 5.128-2.983 7.993-2.396 10.602 1.787-.739 1.022-1.618 1.698-2.836 2.39z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M1139.015 512.972c1.997 3.816 4.587 7.552 2.092 11.98l-1.797.278c-.453-3.819-.905-7.637-1.075-11.84.284-.385.78-.418.78-.418z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M1136.962 462c1.253 3.11 2.237 6.152 3.176 9.585-.585.4-1.124.41-2.071.428-1.662-3.68-2.916-7.37-4.47-11.946 1.573.947 2.334 1.406 3.365 1.932z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"m1131.855 506.985-1.32 4.318c-1.052-1.444-2.103-2.889-3.088-4.652 1.314-2.387 2.467-4.688 5.23-2.106-.418 1.092-.62 1.766-.822 2.44z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1103.547 411.195c-.138.398-.275.797-.74 1.614-.839.715-1.35 1.011-1.86 1.307-.909-3.092-1.817-6.185-2.473-9.67 1.064-.151 1.877.09 2.69.333.72 1.136 1.439 2.273 2.176 4.103.081 1.233.144 1.773.207 2.313z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1101.125 404.428c-.774.109-1.587-.133-2.846-.348-1.44-1.329-2.432-2.685-3.425-4.042l1.836-1.45c1.466 1.829 2.932 3.659 4.435 5.84z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1121.57 457.86c-.874-3.186-1.589-6.785-2.151-10.808.872 3.183 1.592 6.789 2.152 10.808z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1100.987 414.473c.47-.653.981-.95 1.768-1.351 1.034 1.935 1.793 3.977 2.551 6.018l-1.782.76c-.832-1.69-1.664-3.38-2.537-5.427z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1143.208 483.13c1.06 1.75 1.731 3.58 2.646 5.642.28.99.317 1.75.246 2.876-1.165-2.568-2.223-5.502-2.892-8.517z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M1137.931 488.59c.408-.448.829-.524 1.565-.632 1.088 1.35 1.86 2.732 2.631 4.114l-1.814 1.133c-.79-1.414-1.58-2.828-2.382-4.615z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1149.673 515.225c.827 1.924 1.386 4.083 1.814 6.609-.781-1.88-1.43-4.126-1.814-6.609z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1138.972 512.635c.043.337-.453.37-.702.366a111.23 111.23 0 0 0-3.51.022c-.602-1.08-.883-2.192-.996-3.632 1.834.752 3.5 1.83 5.208 3.244z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1151.208 536.946c-.034 1.477-.36 3.073-.979 4.869.034-1.45.36-3.1.979-4.87zM1151.63 530.237c.481 1.31.7 2.846.595 4.564-.501-1.324-.679-2.832-.595-4.564z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1138.205 545.344c-.197-1.435-.183-2.63-.097-4.13 2.29 1.145 3.213 2.66.097 4.13zM1142.794 549.826c-.993.428-2.183.58-3.589.49.987-.418 2.19-.591 3.589-.49z\"\n        />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M1104.349 386.946c.853.687 1.585 1.692 2.2 3.002-.851-.691-1.587-1.688-2.2-3.002z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1103.771 411.093c-.287-.438-.35-.978-.279-1.908.257.342.38 1.074.279 1.908z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1132.219 506.943c-.162-.632.04-1.306.543-2.05.406.335.51.74.561 1.453-.281.39-.511.472-1.104.597z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M1134.312 525.004c-.136-.57.022-1.14.457-1.85.131.522-.016 1.187-.457 1.85zM1138.204 538.888c-.392-.407-.562-.937-.634-1.75.35.355.604.99.634 1.75z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1146.013 494.061c.486.455.703 1.004.753 1.83-.453-.394-.738-1.065-.753-1.83z\"\n        />\n        <path\n            fill=\"#9D5C56\"\n            d=\"M1149.368 507.378c.293.588.41 1.487.424 2.725-.268-.578-.434-1.496-.424-2.725z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1133.788 508.914c-.311-.115-.447-.431-.381-.941.32.117.438.429.381.941z\"\n        />\n        <path\n            fill=\"#D8B2AC\"\n            d=\"M1146.983 498.104c.218-.029.493.24.446.427-.252-.008-.458-.203-.446-.427z\"\n        />\n        <path fill=\"#E6C7C1\" d=\"M1148.583 545.544c-.044.024.045-.024 0 0z\" />\n        <path\n            fill=\"#C8A7A2\"\n            d=\"M266.494 1082.105c.336.517.42.92.475 1.63-.738-.354-1.446-1.014-2.178-1.99.468-.129.96.058 1.703.36z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M942.33 1171.992c.738-.659 1.827-1.321 3.29-1.983-.73.66-1.835 1.32-3.29 1.983z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M791.987 133.01a4.16 4.16 0 0 1-.422-.19c.126-.067.253-.134.42-.026.042.175.016.204.002.216z\"\n        />\n        <path\n            fill=\"#D9B8B2\"\n            d=\"m805.98 1114.916 3.943 1.751c-1.426 1.386-2.853 2.772-4.619 4.3-1.425-.132-2.512-.404-3.908-.813-.14-1.705.03-3.273.82-5.044 1.666-.2 2.714-.197 3.763-.194z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1112.6 969.981c-.066.646-.458 1.334-1.164 2.083.07-.64.455-1.34 1.165-2.083z\"\n        />\n        <path\n            fill=\"#8D312E\"\n            d=\"M534.52 1082.946c.84.056 1.263.116 2.004.218 1.518.902 2.719 1.762 4.217 2.756.456 3.22-1.221 4.118-4.052 4.106-13.134-.057-26.27.114-39.4-.13-2.261-.042-4.493-1.696-7.019-3.102-.283-.951-.287-1.406-.29-1.86 3.132-5.873 8.69-3.807 13.395-3.817 7.288-.015 14.58.5 21.865.9 2.963.164 5.91.614 9.28.929z\"\n        />\n        <path\n            fill=\"#E6C7C1\"\n            d=\"M489.654 1084.826c.33.562.333 1.017.282 1.808-3.508 3.017-5.412-1.202-8.517-1.646-.36-.87-.4-1.584-.479-2.654 3.905-2.928 5.759.918 8.714 2.492z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M1124.393 955.26c-.015-.285.358-.387.942-.345-.044.272-.3.4-.942.345z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M1118.125 496.954c1.207 3.676 2.414 7.352 3.908 11.225.423 1.16.559 2.122.49 3.687.352 3.166.908 5.73 1.465 8.294-1.193-.79-3.12-1.348-3.457-2.41-2.082-6.565-3.806-13.243-5.247-20.318 1.215-.45 2.028-.464 2.84-.478z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M1118.116 496.54c-.804.428-1.617.443-2.84.459-.754-1.389-1.1-2.779-1.177-4.658.796-1.093 1.322-1.698 1.848-2.302l.048-.036c.418.29.818.591 1.413 1.051.362 1.797.53 3.435.708 5.486z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1123.924 520.362c-.493-2.766-1.05-5.33-1.364-8.131a59.308 59.308 0 0 1 3.437 8.69c.129.42-.984 1.221-1.9 1.682-.33-.79-.284-1.415-.173-2.241z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M1115.552 490.025c-.131.618-.657 1.223-1.473 1.952-.596-.354-.903-.832-1.26-1.598.745-.315 1.541-.341 2.733-.354z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M631.828 1061.788c.516-.538 1.325-.75 2.134-.963-.164.52-.329 1.04-.843 1.72-.566-.036-.782-.233-1.29-.757z\"\n        />\n        <path\n            fill=\"#85423E\"\n            d=\"M655.784 198.182c.543.299.857.765 1.195 1.526-.46-.256-.942-.807-1.195-1.526z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M617.161 1114.792a68.189 68.189 0 0 1 7.774-.248c-2.196.235-4.747.281-7.774.248z\"\n        />\n        <path\n            fill=\"#703B39\"\n            d=\"M1087.002 312.99c-.15 2.171-.302 4.342-1.134 6.775-4.763-.387-8.846-1.58-12.926-1.576-9.946.013-19.898.957-29.835.786-6.059-.104-12.18-1.2-18.116-2.546-6.094-1.38-11.997-3.607-18.33-5.521-6.619-3.08-12.89-6.102-19.081-9.41-1.16-2.318-2.398-4.351-3.797-6.574-.366-.451-.556-.724-.721-1.29-.155-.82-.32-1.356-.484-1.89 7.337-.894 14.662-1.898 22.013-2.651 8.034-.824 16.098-1.349 24.133-2.162 1.588-.161 3.108-1.495 4.653-1.48 2.306.02 4.606.757 7.27 1.764 2.019 3.654 3.677 6.734 5.345 9.799.008-.015-.021.003-.074.383.499 1.404 1.051 2.428 1.603 3.452 1.221-1.293 2.442-2.586 3.952-4.042 2.995-4.06 5.702-7.958 9.26-13.08 1.966 4.266 2.937 7.052 4.473 9.482 1.145 1.812 3.16 4.527 4.535 4.386 1.887-.193 3.863-2.467 5.206-4.288 1.736-2.354 2.791-5.195 4.307-7.726 1.957-3.27 4.613-4.662 8.274-2.499-.207 2.358-.415 4.715-.92 7.785-.066 7.85.164 14.987.394 22.123m-42.028-9.517c-1.756-3.318-3.58-6.603-5.248-9.964-1.41-2.841-2.583-4.515-6.734-3.89-12.868 1.937-25.879 2.915-38.81 4.46-1.744.207-3.354 1.528-5.026 2.333 1.372 1.4 2.491 3.427 4.157 4.099 11.5 4.642 22.34 11.069 34.933 12.81 7.292 1.01 14.51 3.315 21.792 3.458 9.896.193 19.832-1.013 29.721-1.939 1.168-.109 3.01-2.188 3.07-3.426.318-6.397.191-12.818.128-19.23-.01-1.028-.483-2.051-1.142-4.666-1.776 2.704-2.578 4.382-3.79 5.678-2.514 2.69-5.245 5.176-7.887 7.746-2.427-2.62-4.867-5.229-7.274-7.867-.93-1.02-1.786-2.107-3.366-3.982-2.845 5.145-5.298 9.393-7.564 13.738-1.72 3.295-3.662 4.217-6.96.642z\"\n        />\n        <path\n            fill=\"#DCDBDC\"\n            d=\"M934.99 302.002c.054.725.108 1.45.162 2.82.486 1.299.972 1.953 1.458 2.607.804 2.58 1.608 5.159 2.4 8.453.93 2.71 1.871 4.705 3.255 7.638-9.992-2.63-19.145-5.04-28.655-7.64-1.943-.25-3.53-.312-5.27-.69-1.25-.52-2.346-.722-3.877-1.042-3.437-.152-6.442-.185-9.608-.538-.08-1.625-.48-3.472.214-4.094.807-.722 2.927-.95 3.865-.382 3.635 2.202 5.548.43 6.982-2.59.963-2.026 1.624-4.196 2.42-6.302 0 0 .208-.31.556-.618 2.387-2.476 3.912-2.091 5.258.502.96 1.85 2.206 3.551 3.323 5.603.163.62.327.956.462 1.614.593.838 1.214 1.353 1.848 1.87.013.003.014.031.06.41 2.874 2.75 4.801 1.475 6.348-1.201 1.85-3.203 3.672-6.423 5.901-10.327l2.898 3.907zM952.922 298.934c-.15.973-.302 1.947-.815 3.411-1.478 4.257-2.595 8.023-3.726 11.892-.015.102-.024.309-.2.21-.177-.1-.523.11-.81.215-.624.588-.964 1.072-1.595 1.508-.866-.152-1.44-.255-2.014-.358-.62-2.286-1.24-4.572-1.784-7.614-1.81-5.339-3.696-9.922-5.582-14.504-.013-.31-.019-.618.336-1.238 1.99-.69 3.625-1.068 5.261-1.447 2.905.211 5.81.422 9.244 1.015.915 2.558 1.3 4.734 1.685 6.91z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1087.698 282.736c-3.831-1.817-6.487-.424-8.444 2.845-1.516 2.531-2.571 5.372-4.307 7.726-1.343 1.82-3.319 4.095-5.206 4.288-1.376.141-3.39-2.574-4.535-4.386-1.536-2.43-2.507-5.216-4.474-9.482-3.557 5.122-6.264 9.02-9.699 13.081-2.173.18-3.618.194-5.062.209 0 0 .029-.018.035-.412.056-1.208.107-2.022.465-2.654 1.687-.214 3.642-.176 4.333-1.092 1.827-2.423 3.107-5.258 4.604-7.93 3.218-.93 6.757-1.065 8.88-4.433.48-.76 2.193-.743 3.35-.506-3.497 3.52-2.702 6.912 3.137 12.389 2.053-3.032 4.147-5.936 6.01-8.98.625-1.021.66-2.402.965-3.618l-3.64-.594c1.553-1.98 12.166-3.846 13.223-2.045.81 1.378.4 3.473.365 5.594z\"\n        />\n        <path\n            fill=\"#DCDBDC\"\n            d=\"M1085.84 326.242c.22.226.468.415.909 1.028-.306 3.704-.778 6.946-1.544 10.344-1.878 2.061-3.261 4.197-5.107 5.802-1.522 1.323-3.591 2.015-5.438 2.565-.176-4.643-.331-8.864-.388-13.457-.488-1.942-1.075-3.514-1.65-5.329-.012-.573-.102-.882-.077-1.473.046-4.359 3.214-3.327 5.73-3.572.893.248 1.51.348 2.256.736.856.619 1.584.95 2.313 1.28 0 0 .151-.167.117.256.937.89 1.909 1.355 2.88 1.82z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M947.658 314.558s.346-.21.806.206c1.209.689 1.957.961 2.826 1.475-.113.71-.347 1.18-.582 1.596-.002-.055.176-.102-.015.251-1.86 3.072-6.926 5.382-1.232 8.988-.37.062-.738.125-1.344.472.076.97.274 1.746.726 2.322.62.787 1.432 1.423 1.78 2.162-5.83-1.556-11.277-3.15-16.724-4.746-.422-.087-.844-.174-1.802-.521-2.395-.914-4.237-1.622-6.117-2.209-3.982-1.243-7.984-2.424-11.793-3.867 1.28-.236 2.373-.236 3.854-.236l-4.074-4.382 28.298 7.451c-1.384-2.933-2.325-4.928-3.123-7.278 1.408-.352 2.673-.35 4.279-.388.915.06 1.489.164 2.562.526.891-.435 1.283-1.129 1.675-1.822z\"\n        />\n        <path\n            fill=\"#151515\"\n            d=\"M1080.403 322.597c-.617-.1-1.235-.199-2.172-.81-4.937-3.51-6.734-.545-8.399 3.212-.234.015-.704.032-.74-.366-1.068-5.058-2.423-5.628-6.566-2.819-2.415.493-4.477.81-6.794.855-4.079-.089-7.9.094-12.164.314-3.796-.22-7.15-.476-10.618-.994-.717-.211-1.32-.16-2.247-.085-.738-.096-1.15-.216-1.608-.596-.723-.304-1.403-.348-2.445-.395-2.805-.949-5.247-1.893-7.728-3.21-.866-.591-1.696-.81-2.759-1.042-.546-.06-.843-.155-1.261-.62-1.726-.554-3.316-.785-5.23-1.013-.732-.124-1.142-.25-1.59-.633-.416-.818-.793-1.379-1.142-2.312.04-.62.054-.869.068-1.117 5.986 1.856 11.889 4.082 17.983 5.463 5.936 1.345 12.057 2.442 18.116 2.546 9.937.17 19.889-.773 29.835-.786 4.08-.005 8.163 1.19 12.665 1.88-.43.68-1.28 1.32-2.9 2.005-1.281.205-1.793.364-2.304.523z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M959.637 288.382c17.461-2.093 34.92-4.22 52.39-6.234 2.1-.242 4.27.129 6.675.782.175.917.084 1.268-.007 1.618-.378.052-.756.103-1.727-.062-7.163.501-13.733 1.22-20.303 1.937-2.597.098-5.195.196-8.496.12-3.643.492-6.583 1.157-9.523 1.822-1.292.124-2.584.248-4.52.205-3.258.48-5.871 1.13-8.485 1.778-1.5.042-3.002.085-4.905-.217-.633-.813-.866-1.28-1.1-1.749z\"\n        />\n        <path\n            fill=\"#DCDBDC\"\n            d=\"M917.477 291.458c.34-.1.68-.2 1.635-.36 2.57-.506 4.525-.952 6.48-1.398.74.005 1.482.01 2.578.32 3.106 5.183-1.33 7.955-3.168 11.344-.536.989-3.049.906-4.724.956-.746-.77-1.424-1.182-2.073-1.523.03.072.143-.033.322-.332.003-.73-.173-1.163-.281-1.943-.211-2.586-.49-4.825-.769-7.064z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1092.08 338.086c.08-.756.16-1.512.586-2.592 1.584.024 2.823.374 4.062.723 0 0 .195.344.249.93.5 3.487.948 6.387 1.292 8.615-2.843.315-4.628.513-6.72.833-1.099.504-1.889.885-3.045 1.234-2.296.036-4.226.104-5.921-.106 1.76-2.535 3.285-4.794 5.06-7.13.39-.186.527-.294 1.018-.399 1.375-.7 2.398-1.405 3.42-2.108z\"\n        />\n        <path\n            fill=\"#DCDBDC\"\n            d=\"M959.598 306.65c-.058-1.295-.117-2.589.013-4.574.248-6.95 1.594-8.208 7.305-7.1 1.077.208 2.05.965 2.921 1.693-.058.617.033 1.01.016 1.335-.108-.068-.27.13-.508.251-.363.611-.49 1.101-.75 1.758-.133.168-.264.576-.55.695-.527.852-.768 1.586-1.172 2.563-.324.596-.485.95-.937 1.442-.585 1.12-.878 2.104-1.268 3.318-.097.229-.193.717-.532.762-1.738-.685-3.138-1.414-4.538-2.143zM1073.784 279.396c1.54-.01 2.753.187 3.966.385-.304 1.216-.34 2.597-.965 3.617-1.863 3.045-3.957 5.95-6.01 8.98-5.839-5.476-6.634-8.868-2.951-12.114 1.993-.423 3.813-.54 5.96-.868z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1020.897 282.608c1.873-.814 3.677-2.063 5.63-2.37 13.307-2.091 26.644-3.984 40.183-5.413.12.887.03 1.246-.06 1.605-9.557 1.551-19.113 3.103-29.422 4.6-1.59.477-2.427 1.006-3.265 1.536-2.032.07-4.063.141-6.782.005-2.552-.126-4.418-.045-6.284.037z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M920.346 302.679c1.607-.409 4.12-.326 4.656-1.315 1.838-3.39 6.274-6.161 3.446-11.359 5.61-1.134 2.29 2.948 3.873 4.533 1.057 2.348 2.114 4.697 2.92 7.255-1.055-.875-1.858-1.958-3.149-3.698-2.229 3.904-4.05 7.124-5.901 10.327-1.547 2.676-3.474 3.95-5.996 1.152 1.423-.682 2.54-.934 3.656-1.186-.612-.892-1.261-1.762-1.826-2.684-.601-.983-1.122-2.015-1.679-3.025zM908.018 300.199c-.478 2.15-1.139 4.32-2.102 6.346-1.434 3.02-3.347 4.79-6.982 2.59-.938-.569-3.058-.341-3.865.381-.695.622-.293 2.469-.429 4.353-5.157.017-1.039-4.547-3.094-6.432 0 0-.065-.037-.093-.062 2.566-.45 5.162-.877 8.191-1.189.53.068.627.022.723-.025l-.384-.147c.225-3.808-.218-8.384 6.046-5.06.324.172 1.103-.513 1.989-.755z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M913.89 286.638c1.13-.843 2.207-2.328 3.398-2.425 7.156-.583 14.383-1.505 21.499-1.023 6.426.436 12.741 2.523 19.003 4.392-.462.58-.693.792-.795 1.144-.365-.068-.73-.136-1.547-.609-3.485-.599-6.518-.793-9.55-.988a11.643 11.643 0 0 1-2.44-.886c-1.267-.652-2.044-1.188-2.79-1.15-8.929.466-17.853 1.017-26.778 1.545zM1055.296 284.593c-1.385 3.008-2.665 5.843-4.492 8.266-.691.916-2.646.878-4.464.779-1.385-2.543-2.332-4.59-3.278-6.636.114-.36.228-.72.803-1.392 2.802-.876 5.144-1.44 7.485-2.003 1.278.216 2.556.432 3.946.986z\"\n        />\n        <path\n            fill=\"#E8E1DF\"\n            d=\"M983.053 293.918c.174.282.364.555.766 1.364 2.32 3.341.884 4.652-2.208 5.408-1.116-.004-1.86.014-2.865-.184-1.978-.713-3.696-1.21-5.485-1.958-.2-.37-.328-.488-.456-.606 0 0 .295-.368.746-.622 2.187-1.774 3.924-3.294 5.66-4.814.396-.123.792-.247 1.466.041.978.732 1.677 1.051 2.376 1.37z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M913.661 286.834c9.154-.724 18.078-1.275 27.007-1.74.746-.039 1.523.497 2.46 1.095-4.678.404-9.55.245-14.382.62-5.159.402-10.278 1.309-15.807 1.82-.097-.65.198-1.124.722-1.795zM959.31 306.91c1.688.469 3.088 1.198 4.961 2.313.593 1.27.711 2.156.8 2.99-.03-.052.05-.143-.352-.283-3.72-.043-6.339.523-3.444 5.003-2.62.04-2.506.01-3.316-3.123-.461-1.785-1.368-3.454-2.449-6.088-1.736 3.111-2.72 4.876-3.887 6.302.347-2.575.874-4.81 1.39-7.033a.322.322 0 0 0-.03.038c2.012.047 4.026.095 6.327-.119z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M917.101 291.323c.655 2.374.934 4.613.784 7.233-.799.81-1.17 1.236-1.54 1.664l2.003.544s-.114.105-.28.505c-.309 1.658-.451 2.917-.594 4.176-1.118-1.768-2.364-3.47-3.324-5.32-1.346-2.592-2.87-2.977-5.247-.688-.159-.906-.348-2.378.262-2.878 2.383-1.957 5.018-3.608 7.936-5.236z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"m1091.856 346.472 6.413-.71c-.344-2.228-.791-5.128-1.197-8.442.814-.254 1.586-.096 2.755.042.396-.021.332-.01.342-.04-1.249 5.407-.301 10.46 2.219 15.459-2.728-2.134-4.458-5.75-9.017-4.003a33.492 33.492 0 0 0-1.515-2.306zM969.986 296.444c-1.02-.503-1.993-1.26-3.07-1.469-5.711-1.107-7.057.15-7.358 6.715-.568-1.865-1.777-4.408-1.047-6.13 1.786-4.212 6.007-2.327 9.189-2.212 1.076.038 2.066 2.499 2.767 4.273-.514.451-.699.482-.884.512 0 0 .162-.197.22-.536.1-.611.142-.882.183-1.153zM1071.997 273.985a31.44 31.44 0 0 1 1.93-.02c1.45-.34 2.253-.713 3.055-1.085.416-.051.832-.102 1.895-.118 2.46-.311 4.273-.658 6.086-1.004.77-.532 1.54-1.065 2.706-2.004.8-.641 1.205-.875 1.61-1.108.862 3.184.091 4.931-3.64 5.17-4.377.28-8.719 1.116-13.352 1.21-.281-.682-.286-.862-.29-1.041z\"\n        />\n        <path\n            fill=\"#151515\"\n            d=\"M1087.299 312.698c-.527-6.844-.757-13.98-.709-21.428.521 6.838.763 13.987.709 21.428z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M997.127 286.59a260.933 260.933 0 0 1 19.556-2.074c-6.16.913-12.627 1.578-19.556 2.075zM1092.615 255.848c.11-.406.221-.812.644-1.707 1.247-2.153 2.183-3.817 3.119-5.48-2.05 5.325-4.1 10.65-6.666 15.914-.239-1.227.037-2.393.314-3.559.392-.684.785-1.368 1.57-2.463.601-1.176.81-1.94 1.019-2.705zM936.261 294.076c2.021 4.2 3.908 8.783 5.622 13.731-2.034-4.206-3.895-8.778-5.622-13.731z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1085.5 337.459c.471-3.243.943-6.485 1.464-10.097 4.353.628 2.836 3.769 2.429 6.379-.22 1.403-.881 2.736-1.276 4.38.067.28.108-.018-.246-.105-.83-.035-1.307.016-1.93-.09-.145-.157-.441-.467-.441-.467z\"\n        />\n        <path\n            fill=\"#100F0E\"\n            d=\"M1042.704 287.003c1.304 2.046 2.251 4.092 3.328 6.452.08 1.128.03 1.942-.034 3.165-1.674-2.671-3.332-5.751-5.039-9.207.431-.387.91-.398 1.745-.41z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M948.396 314.134c1.116-3.766 2.233-7.532 3.672-11.421.419 1.069.513 2.261.761 3.885.153.431.172.404-.2.287-1.659 2.339-2.946 4.794-4.233 7.25z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1096.53 248.315c-1.088 2.01-2.024 3.673-3.244 5.51-.453-3.305-.221-6.622 3.47-8.329.091 1.006.008 1.739-.227 2.819zM1089.648 261.057c.101 1.125-.175 2.291-.251 3.679.139 1.208.078 2.195-.05 3.546-.473.597-.877.83-1.495 1.162.33-2.717.874-5.531 1.796-8.387z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M979.063 288.539c2.523-.84 5.463-1.504 8.667-1.955-2.574.853-5.412 1.49-8.667 1.955zM945.996 287.51c2.934-.186 5.967.008 9.179.55-2.908.176-5.994.003-9.179-.55zM966.052 290.529c2.203-.83 4.816-1.479 7.685-1.918-2.254.84-4.764 1.469-7.685 1.918zM953.294 298.872c-.757-2.114-1.142-4.29-1.635-6.818 3.747.328 4.24 1.982 1.635 6.818z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M894.173 303.562c-1.765-3.103.26-3.893 2.797-4.273a14.761 14.761 0 0 1-2.797 4.273z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1050.911 283.444c-1.902.726-4.244 1.29-6.97 1.892.694-4.71 4.292-1.139 6.97-1.892zM1096.797 335.86c-1.308.008-2.547-.342-4.11-.749-.405-.82-.77-2.104-.508-2.248.705-.388 1.976-.683 2.48-.3.938.713 1.492 1.932 2.138 3.298zM1020.59 282.712c2.173-.186 4.039-.267 6.155-.127-2.242.891-4.734 1.562-7.638 2.098-.32-.485-.23-.836-.125-1.46.442-.319.872-.362 1.608-.51zM941.935 290.643c-1.578.745-3.214 1.123-5.205 1.581.175-3.594.726-3.798 5.205-1.581z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M978.869 292.32c-1.394 1.706-3.13 3.226-5.195 4.798-1.19-4.29 2.4-4.053 5.195-4.799z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M925.187 289.482c-1.55.664-3.505 1.11-5.855 1.463 1.553-.622 3.502-1.152 5.855-1.463z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M905.989 290.982c1.172-.908 2.344-1.816 3.714-2.228.123.909.048 1.323-.028 1.737 0 0-.444.148-1.015.2-1.271.132-1.971.212-2.671.29z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M957.151 289.053c-.054-.679.177-.89.73-1.115.538-.012.882.129 1.491.357.498.555.73 1.023.997 1.753-.998-.049-2.03-.359-3.218-.995z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M899.945 296.468c.763-.703 1.526-1.406 2.439-1.915-.175.79-.5 1.386-1.397 2.037-.728-.003-.885-.063-1.042-.122z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M969.345 298.255c.423-.152.608-.183 1.072-.237.747-.05 1.216-.077 2.036-.09.48.132.608.25.612.94-.234.795-.343 1.02-.84 1.207-1.423-.101-2.46-.165-3.496-.23.127-.489.253-.979.616-1.59z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1034.012 282.884c.789-.848 1.626-1.377 2.788-1.815-.697.772-1.718 1.453-2.788 1.815zM1091.62 338.065c-.561.724-1.584 1.428-2.961 1.795-.28-.545-.203-.754-.127-1.007v-.03c.876-.26 1.751-.52 3.088-.758z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1085.84 325.874c-.97-.097-1.942-.563-2.958-1.371.956.105 1.957.554 2.959 1.37z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M905.86 291.244c.829-.341 1.529-.42 2.582-.465-.462.695-1.277 1.356-2.461 1.92-.328-.462-.288-.828-.12-1.455z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1071.838 273.738c.163.426.168.606.167 1.056-.41.312-.816.354-1.831.242-.82-.282-1.03-.41-1.239-.538.915-.335 1.83-.67 2.903-.76z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M983.062 293.633c-.708-.035-1.407-.354-2.087-.98.375-.575.732-.844 1.346-1.011.421.636.586 1.172.74 1.991z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1068.617 274.585c.528.04.737.169 1.255.499-.647.685-1.603 1.169-2.89 1.5-.242-.513-.151-.872-.027-1.51.47-.32.906-.362 1.662-.49z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1080.53 322.886c.384-.448.896-.607 1.81-.782.477.446.552.908.565 1.715-.79.016-1.518-.314-2.374-.933z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M899.71 296.699c.392-.172.549-.112.931.058-.276.778-.777 1.445-1.632 1.99-.08-.688.192-1.253.7-2.048z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M936.732 307.11c-.608-.335-1.094-.99-1.449-1.948.611.34 1.091.984 1.45 1.948z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1097.963 245.736c-.317-.501-.3-.895-.156-1.572.594-.287 1.061-.29 1.871-.216-.232.684-.807 1.29-1.715 1.788zM910.017 290.583c-.266-.506-.191-.92-.072-1.65.464-.364.884-.41 1.586-.31-.202.78-.687 1.416-1.514 1.96z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1088.498 338.772c.034.052.033.036.081-.166-.086-.302-.22-.403-.354-.503 0 0-.041.299.049.424s.19.194.224.245zM1136.215 258.892c.264-.472.843-.94 1.603-1.21-.31.538-.798.876-1.603 1.21z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M999.04 219.33c-10.056.06-20.118.361-30.166.095-6.896-.183-13.78-1.076-20.65-1.828-1.752-.192-3.43-1.056-5.276-1.935 18.2.444 36.534 1.212 55.372 2.337.577.681.649 1.006.72 1.331z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M999.405 219.348c-.436-.343-.508-.668-.658-1.228.858-.364 1.793-.494 3.157-.387.326.536.218.834.079 1.368-.755.247-1.485.256-2.578.247z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1093.525 349.148c4.405-2.117 6.135 1.5 8.735 4.019.329 1.976.343 3.862.278 6.145-1.054 2.688-2.03 4.979-3.302 7.475-.154-1.958-.053-4.124.138-6.283.173-1.95.898-3.974.56-5.814-.486-2.644-1.959-4.625-5.24-2.938-9.328 4.798-18.652 9.603-28.042 14.276-1.212.603-2.802.445-4.238.078 1.987-1.901 3.996-3.24 6.217-4.597.212-.018.584-.227.95-.198 2.558-1.224 4.75-2.478 7.286-3.844 4.592-1.915 8.838-3.719 13.405-5.483.86-.545 1.398-1.127 2.163-1.889.514-.435.802-.69 1.09-.947z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M1103.474 323.228c.468 1.257.799 2.87.904 4.836-.498-1.258-.77-2.87-.904-4.836zM1103.933 329.8c.422 1.403.612 3.028.62 5.121-.406-1.32-.63-3.11-.62-5.12z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1091.206 388.803c.219-2.065.508-4.4 1.314-6.543 1.672-4.448 3.619-8.793 5.77-13.297-2.048 6.474-4.415 13.065-7.084 19.84zM1084.235 396.164c-.1-.817.062-1.469.58-2.624.626-1.844.896-3.186 1.165-4.527 1.004 1 2.009 2 3.122 3.386-.781 2.472-.733 5.809-4.867 3.765z\"\n        />\n        <path\n            fill=\"#171716\"\n            d=\"M907.56 221.798c2.803-1.18 5.364-2.026 7.68-3.314 6.129-3.411 12.088-3.569 18.548-.582 6.619 3.06 13.616 5.29 20.364 8.086 1.62.672 2.908 2.145 4.348 3.25l-.445 1.87c-2.625.223-5.281.812-7.87.597-6.237-.517-8.168.779-9.31 7.003-1.304 7.106-6.756 12.735-13.769 14.216-6.454 1.362-13.216-3.305-14.415-9.958-.059-.325.026-.687-.075-.993-.793-2.411-1.616-4.814-2.43-7.219-2.261 1.205-4.757 2.114-6.73 3.681-3.052 2.425-5.32 3.324-7.352-1.084-.37-.801-2.555-1.42-3.631-1.126-4.155 1.132-8.152 2.852-12.312 3.961-1.632.436-3.538-.157-5.32-.282.912-1.78 1.366-4.35 2.821-5.192 4.565-2.642 9.449-4.769 14.317-6.842 5.01-2.134 10.146-3.972 15.581-6.072m13.442 15.78 2.917 3.127c1.002-1.005 2.594-1.88 2.85-3.048.292-1.327-.612-2.915-.997-4.39-1.53 1.188-3.059 2.377-4.77 4.312zM1042.442 386.96c-1.664-.122-2.875-.22-4.282-.05-2.135.387-4.073.504-6.423.586-2.146.157-3.88.347-5.667.923-.713.591-1.375.798-2.384 1.024-6.758.847-13.168 1.676-19.704 2.868-.548.42-.97.476-1.71.494-7.304-.631-14.303-1.103-21.27-1.861-4.376-.477-8.705-1.384-13.448-2.065-6.337-2.146-12.174-4.74-18.276-6.302-2.46-.63-5.499.996-8.653 1.589-2.179.264-3.98.534-6.245.465-.557-.55-.65-.762-.743-.973.839-.87 1.677-1.742 3.118-2.69 1.532-.633 2.462-1.188 3.82-1.92 5.098-.23 9.765-.284 14.536.038 1.496.697 2.89 1.019 4.47 1.436.187.096.5.377.526.735 2.403 1.385 4.779 2.41 7.326 3.53.17.094.494.312.542.66.845.494 1.642.64 2.683.857 1.196.418 2.148.765 3.142 1.424 1.094.305 2.147.297 3.644.319 2.497-.05 4.55-.13 6.603-.209 1.015.12 2.03.238 3.474.822 3.17.23 5.913-.005 8.655-.239.7-.117 1.402-.233 2.827-.256 4.015.057 7.305.02 10.905.182 1.32-.163 2.327-.526 3.581-1.033 1.529-.473 2.812-.802 4.468-.945 2.587-.483 4.803-1.151 7.287-1.872.63-.096.99-.141 1.77.015 3.686.12 6.955-.013 10.225-.034 6.7-.043 13.4-.025 20.43.097a751.4 751.4 0 0 1 4.139 1.747s-.058.358-.314.71c1.663 4.064 4.7 7.643.808 11.99-.693-.037-1.09-.064-1.488-.092 1.058-9.074-.593-9.75-11.013-11.93-2.206-.462-4.599-.034-7.36-.04z\"\n        />\n        <path\n            fill=\"#0B0908\"\n            d=\"M891.211 307.408c2.39 1.914-1.728 6.478 3.592 6.78 3.218-.225 6.223-.192 9.748.33 1.662.655 2.801.822 3.941.989 1.587.061 3.175.123 5.118.373 1.571 1.495 2.785 2.8 4.431 4.571-1.48 0-2.575 0-4.21.213-1.228.018-1.913-.177-2.692-.709-2.77-.582-5.447-.826-8.461-1.026-.79.015-1.243-.014-1.945-.304-.924-.132-1.6-.003-2.582.098-.912-.151-1.516-.273-2.238-.678-.724-.095-1.332.093-2.366.37-2.955.144-5.483.199-8.38.08-1.984.511-3.599 1.196-5.439 1.962-.53.178-.842.242-1.575.088-2.382-.1-4.367-.15-6.309.114-1.978.27-3.915.849-6.052 1.4-.877.263-1.572.418-2.538.417-.712.38-1.153.917-1.67 1.686-.077.233.177.652.177.652s.11.119-.313-.003c-1.066.36-1.655.962-2.368 1.3-1.229.582-2.536 1-3.81 1.487-.269-1.504-.923-3.07-.692-4.493.203-1.254 1.394-2.35 2.462-3.418.926-.405 1.539-.908 2.339-1.497.188-.087.56-.267 1.02-.22 2.287-.015 4.155.141 5.93-.194 2.261-.427 4.447-1.251 7.03-1.967 1.35-.15 2.333-.236 3.664-.16 1.608-.286 2.87-.735 4.367-1.281.39-.159.548-.22 1.07-.239 1.017-.763 1.668-1.567 2.32-2.372 2.032-1.459 4.064-2.918 6.431-4.349z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M933.972 327.627c5.374 1.252 10.821 2.847 16.888 4.545.983.165 1.345.227 1.835.608 1.597.756 3.065 1.192 4.81 1.858 6 2.992 11.722 5.753 17.53 8.84 1.58 1.191 3.074 2.055 4.682 3.222.871.557 1.63.812 2.687 1.207 1.29.56 2.28.981 3.372 1.726 2.162 1.3 4.224 2.276 6.561 3.46 1.907.973 3.538 1.738 5.34 2.77.952.376 1.732.486 2.734.749.398.193.573.234.822.554.71.709 1.345 1.138 1.844 1.717-.135.148-.415.436-.415.436-8.188-3.699-16.389-7.37-24.562-11.103-11.909-5.44-23.798-10.921-35.695-16.387-2.789-1.281-5.573-2.573-8.433-4.202z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1103.739 201.56c3.695 1.568 7.357 2.726 7.552 7.303.16 3.754-1.5 4.927-4.83 3.315-2.07-1.001-4.301-1.982-5.907-3.542-1.566-1.52-2.429-3.766-3.6-5.693 2.148-.505 4.296-1.01 6.785-1.383z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M967.927 385.1s-.323-.219-.598-.639c-2.599-1.467-4.924-2.515-7.249-3.562 0 0-.312-.281-.614-.66-1.687-.762-3.073-1.146-4.458-1.53-4.668.055-9.335.11-14.81.239-1.79.404-2.774.734-3.757 1.063 1.65-1.322 3.11-3.314 4.985-3.852 8.116-2.327 15.827-.837 22.692 3.988 5.992 4.212 12.948 5.32 19.855 7.317-1.979.453-4.032.533-6.769.316-1.604-.318-2.525-.34-3.446-.363-.952-.348-1.904-.695-3.263-1.36-1.128-.53-1.848-.744-2.568-.958zM1059 365.999c-3.319.637-6.691 2.016-9.947 1.781-14.148-1.021-28.647.14-42.076-5.978-1.329-.605-2.64-1.25-4.136-2.18-.179-.303.101-.59.556-.683 1.848.095 3.242.283 4.865.558.545.175.867.222 1.355.5.933.447 1.706.621 2.75.967.894.316 1.516.462 2.313.892 2.233.67 4.292 1.057 6.587 1.53.57.119.902.152 1.358.43 1.048.098 1.974-.05 3.236-.224 1.453-.026 2.569-.025 3.906.299 8.648.773 17.073 1.212 25.497 1.681 1.25.07 2.491.281 3.736.427zM911.233 320.293c.685.194 1.37.389 2.412.607 4.35 1.23 8.353 2.41 12.335 3.654 1.88.587 3.722 1.295 5.793 2.242-1.283.242-2.803.342-4.271.114-12.438-1.934-24.855-4.002-37.308-5.832-2.18-.32-4.496.283-6.848-.108.664-1.147 1.427-1.724 2.19-2.302 2.528-.054 5.056-.109 8.158-.052a9.947 9.947 0 0 0 2.336-.288c.605.122 1.21.244 2.268.617 1.198.147 1.941.045 2.685-.058.452.028.905.057 1.927.336 3.154.524 5.738.797 8.323 1.07zM876.957 385.87c-3.298-3.39-6.596-6.78-9.943-10.507.904-.153 2.295-.309 2.744.268 6.634 8.53 17.416 10.764 25.548 16.983 1.563 1.196 3.117 2.404 4.35 3.99-2.694-.671-5.062-1.725-7.428-2.798 0-.019-.026-.048-.06-.39-1.663-1.112-3.291-1.883-5-2.597-.08.056.044-.095-.015-.412-.787-.64-1.515-.963-2.48-1.437-.577-.307-.918-.462-1.395-.89-.863-.525-1.591-.776-2.602-1.234-1.429-.463-2.574-.72-3.719-.976zM1009.598 388.147c-3.29.037-6.58.075-10.256-.092.62-.787 1.562-1.68 2.641-1.9 7.361-1.504 14.723-3.05 22.143-4.203 4.192-.65 8.495-.58 12.445-.321-3.528 1.234-6.751 1.957-9.975 2.68-.362.045-.723.09-1.618-.021-2.82.527-5.106 1.21-7.393 1.893-1.284.329-2.567.658-4.402.986-1.563.325-2.574.651-3.585.978z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1059.375 365.959c-1.62-.106-2.861-.317-4.11-.387-8.425-.469-16.85-.908-25.027-1.858 4.995-.206 9.769.56 14.48.28 7.921-.472 15.803-1.61 23.7-2.467-2.008 1.34-4.017 2.678-6.22 4.297-.946.218-1.697.156-2.823.135z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M859.938 317.923s-.371.18-.87.161c-1.113.49-1.727.998-2.342 1.506-.754 1.166-1.945 2.26-2.148 3.515-.231 1.423.423 2.99.692 4.493 1.274-.487 2.581-.905 3.81-1.487.713-.338 1.302-.94 2.342-1.377-1.182 4.532-4.235 6.416-7.59 4.974-2.756-1.185-3.72-5.349-1.17-8.58 1.788-2.267 4.81-3.56 7.759-5.25.479.037.698.265.557.495-.44.67-.74 1.11-1.04 1.55z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1027.013 384.512c2.807-.924 6.03-1.647 9.654-2.516 1.428-.118 2.455-.089 4.299.014 2.927-.048 5.039-.17 7.15-.292 1.038.078 2.075.156 3.714.5 2.239.92 3.874 1.574 5.51 2.227-6.7.008-13.4-.01-20.101.033-3.27.02-6.539.153-10.226.034zM1068.356 402.62c.965.823 1.649 1.572 2.675 2.536-3.32 2.642-6.981 5.07-10.753 6.938.852-1.34 1.815-2.12 2.804-2.922l-4.097-1.835c.647-1.132 1.293-2.265 2.032-3.062 1.76 2.863 2.553 2.642 5.979-1.307.36-.14.72-.28 1.36-.348z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1066.867 402.629c-3.297 4.288-4.09 4.51-5.694 1.37.756-1.683 1.447-2.754 2.487-3.916.674-3.754 1.001-7.415 1.328-11.076 4.115 1.827 2.968 5.077 2.314 8.268-.337 1.642-.385 3.342-.435 5.354zM862.095 377.034c-3.1 3.02-6.201 6.04-9.662 9.057 2.375-3.716 5.111-7.427 8.195-11.113.557-.045.765-.116 1.193.211.237.88.255 1.363.274 1.845zM928.094 387.448c-3.734 2.9-7.818 5.634-12.298 8.383-.12-.778-.078-1.977.474-2.298a130.254 130.254 0 0 1 11.824-6.085zM876.676 315.486c-.984.087-1.968.174-3.639.104-4.43.08-8.174.316-11.918.553 0 0-.22-.228-.334-.34 4.586-4.536 10.3-2.23 15.894-1.916.175.91.086 1.254-.003 1.599z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M892.226 393.824c2.368 1.055 4.736 2.109 7.464 3.12.676.126.992.296 1.725.804a20.8 20.8 0 0 0 2.605 1.217c.784.324 1.567.649 2.685 1.243.4.61.465.952.162 1.454-5.823-1.261-11.378-2.504-14.64-7.838z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M865.974 321.951c1.955-.443 3.892-1.022 5.87-1.292 1.942-.265 3.927-.215 6.146.156-.829 1.031-1.91 1.604-2.991 2.177-2.046-.016-4.091-.031-6.742-.238-1.165-.395-1.724-.599-2.283-.803z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1078.17 394.12c-1.443 1.395-2.886 2.789-4.678 4.155a85.86 85.86 0 0 1 6.395-10.467c.034 1.24-.076 2.193-.544 3.627-.63 1.216-.901 1.95-1.173 2.685z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1064.761 388.77c-.1 3.898-.427 7.56-1.302 11.04-.652-.38-.756-.58-.86-.78 3.596-4.355.558-7.934-1.093-11.816 1.19.325 2.109.821 3.255 1.555z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1057.67 384.575c-1.966-.783-3.601-1.436-5.45-2.366 4.317-2.36 7.246-.074 9.67 3.741-1.352-.167-2.622-.707-4.22-1.375z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M854.284 389.314c-.645 1.417-1.666 2.707-2.986 4.016-.667-.07-1.034-.16-2.066-.595-1.162-.776-1.66-1.205-2.158-1.635.76-.673 1.52-1.345 2.849-2.135 1.064-.414 1.558-.71 2.052-1.006.645.409 1.29.818 2.31 1.355z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M907.236 401.502a18.811 18.811 0 0 1-.21-1.29 28.043 28.043 0 0 1 5.756-2.934c-.224.946-.626 1.695-1.54 2.842-1.677.726-2.842 1.054-4.006 1.382z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M846.728 391.086c.844.444 1.342.873 1.95 1.532-2.3 1.561-4.71 2.895-7.478 4.218 1.489-1.928 3.335-3.847 5.528-5.75z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M995.76 388.19c-2.326.465-5.068.7-7.861.542 2.447-.52 4.945-.647 7.86-.542z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M875.202 323.273c.878-.854 1.96-1.427 3.204-2.27.48-.304.792-.368 1.472-.36.706.155.976.312 1.184.575-1.886.779-3.771 1.558-5.86 2.055zM1047.995 381.375c-1.99.465-4.102.587-6.648.567a27.964 27.964 0 0 1 6.648-.567zM865.989 373.69c-1.349.417-2.677.475-4.408.55.475-4.092 2.12-4.223 4.408-.55zM1084.874 271.387c-1.724.717-3.537 1.064-5.696 1.282 1.638-.636 3.622-1.145 5.696-1.282zM865.792 322.06c.741.095 1.3.299 2.029.747-1.658.914-3.486 1.584-5.687 2.13-.373-.123-.627-.542-.237-.765a15.391 15.391 0 0 0 1.629-1.54c.694-.155 1.389-.31 2.266-.573z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M881.373 321.108c-.52-.153-.79-.31-1.27-.548 1.465-.87 3.08-1.554 5.064-2.065-.394.75-1.157 1.328-2.045 2.17-.563.288-1.001.311-1.75.443z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1085.79 388.862a13.97 13.97 0 0 1-.917 4.347c-.498-1.246-.696-2.665-.657-4.605.437-.577.636-.633.834-.688.14.294.324.56.74.946z\"\n        />\n        <path\n            fill=\"#9C9B9B\"\n            d=\"M836.525 400.877c-.715 1.05-1.777 2.115-3.17 3.162.719-1.062 1.771-2.104 3.17-3.162z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M877.023 315.648c-.258-.507-.169-.851-.055-1.466.75-.286 1.477-.303 2.88-.235.888.23 1.098.374 1.308.52-1.262.447-2.525.896-4.133 1.181z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1076.793 272.638c-.613.614-1.415.986-2.557 1.245.563-.571 1.466-1.029 2.557-1.245z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M884.481 311.67c-.353.892-1.004 1.696-1.966 2.174-.038-.826.235-1.326.508-1.825.387-.146.774-.291 1.458-.35z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M882.689 311.978c.061.54-.212 1.04-.54 1.825-.211.346-.369.406-.76.565-.443-.047-.653-.191-1.193-.532.5-.763 1.329-1.33 2.493-1.858zM852.034 387.648c-.553.607-1.047.903-1.833 1.187.208-.926.708-1.84 1.547-2.759.341.417.343.839.286 1.572z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M936.393 380.209c1.031-.527 2.014-.857 3.375-1.086-.551.657-1.48 1.212-2.769 1.665-.358-.103-.653-.382-.606-.58z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1092.301 255.957c.105.655-.104 1.42-.603 2.317-.097-.647.097-1.428.603-2.317z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1070.453 400.689c-.116.756-.562 1.467-1.383 2.062.1-.78.576-1.445 1.383-2.062zM933.306 383.63c.424.24.517.45.677 1-.567.623-1.202.908-2.193 1.082.157-.777.67-1.444 1.516-2.082z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M930 385.812c-.132.65-.392 1.058-1.015 1.55.055-.54.472-1.165 1.016-1.55zM1085.038 387.64c-.186.331-.385.387-.878.537-.49-.047-.687-.188-1.082-.632.517-.262 1.232-.22 1.96.096zM903.972 398.608c-.682.064-1.411-.229-2.298-.786.645-.032 1.448.199 2.298.786z\"\n        />\n        <path\n            fill=\"#B58984\"\n            d=\"M1118.57 462.185c.818 1.044 1.429 2.28 1.891 3.857-.798-.994-1.448-2.33-1.89-3.857zM1117.33 455.108c.56 1.224 1.02 2.798 1.35 4.753-.571-1.213-1.009-2.808-1.35-4.753z\"\n        />\n        <path\n            fill=\"#100F0E\"\n            d=\"M1062.302 399.022c.4.209.505.409.81.88-.492 1.343-1.183 2.414-2.03 3.76l-2.097 3.675 4.097 1.835c-.99.802-1.952 1.582-3.014 2.699-1.716.453-3.332.57-5.353.659-4.574-.911-1.098-2.677-.939-4.428-.069-.361.147-.71.306-.839 1.174-1.181 2.19-2.234 3.152-3.623.95-1.72 1.956-3.101 3.27-4.597.707-.085 1.105-.058 1.798-.021z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1077.104 401.398c3.16-.618 3.577.446 1.448 4.669-.685-1.44-1.007-2.912-1.448-4.67zM1073.422 404.125c.093-.704.517-1.407 1.304-2.086-.083.711-.529 1.4-1.304 2.086zM1078.508 394.066c-.066-.68.205-1.415.76-2.275.047.657-.188 1.439-.76 2.275z\"\n        />\n        <path\n            fill=\"#1B1A19\"\n            d=\"M906.867 401.662a53.239 53.239 0 0 1 4.162-1.163c1.01.144 1.723.307 2.981.522-3.856 5.501-8.967 4.406-14.636 1.492-.968-.589-1.557-1.013-2.415-1.272-2.001-.84-3.733-1.845-5.674-3.449-1.153-1.054-2.094-1.508-3.036-1.962 0 0-.1.03-.102-.376-3.49-1.983-6.977-3.56-10.464-5.138-.563-.48-1.126-.958-1.873-1.647.2-.835.583-1.462 1.057-2.444 1.235-.098 2.38.158 3.837.979 1.11.759 1.91.954 2.71 1.15.34.154.682.31 1.274.961 1.008.801 1.766 1.105 2.524 1.41 0 0-.125.15-.031.45 1.736 1.06 3.379 1.822 5.021 2.583 0 0 .027.029.026.048 3.26 5.352 8.816 6.595 14.64 7.856z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M862.398 377.032c-.322-.48-.34-.963-.251-1.792.802.16 1.498.667 2.194 1.174-.546.206-1.093.411-1.943.618z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M1117.9 437.888c.708.544 1.344 1.506 2.046 2.812-.66-.569-1.389-1.482-2.045-2.812z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M877.764 390.65a73.889 73.889 0 0 1 10.388 4.752c-3.431-1.237-6.869-2.827-10.388-4.752zM888.193 396.116c.998.168 1.94.622 2.882 1.411-.42.337-.84.34-1.585.308-.667-.5-1.01-.967-1.297-1.719z\"\n        />\n        <path\n            fill=\"#734341\"\n            d=\"M805.923 1114.585c-.993.328-2.041.326-3.467.21.885-.255 2.148-.398 3.467-.21z\"\n        />\n        <path\n            fill=\"#8E2D2B\"\n            d=\"M1045.238 303.736c3.034 3.312 4.977 2.39 6.696-.905 2.266-4.345 4.719-8.593 7.564-13.738 1.58 1.875 2.436 2.962 3.366 3.982 2.407 2.638 4.847 5.247 7.274 7.867 2.642-2.57 5.373-5.057 7.888-7.746 1.21-1.296 2.013-2.974 3.789-5.678.66 2.615 1.132 3.638 1.142 4.666.063 6.412.19 12.833-.127 19.23-.062 1.238-1.903 3.317-3.071 3.426-9.889.926-19.825 2.132-29.721 1.939-7.282-.143-14.5-2.448-21.792-3.457-12.592-1.742-23.433-8.17-34.933-12.811-1.666-.672-2.785-2.7-4.157-4.1 1.672-.804 3.282-2.125 5.025-2.333 12.932-1.544 25.943-2.522 38.81-4.459 4.152-.625 5.325 1.049 6.735 3.89 1.669 3.361 3.492 6.646 5.512 10.227z\"\n        />\n        <path\n            fill=\"#0B0908\"\n            d=\"M968.596 300.013c1.17-.103 2.206-.04 3.833.4 2.586.785 4.581 1.195 6.837 1.89 1.538.188 2.814.09 4.446-.002 1.5-.167 2.645-.342 3.79-.517 6.27 3.022 12.54 6.044 19.158 9.124.334.306.32.554-.114 1.077-2.25-.036-4.082-.345-6.18-.725-.593-.238-.919-.408-1.332-.889-1.04-.688-1.993-1.066-2.976-1.404-.029.038 0-.054-.07-.396-.858-.602-1.647-.862-2.757-1.165-.927-.258-1.533-.473-2.233-1.028-.912-.514-1.731-.687-2.984-.865-1.754-.17-3.07-.429-4.395-.489-6.794-.307-14.359-2.452-17.205 7.013-.057.19-.859.156-1.313.227-.119-.885-.237-1.77-.491-3.086-.135-.43-.039-.918.414-1.21.702-1.324.953-2.358 1.203-3.392.16-.354.322-.709 1-1.326.711-1.062.908-1.862 1.104-2.661 0 0 .131-.408.265-.576z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M987.58 301.499c-1.223.46-2.368.635-4.066.62-.88-.597-1.205-1.003-1.531-1.409 2.72-.776 4.156-2.087 1.997-5.238 1.202 1.675 2.44 3.708 3.6 6.027z\"\n        />\n        <path\n            fill=\"#100F0E\"\n            d=\"M1045.918 297.397c1.497-.395 2.942-.41 4.826-.425-.78 1.291-2.002 2.584-3.223 3.877-.552-1.024-1.104-2.048-1.603-3.452z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M917.473 305.73c.144-1.544.286-2.803.566-4.533.815-.06 1.493.353 2.24 1.123.624 1.37 1.145 2.401 1.746 3.384.565.922 1.214 1.792 1.826 2.684-1.117.252-2.233.504-3.702.806-.352.05-.353.022-.306-.326-.595-.847-1.237-1.347-1.879-1.847-.164-.336-.328-.671-.49-1.292z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M908.34 315.19c-.988.15-2.127-.017-3.356-.554 1.01-.168 2.107.035 3.356.554zM917.935 307.343c.671.178 1.313.678 1.895 1.523-.68-.17-1.302-.685-1.895-1.523z\"\n        />\n        <path\n            fill=\"#0B0908\"\n            d=\"M948.38 314.237c1.303-2.558 2.59-5.013 4.261-7.363-.144 2.34-.671 4.575-1.129 7.42-.067.976-.205 1.34-.343 1.704-.748-.273-1.496-.545-2.528-1.135-.284-.317-.275-.524-.26-.626z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M947.372 314.662c-.106.59-.498 1.283-1.097 1.767.132-.695.472-1.18 1.097-1.767z\"\n        />\n        <path\n            fill=\"#0B0908\"\n            d=\"M1068.63 361.509c-8.11.876-15.99 2.013-23.912 2.485-4.711.28-9.485-.486-14.702-.605-1.586.178-2.702.177-4.645.012-1.508-.053-2.188.059-2.868.17-.334-.033-.667-.066-1.42-.533-2.474-.778-4.526-1.122-6.578-1.466-.622-.146-1.244-.292-2.206-.963-1.174-.645-2.008-.765-2.842-.885-.328-.005-.65-.052-1.359-.571-2.574-1.042-4.757-1.654-6.94-2.266-.174-.041-.35-.082-.88-.574-1.16-.54-1.967-.629-2.773-.717-1.63-.765-3.26-1.53-5.179-2.817-.96-1.283-1.633-2.044-2.286-2.825.022-.02.063-.061.452-.1 1.608.287 2.827.606 4.044.938 4.587 1.251 9.174 2.506 14.132 3.84 3.055.727 5.739 1.374 8.772 2.123 1.066.207 1.783.31 2.571.782 1.202.57 2.332.774 3.897.988 4.645.09 8.857.17 13.181.497.712.17 1.31.092 2.23.003.744.052 1.168.115 1.67.556 2.943.28 7.117 1.323 8.406-.153 2.854-3.268 4.258-7.801 6.363-12.14.903-1.94 1.695-3.56 2.803-5.254.722-1.01 1.13-1.95 1.64-3.205.937-1.868 1.773-3.421 2.98-4.962 1.072-1.408 1.775-2.829 2.545-4.512.382-.688.697-1.114 1.349-1.54.909-.928 1.481-1.856 2.053-2.784 0 0 .47-.017.916.215 1.07.414 1.694.595 2.318.776.158.29.248.6.072 1.578.448 2.198 1.094 3.747 1.74 5.296.155 4.22.31 8.442.305 13.423.838 1.406 1.775 2.405 2.853 2.594.943.164 2.044-.583 2.958-.681-.176.418-.235.59-.505.83-.295.19-.467.4-.447.421.196.199.424.366.807.838 4.004 2.438 6.194-.54 8.725-2.46.79-.381 1.58-.762 2.679-1.266.761.522 1.215 1.168 1.822 2.183-.134.626-.422.882-1.282 1.245-1.094.712-1.616 1.317-2.137 1.922-4.247 1.803-8.493 3.607-13.463 5.387-2.907 1.301-5.09 2.626-7.274 3.95 0 0-.372.209-.584.227m-4.503-22c-2.675 4.842-5.519 9.601-7.928 14.571-.759 1.566-.354 3.695-.481 5.567 1.684.006 3.428.291 5.039-.05 2.254-.479 4.508-1.224 6.575-2.237 1.516-.743 3.84-2.042 3.9-3.193.366-6.936.182-13.9.182-20.53-5.818-1.253-5.379 3.12-7.287 5.873z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1080.408 347.985c-1.032.345-2.133 1.092-3.076.928-1.078-.189-2.015-1.188-2.833-2.172 2.008-1.31 4.077-2.002 5.599-3.325 1.846-1.605 3.229-3.74 5.107-5.802.295-.155.59.155.725.696.577 1.147 1.02 1.754 1.464 2.36-1.526 2.26-3.051 4.518-5.05 7.02-.962.261-1.449.278-1.936.295zM1072.545 325.722c-.807.119-1.43-.062-2.266-.49 1.218-3.99 3.015-6.955 7.677-3.595-2.197.758-5.365-.274-5.41 4.085zM1074.272 332.524c-.744-1.177-1.39-2.726-1.849-4.68.774 1.166 1.361 2.738 1.85 4.68z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M1040.91 359.202a10.149 10.149 0 0 1-1.723-.39c-1.038-.149-1.625-.094-2.211-.039-4.211-.079-8.423-.158-13.117-.523-.605-.63-.728-.975-.558-1.614 6.222-.095 12.154.278 18.082.219 2.286-.023 5.603-.279 6.65-1.728 3.284-4.55 5.712-9.716 9.053-15.682-2.834 1.12-4.425 2.212-6.088 2.334-11.168.816-22.283.117-32.738-4.072-7.924-3.175-15.462-7.32-23.142-11.092-2.112-1.038-4.119-2.288-5.798-3.584 2.704.635 5.108 1.241 7.346 2.225 6.476 2.845 12.885 5.841 19.547 8.907.568.17.91.21 1.404.533.895.626 1.637.97 2.74 1.454 10.795 3.313 21.332 5.428 32.141 2.255 1.132-.332 1.788-2.282 2.605-3.835-3.614.063-7.17.479-11.064.859-1.697-.02-3.056-.003-4.682-.26-3.979-.641-7.691-1.01-11.69-1.464-.883-.123-1.479-.159-2.22-.47-1.6-.707-3.054-1.14-4.72-1.671-.518-.204-.824-.198-1.324-.375-2.01-1.107-3.847-1.87-5.63-2.743-8.718-4.273-16.665-10.61-26.845-11.068-6.463-.29-13.206-1.677-19.468 1.991-3.29-.053-6.33.2-9.53.145a470.11 470.11 0 0 1-2.656-6.587l-6.33 11.46c1.125.327 1.947.416 2.614.786 5.186 2.876 10.342 5.806 15.155 8.75a23.195 23.195 0 0 1-2.68-.225c-.406-.11-.568-.154-.821-.507-1.045-.678-1.997-1.047-3.184-1.5-.234-.082-.695-.268-.761-.57-.774-.6-1.483-.897-2.475-1.303-.678-.206-1.072-.303-1.564-.697-.838-.536-1.579-.775-2.692-1.127-1.643-.32-2.913-.526-4.183-.732l1.108-.188c-5.694-3.606-.628-5.916 1.204-8.96.164-.326.045-.225.045-.225.233-.47.467-.94.58-1.65.017-.605.155-.97.403-1.605 1.096-2.036 2.081-3.801 3.817-6.912 1.08 2.634 1.988 4.303 2.449 6.088.81 3.133.695 3.162 3.71 3.393.788-.33 1.354-.591 2.23-.898.616-.756.921-1.467 1.365-2.533a5.702 5.702 0 0 0-.144-1.702s-.078.09-.049.142c.484-.019 1.286.015 1.343-.175 2.846-9.465 10.411-7.32 17.205-7.013 1.325.06 2.64.318 4.526.79 1.358.504 2.153.704 2.947.904.606.215 1.212.43 2.242.997 1.191.634 1.958.916 2.725 1.198 0 0-.03.092.083.325.413.703.715 1.173.62 1.714-5.177-1.245-9.912-2.788-14.754-3.826-8.278-1.774-12.562.966-13.593 8.5 6.937 0 14.217-1.397 20.659.33 9.418 2.525 18.273 7.204 27.297 11.126 10.718 4.658 21.907 6.594 33.378 4.665 5.184-.872 8.035-.077 8.65 5.525 2.433-4.43 4.64-8.449 6.746-12.28-5.27 0-9.709 0-13.915-.262 1.741-.771 3.25-1.28 4.758-1.79 2.061-.317 4.123-.633 6.918-1.011 6.404-.495 4.359 3.09 3.831 5.886-.314.426-.629.852-1.337 1.62-1.126 1.702-1.858 3.061-2.59 4.42-.836 1.553-1.672 3.106-2.919 5.079-.822 1.337-1.234 2.255-1.645 3.172-.793 1.621-1.585 3.242-2.814 5.287-1.352 1.786-2.586 3.033-3.127 4.53-1.961 5.43-5.326 8.402-11.394 7.279z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M955.325 329.418c.395.097.789.194 1.46.698.352.798.428 1.188.37 1.716-.134.138-.404.41-.82.39-1.534.066-2.651.152-3.768.239-.362-.062-.724-.124-1.325-.327-.967-.843-1.78-1.479-2.399-2.266-.452-.576-.65-1.351-.726-2.322 1.506-.078 2.776.128 4.474.785 1.196.663 1.965.875 2.734 1.087z\"\n        />\n        <path\n            fill=\"#FBFBFB\"\n            d=\"M950.708 317.835c.002.054.12-.047.148-.075.028-.027-.15.02-.148.075z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M999.121 310.683c.326.17.652.339 1.377.9 2.807 1.285 5.215 2.176 7.623 3.068.41.127.819.253 1.74.633 2.067.529 3.622.805 5.178 1.081.281.141.578.235 1.284.563 1.142.57 1.89.859 2.637 1.147 2.443.945 4.885 1.89 7.874 3.09 1.133.305 1.72.354 2.306.403.412.12.825.24 1.56.62.313.45.304.64.057 1.12-2.159.092-4.16.173-5.985-.354-5.825-1.682-11.726-3.243-17.317-5.536-3.445-1.413-6.378-4.073-9.233-6.3a15.7 15.7 0 0 0 .899-.435zM1033.064 322.25c3.354.257 6.708.514 10.675.996 1.498.726 2.384 1.226 2.998 2.034-4.867.196-9.854 2.332-13.709-2.282 0-.25.036-.747.036-.747z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1047.008 324.972c-.885-.5-1.77-1-2.828-1.764 3.651-.445 7.473-.628 11.552-.54-1.253.781-2.76 1.29-4.9 2.025-1.694.243-2.759.261-3.824.279zM1067.075 327.815c.19-2.795 2.235-6.38-3.816-6.062 3.41-2.748 4.765-2.178 5.832 2.88-.535 1.326-1.107 2.254-2.016 3.182zM1008.082 314.395c-2.369-.636-4.777-1.527-7.316-2.742 1.698-.013 3.53.296 5.753.704.77.66 1.147 1.22 1.563 2.038zM1014.902 316.041c-1.419.048-2.974-.228-4.718-.76 1.402-.025 2.992.206 4.718.76zM1032.95 321.989c.114.262.079.76-.25.9-.787.137-1.246.133-1.705.129.009-.19.018-.38.03-.853.606-.336 1.208-.387 1.925-.176zM1029.095 321.308c-.542.21-1.128.162-1.898-.14.495-.208 1.175-.164 1.898.14zM1018.922 317.703c-.71.084-1.457-.205-2.365-.761.67-.048 1.499.17 2.365.76z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M918.527 300.465c-.847.117-1.514-.064-2.182-.245.37-.428.741-.855 1.472-1.316.537.398.713.83.71 1.561z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1080.29 348.232c.605-.264 1.092-.28 1.819-.265 2.17-.034 4.1-.102 6.395-.138-2.165 1.952-4.355 4.93-8.343 2.235-.154-.726-.16-.897-.165-1.07.06-.172.118-.344.294-.762z\"\n        />\n        <path\n            fill=\"#0B0908\"\n            d=\"M1087.644 340.592c-.694-.528-1.137-1.135-1.569-2.125.489-.435.965-.486 1.796-.451.488.187.622.288.709.634-.124.456-.2.665-.275 1.208-.135.441-.273.549-.661.734z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M965.936 304.713c.04.897-.21 1.93-.815 3.026-.063-.922.23-1.906.815-3.026zM968.045 300.708c.09.68-.107 1.48-.656 2.3-.112-.714.129-1.448.656-2.3z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M969.837 296.669c.108.046.067.317.074.995-.041.015-.132-.378-.074-.995z\"\n        />\n        <path\n            fill=\"#0B0908\"\n            d=\"M899.991 306.007c.12.056.248.105.376.154-.096.047-.193.093-.32-.02-.032-.159-.047-.142-.056-.134z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M979.005 302.018c-1.995-.41-3.99-.82-6.188-1.568-.095-.562.014-.787.32-1.331 1.913.177 3.63.674 5.61 1.711.26.756.26.972.258 1.188z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M979.266 302.304c-.26-.502-.258-.718-.258-1.258.742-.342 1.487-.36 2.603-.356.698.426 1.024.832 1.548 1.42-1.079.282-2.355.381-3.893.194z\"\n        />\n        <path\n            fill=\"#0B0908\"\n            d=\"M964.72 311.93c.494.589.588 1.038.213 1.881-.76 1.11-1.052 1.824-1.344 2.54-.566.26-1.132.522-2.092.513-3.117-4.411-.497-4.977 3.222-4.934z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1069.581 361.311c1.817-1.353 4-2.678 6.563-3.866-1.813 1.388-4.005 2.642-6.563 3.866z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M1090.272 351.984c.201-.644.723-1.25 1.59-1.782-.192.655-.73 1.237-1.59 1.782z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M921.093 237.206c1.62-1.562 3.15-2.75 4.68-3.94.384 1.476 1.288 3.064.997 4.391-.257 1.168-1.849 2.043-2.851 3.048-.973-1.042-1.945-2.084-2.826-3.5z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M960.107 381.257c2.298.69 4.623 1.737 7.052 3.11-2.273-.7-4.649-1.725-7.052-3.11zM1017.957 386.369c1.915-.87 4.201-1.552 6.753-2.027-1.95.876-4.166 1.544-6.753 2.027zM955.11 379.086c1.283.007 2.669.39 4.169 1.057-1.279-.038-2.672-.36-4.168-1.057zM973.8 387.728c.88-.289 1.8-.266 2.96.023-.813.274-1.866.282-2.96-.023zM1009.908 388.347c.701-.527 1.712-.853 3.03-1.035-.703.509-1.71.872-3.03 1.035zM967.975 385.447c.672-.134 1.392.08 2.275.54-.633.1-1.43-.046-2.275-.54zM860.978 316.373a99.421 99.421 0 0 1 11.694-.72c-1.896.872-4.082 1.696-6.342 2.123-1.776.335-3.644.18-5.931.194-.161-.487.138-.927.579-1.597z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M911.139 319.955c-2.49.065-5.075-.208-7.891-.775 2.444-.05 5.12.193 7.891.775zM863.254 322.476c-.14.595-.553 1.034-1.28 1.463.127-.546.568-1.083 1.28-1.463zM900.733 318.625c-.494.365-1.237.467-2.128.349.529-.352 1.204-.481 2.128-.349z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M857.04 319.687c.3-.605.915-1.114 1.84-1.516-.301.608-.914 1.11-1.84 1.516z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M895.913 318.045c-.47.416-1.058.549-1.793.482.46-.389 1.069-.577 1.793-.482z\"\n        />\n        <path\n            fill=\"#040404\"\n            d=\"M963.303 333.5c.162.044.324.088.76.55 2.274 1.352 4.273 2.285 6.545 3.348.64.293 1.008.457 1.41.96 1.049 1.37 2.062 2.403 3.035 3.775-.06.566-.081.792-.102 1.02-5.724-2.762-11.447-5.523-17.514-8.79-.458-1.044-.572-1.582-.686-2.12 0 0 .27-.273.752-.399.932-.223 1.381-.322 1.83-.42 0 0 .461.185.716.634 1.255.78 2.255 1.111 3.254 1.442z\"\n        />\n        <path\n            fill=\"#0B0908\"\n            d=\"M975.035 343.479c-.063-.554-.042-.78.396-1.342 4.576 1.24 8.735 2.816 13.152 4.533.769.44 1.28.738 1.703 1.394-.118.85-.15 1.34-.183 1.829 0 0-.041.041-.434.044-1.593-.208-2.793-.418-3.993-.628-.991-.42-1.982-.841-3.347-1.738-1.158-.708-1.942-.94-2.726-1.173-1.494-.865-2.988-1.729-4.568-2.92z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1001.233 357.166c2.108.333 4.29.945 6.637 1.9-1.231.156-2.625-.032-4.338-.276-.954-.486-1.59-.915-2.299-1.624zM985.776 349.633c1.1-.114 2.3.096 3.871.324 1.046.778 1.719 1.539 2.403 2.613-2.05-.661-4.112-1.637-6.274-2.937zM956.334 332.222c.53.559.645 1.097.827 1.91-1.401-.16-2.87-.596-4.466-1.352.989-.406 2.106-.492 3.64-.558zM979.717 346.7c.67-.07 1.454.163 2.313.73-.684.082-1.442-.173-2.313-.73zM997.677 355.862c.634-.178 1.44-.089 2.379.299-.647.188-1.427.078-2.379-.299zM1014.68 361.856c1.877.06 3.93.404 6.166 1.096-1.874-.04-3.933-.425-6.166-1.096zM1022.625 363.816c.558-.356 1.238-.468 2.409-.389-.435.338-1.36.487-2.409.39zM1009.617 359.997c.674-.153 1.508-.033 2.41.441-.704.18-1.477.006-2.41-.441z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M892.168 393.416c-1.608-.42-3.25-1.18-4.907-2.297 1.616.414 3.244 1.185 4.907 2.297zM883.278 388.08c-.664.078-1.463-.117-2.29-.67.699-.106 1.427.145 2.29.67zM887.153 390.407c-.7.013-1.457-.29-2.229-.94.714-.023 1.442.3 2.23.94z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M999.034 310.371c-.11.414-.307.517-.98.612-.476-.008-.896-.102-.896-.102-.301-.47-.603-.94-.987-1.681.87.105 1.823.483 2.863 1.171zM995.989 308.571c-.697.06-1.464-.222-2.334-.813.686-.049 1.475.211 2.334.813z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M990.998 306.378c-.7.14-1.495-.06-2.42-.561.689-.126 1.508.047 2.42.561z\"\n        />\n        <path\n            fill=\"#FBFBFB\"\n            d=\"M988.944 323.174c2.055 1.153 4.062 2.403 6.174 3.44 7.68 3.773 15.218 7.918 23.142 11.093 10.455 4.19 21.57 4.888 32.738 4.072 1.663-.122 3.254-1.213 6.088-2.334-3.341 5.966-5.769 11.133-9.053 15.682-1.047 1.45-4.364 1.705-6.65 1.728-5.928.06-11.86-.314-18.475-.214-1.445.377-2.207.453-2.968.528-.717-.103-1.434-.207-2.545-.754-2.07-1.396-3.666-2.538-5.432-3.267-6.968-2.874-13.994-5.605-20.99-8.413-5.62-2.257-11.226-4.548-16.874-6.811-.034.012-.012-.056-.077-.395-2.351-1.43-4.638-2.522-6.945-3.598-.02.016-.012-.038-.012-.038-5.165-2.914-10.321-5.844-15.507-8.72-.667-.37-1.489-.459-2.613-.787l6.329-11.459c.993 2.497 1.744 4.387 2.626 6.996.122 5.132 1.738 6.203 5.497 3.48 1.016-.736 2.407-.952 3.838-1.078 6.736.404 13.26.48 20.112.543.751.093 1.174.2 1.597.306z\"\n        />\n        <path\n            fill=\"#939191\"\n            d=\"M1064.199 339.134c1.837-2.376 1.398-6.75 7.216-5.496 0 6.629.184 13.593-.182 20.53-.06 1.15-2.384 2.449-3.9 3.192-2.067 1.013-4.32 1.758-6.575 2.236-1.611.342-3.355.057-5.04.05.128-1.87-.277-4 .482-5.566 2.41-4.97 5.253-9.73 7.999-14.946m5.007 5.814v-7.44l-1.403-.099c-1.516 3.463-2.826 7.036-4.606 10.358-1.727 3.225-3.936 6.193-6.456 10.08 11.693-.806 12.471-1.595 12.453-11.019 0-.332.002-.665.012-1.88z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M974.134 337.912c5.613 2.275 11.22 4.566 16.84 6.823 6.995 2.808 14.021 5.54 20.989 8.413 1.766.729 3.362 1.871 5.082 3.165-2.638-.307-5.322-.954-8.503-2.01-6.39-2.472-12.28-4.535-18.17-6.598-.51-.297-1.02-.594-1.878-1.363-5.018-3.125-9.69-5.777-14.36-8.43z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1040.989 359.58c5.99.745 9.355-2.227 11.316-7.656.54-1.498 1.775-2.745 3.018-4.211-1.67 3.914-3.074 8.447-5.928 11.715-1.289 1.476-5.463.432-8.406.153z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M990.286 348.064c5.976 1.704 11.867 3.767 17.884 6.159-4.46-.925-9.047-2.18-13.634-3.43-1.217-.333-2.436-.652-4.044-.939-.357-.45-.324-.94-.206-1.79z\"\n        />\n        <path\n            fill=\"#484848\"\n            d=\"M1063.18 333.867c.362-1.37 1.094-2.73 2.153-4.169-.377 1.34-1.08 2.76-2.152 4.17zM1020.011 357.537c.69-.443 1.452-.52 2.605-.6.515.338.638.683.81 1.302-1.083.072-2.213-.131-3.415-.702zM1058.56 342.034c.097-.845.51-1.763 1.23-2.784-.098.834-.507 1.773-1.23 2.784zM1037.09 359.022c.472-.304 1.059-.359 1.776-.2-.467.292-1.065.37-1.777.2zM1079.785 349.063c.217.104.222.275.211.705-.234.081-.462-.086-.658-.285-.02-.02.152-.23.447-.42z\"\n        />\n        <path\n            fill=\"#FBFAFA\"\n            d=\"M996.763 310.952c.395-.07.815.023.983.158 3.33 2.235 6.264 4.895 9.71 6.308 5.59 2.293 11.491 3.854 17.316 5.536 1.825.527 3.826.446 5.985.353.697-.285 1.156-.281 1.943-.168 4.183 4.473 9.17 2.337 14.037 2.14 1.336-.325 2.4-.343 3.863-.324 4.836.037 9.275.037 14.545.037l-6.747 12.28c-.614-5.602-3.465-6.397-8.65-5.525-11.47 1.929-22.659-.007-33.377-4.665-9.024-3.922-17.88-8.6-27.297-11.126-6.442-1.727-13.722-.33-20.659-.33 1.031-7.534 5.315-10.274 13.593-8.5 4.842 1.038 9.577 2.581 14.755 3.826z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M989.32 323.031c-.799.037-1.222-.07-2.27-.468-3.36-.466-6.108-.546-8.832-.837-3.485-.374-6.952-.918-10.432-1.503-.006-.114-.076-.547-.076-.547 6.012-3.975 12.755-2.589 19.218-2.298 10.18.458 18.127 6.795 26.845 11.068 1.783.874 3.62 1.636 5.232 2.897-1.14 1.195-2.08 1.943-3.018 2.691-6.436-2.937-12.845-5.933-19.321-8.778-2.238-.984-4.642-1.59-7.346-2.225z\"\n        />\n        <path\n            fill=\"#151515\"\n            d=\"M1016.213 334.163c.713-.877 1.652-1.625 2.989-2.527.701-.27 1.007-.276 1.691.296 1.819.838 3.26 1.208 4.7 1.578.595.036 1.19.072 2.3.517 4.253.744 7.992 1.08 11.731 1.416 1.359-.017 2.718-.033 4.875.149 4.087-.09 7.375-.38 10.663-.669-.876 1.2-1.532 3.15-2.664 3.482-10.809 3.173-21.346 1.058-32.214-2.611-1.229-.791-2.024-1.086-2.819-1.38-.342-.04-.684-.081-1.252-.251z\"\n        />\n        <path\n            fill=\"#F6F5F5\"\n            d=\"M967.46 319.37c.25.306.32.74.071 1.24-.335.796-.422 1.091-.508 1.386-1.219.455-2.61.671-3.626 1.407-3.76 2.723-5.375 1.652-5.337-3.17 3.07-.664 6.11-.917 9.4-.864z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1039.357 335.17c-3.472-.063-7.211-.399-11.177-1.056 3.486.046 7.198.414 11.177 1.055zM1055.103 334.57c-3.23.642-6.517.931-10.266 1.058a62.685 62.685 0 0 1 10.266-1.058z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M970.336 337.268c-2-.933-4-1.866-6.03-3.152.665-.29 1.36-.227 2.407-.193.352-.03.344.024.442.304 1.126 1.2 2.153 2.12 3.18 3.04z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1025.447 333.235c-1.295-.095-2.735-.465-4.342-1.203 1.288.064 2.742.496 4.342 1.203z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M963.212 333.191c-.908-.022-1.908-.353-2.928-1.05.931.003 1.883.372 2.928 1.05zM955.228 329.12c-.672.086-1.44-.126-2.265-.675.686-.099 1.427.14 2.265.676zM959.267 331.12c-.383.402-.832.5-1.63.587-.424-.403-.5-.793-.568-1.481.715-.002 1.424.295 2.198.895zM963.9 316.305c-.02-.67.272-1.384.895-2.138.025.671-.28 1.382-.896 2.138z\"\n        />\n        <path\n            fill=\"#3D3C3D\"\n            d=\"M1017.617 334.696c.643.012 1.438.307 2.307.958-.67.012-1.412-.332-2.307-.958z\"\n        />\n        <path\n            fill=\"#676665\"\n            d=\"M974.1 337.924c4.705 2.64 9.376 5.293 14.136 8.275-4.07-1.246-8.229-2.821-12.765-4.401-1.391-1.037-2.404-2.07-3.105-3.51.782-.413 1.251-.416 1.72-.42 0 0-.021.068.013.056z\"\n        />\n        <path\n            fill=\"#C9C8C8\"\n            d=\"M974.022 337.53c-.405.342-.874.345-1.691.42-.715-.095-1.083-.259-1.723-.552-1.3-1.05-2.327-1.971-3.433-3.187 2.21.796 4.496 1.888 6.847 3.318zM967.235 322.325c-.126-.624-.04-.919.301-1.6 3.73.083 7.197.627 10.682 1 2.724.292 5.471.372 8.505.85-6.228.23-12.752.154-19.488-.25z\"\n        />\n        <path\n            fill=\"#F8F2F1\"\n            d=\"M1069.201 345.39a153.37 153.37 0 0 0-.007 1.438c.018 9.424-.76 10.213-12.453 11.02 2.52-3.888 4.729-6.856 6.456-10.08 1.78-3.323 3.09-6.896 4.606-10.359l1.403.098c0 2.48 0 4.961-.005 7.882z\"\n        />\n    </svg>\n)\nexport default CCSLogo\n","import * as React from \"react\"\nconst Payment = (props) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlSpace=\"preserve\"\n        id=\"Layer_1\"\n        width={800}\n        height={800}\n        viewBox=\"0 0 120 120\"\n        {...props}\n    >\n        <style>\n            {\n                \".st0{fill:#383e56}.st1{fill:#acafbf}.st2{opacity:.15;enable-background:new}\"\n            }\n        </style>\n        <path\n            d=\"M103.9 76.6 34.6 91.7c-2.6.6-5.2-1.1-5.7-3.7l-9.7-44c-.6-2.6 1.1-5.2 3.7-5.7l69.3-15.1c2.6-.6 5.2 1.1 5.7 3.7l9.6 44.1c.6 2.5-1 5.1-3.6 5.6zM28.8 88l-9.6-44\"\n            className=\"st0\"\n        />\n        <path\n            d=\"M20.347 48.983 99.101 31.83l1.958 8.99-78.754 17.151z\"\n            className=\"st1\"\n        />\n        <path\n            d=\"M105.8 74.4 36.5 89.5c-2.6.6-5.2-1.1-5.7-3.7l-9.6-44.1c-.2-1-.1-2.1.3-3-1.7 1-2.7 3.1-2.3 5.1L28.8 88c.6 2.6 3.1 4.2 5.7 3.7l69.3-15.1c1.6-.3 2.8-1.4 3.4-2.8-.4.3-.9.5-1.4.6z\"\n            className=\"st2\"\n        />\n        <path\n            d=\"M95.7 50.4v45.1c0 1.1-.4 2.2-1.1 3-.8.7-1.9 1.1-3 1.1h-71c-2.7 0-4.8-2.2-4.8-4.8V49.7c0-1.1.4-2.2 1.1-3 .8-.7 1.9-1.1 3-1.1h70.9c2.7-.1 4.9 2.1 4.9 4.8z\"\n            className=\"st2\"\n        />\n        <path\n            d=\"M95.7 50.4v45.1c0 1.1-.4 2.2-1.1 3-.9 1.1-2.2 1.8-3.7 1.8h-71c-2.7 0-4.8-2.2-4.8-4.8V50.4c0-1.5.7-2.8 1.8-3.7.8-.7 1.9-1.1 3-1.1h70.9c2.7-.1 4.9 2.1 4.9 4.8z\"\n            className=\"st2\"\n        />\n        <path\n            d=\"M90.8 100.3H19.9c-2.7 0-4.8-2.2-4.8-4.8V50.4c0-2.7 2.2-4.8 4.8-4.8h70.9c2.7 0 4.8 2.2 4.8 4.8v45.1c0 2.6-2.1 4.8-4.8 4.8z\"\n            style={{\n                fill: \"none\",\n            }}\n        />\n        <path\n            d=\"M90.8 100.3H19.9c-2.7 0-4.8-2.2-4.8-4.8V50.4c0-2.7 2.2-4.8 4.8-4.8h70.9c2.7 0 4.8 2.2 4.8 4.8v45.1c0 2.6-2.1 4.8-4.8 4.8z\"\n            className=\"st0\"\n        />\n        <path\n            d=\"M38.2 78.7H24.1c-1 0-1.8-.8-1.8-1.8v-8.1c0-1 .8-1.8 1.8-1.8h14.1c1 0 1.8.8 1.8 1.8V77c0 .9-.8 1.7-1.8 1.7z\"\n            style={{\n                fill: \"#e5cf89\",\n            }}\n        />\n        <path\n            d=\"M93.2 98.4h-71c-2.7 0-4.8-2.2-4.8-4.8V48.5c0-1.1.4-2 .9-2.8-1.9.6-3.3 2.4-3.3 4.5v45.1c0 2.7 2.2 4.8 4.8 4.8h70.9c1.6 0 3-.8 3.9-2-.4.2-.9.3-1.4.3z\"\n            className=\"st2\"\n        />\n        <path\n            d=\"M85.9 91.8H69.3c-.4 0-.8.3-.8.8v.9c0 .4.3.8.8.8h16.6c.4 0 .8-.3.8-.8v-.9c0-.5-.4-.8-.8-.8zM65.3 91.8H40.2c-.4 0-.8.3-.8.8v.9c0 .4.3.8.8.8h25.1c.4 0 .8-.3.8-.8v-.9c0-.5-.3-.8-.8-.8z\"\n            className=\"st1\"\n        />\n    </svg>\n)\nexport default Payment\n","import * as React from \"react\"\nconst Calendar = (props) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlSpace=\"preserve\"\n        viewBox=\"0 0 200 200\"\n        {...props}\n    >\n        <path\n            fill=\"#FFF\"\n            d=\"m152.632 47.368-47.368-5.263-57.895 5.263L42.105 100l5.263 52.632L100 159.211l52.632-6.579 5.263-53.947-5.263-51.317z\"\n        />\n        <path\n            fill=\"#1A73E8\"\n            d=\"M68.961 129.026c-3.934-2.658-6.658-6.539-8.145-11.671l9.132-3.763c.829 3.158 2.276 5.605 4.342 7.342 2.053 1.737 4.553 2.592 7.474 2.592 2.987 0 5.553-.908 7.697-2.724s3.224-4.132 3.224-6.934c0-2.868-1.132-5.211-3.395-7.026s-5.105-2.724-8.5-2.724h-5.276v-9.039h4.736c2.921 0 5.382-.789 7.382-2.368 2-1.579 3-3.737 3-6.487 0-2.447-.895-4.395-2.684-5.855s-4.053-2.197-6.803-2.197c-2.684 0-4.816.711-6.395 2.145s-2.724 3.197-3.447 5.276l-9.039-3.763c1.197-3.395 3.395-6.395 6.618-8.987 3.224-2.592 7.342-3.895 12.342-3.895 3.697 0 7.026.711 9.974 2.145 2.947 1.434 5.263 3.421 6.934 5.947 1.671 2.539 2.5 5.382 2.5 8.539 0 3.224-.776 5.947-2.329 8.184-1.553 2.237-3.461 3.947-5.724 5.145v.539a17.379 17.379 0 0 1 7.342 5.724c1.908 2.566 2.868 5.632 2.868 9.211s-.908 6.776-2.724 9.579c-1.816 2.803-4.329 5.013-7.513 6.618-3.197 1.605-6.789 2.421-10.776 2.421-4.618.013-8.881-1.316-12.815-3.974zM125 83.711l-9.974 7.25-5.013-7.605L128 70.382h6.895v61.197H125V83.711z\"\n        />\n        <path\n            fill=\"#EA4335\"\n            d=\"M152.632 200 200 152.632l-23.684-10.526-23.684 10.526-10.526 23.684L152.632 200z\"\n        />\n        <path\n            fill=\"#34A853\"\n            d=\"M36.842 176.316 47.368 200h105.263v-47.368H47.368l-10.526 23.684z\"\n        />\n        <path\n            fill=\"#4285F4\"\n            d=\"M15.789 0C7.066 0 0 7.066 0 15.789v136.842l23.684 10.526 23.684-10.526V47.368h105.263l10.526-23.684L152.632 0H15.789z\"\n        />\n        <path\n            fill=\"#188038\"\n            d=\"M0 152.632v31.579C0 192.935 7.066 200 15.789 200h31.579v-47.368H0z\"\n        />\n        <path\n            fill=\"#FBBC04\"\n            d=\"M152.632 47.368v105.263H200V47.368l-23.684-10.526-23.684 10.526z\"\n        />\n        <path\n            fill=\"#1967D2\"\n            d=\"M200 47.368V15.789C200 7.065 192.934 0 184.211 0h-31.579v47.368H200z\"\n        />\n    </svg>\n)\nexport default Calendar\n","import React from 'react';\nimport './Links.css'\nimport CCSLogo from './svg-logos/CCSLogo.js';\nimport Payment from './svg-logos/Payment.js';\nimport Calendar from './svg-logos/Calendar.js';\nconst Links = () => {\n  const logosize = '100px'\n  return (\n    <div className=\"text-center\">\n      <h2>Home Page</h2>\n      <p>Welcome to the home page for the Chinese Culture Society at Notre Dame! We are student ran organization at Notre Dame's campus that promotes Chinese culure specifically through the lens of Chinese-Americans. </p>\n      <p>We host numerous events throughout the year including mahjong game nights and dumpling making</p>\n      \n      <p>Here are some useful links:</p>\n      <ul>\n        <li><Payment width={logosize} height={logosize} /><a href=\"https://shop.nd.edu/C21688_ustores/web/product_detail.jsp?PRODUCTID=12029&SINGLESTORE=true\" target=\"_blank\" rel=\"noopener noreferrer\">PAY DUES</a></li>\n        <li><Calendar width={logosize} height={logosize} /><a href=\"https://calendar.google.com/calendar/u/0?cid=Y18yMzk4ZGQ2NmY2MDE0NWZjYzg4NmI5MWI4MzkxNzIyMGEwOTkyMTcyMWE1Zjg2ZGU3OTkyZGQ1ODczYjYyYTA3QGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20\" target=\"_blank\" rel=\"noopener noreferrer\">EVENT CALENDAR</a></li>\n        <li><img src='/Group.JPG' alt='' width={logosize} height={logosize} /><a href=\"https://groupme.com/join_group/102941123/BXXcsjml\" target=\"_blank\" rel=\"noopener noreferrer\">GROUPME</a></li>\n        <li><CCSLogo width={logosize} height={logosize} /><a href=\"https://www.example4.com\" target=\"_blank\" rel=\"noopener noreferrer\">Example Link 4</a></li>\n      </ul>\n      <p>\n        Email: ccs@nd.edu, Instagram: @ccsofnd\n      </p>\n    </div>\n  );\n};\n\nexport default Links;","import React from 'react';\nimport './Events.css'\nconst Events = () => {\n  return (\n    <div className=\"text-center\">\n        <h2>\n            Calendar of events\n        </h2>\n        <div className=\"calendar-container\">\n        {/* Embed Google Calendar */}\n        <iframe src=\"https://calendar.google.com/calendar/embed?src=c_2398dd66f60145fcc886b91b83917220a09921721a5f86de7992dd5873b62a07%40group.calendar.google.com&ctz=America/New_York\" \n        style={{ border: '0', overflow: 'auto' }} \n        \n        title=\"Google Calendar\">\n          \n          \n        </iframe>\n        </div>\n    </div>\n\n  );\n};\n\nexport default Events;","import React from 'react';\n\nconst Admin = () => {\n  return (\n    <div>   \n  <h2>Admin Stuff</h2>\n  <img src=\"/ron.jpg\" alt=\"A cute cat\" width=\"300\" height=\"200\"></img>\n\n    </div>\n  );\n};\n\nexport default Admin;","import React from 'react';\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Links from './Links';\nimport Events from './Events';\nimport Admin from './Admin';\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Routes>\n          <Route path=\"/links\" element={<Links />} />\n          <Route path=\"/events\" element={<Events />} />\n          <Route path=\"/admin\" element={<Admin />} />\n          <Route path=\"/\" element={<Links />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["aa","require","ca","p","a","b","c","arguments","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","Object","prototype","hasOwnProperty","ka","la","ma","v","d","e","f","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","name","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","join","Ng","Og","index","Pg","Qg","props","Rg","implementation","Sg","Tg","q","r","y","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","console","error","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","exports","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","__self","__source","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","ns","def","getOwnPropertyNames","definition","o","chunkId","all","reduce","promises","miniCssF","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","i","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","_ref","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","filter","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useResolvedPath","_temp2","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState","_future","v7_partialHydration","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","hookName","ctx","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","__reactRouterVersion","startTransitionImpl","ReactDOM","HashRouter","historyRef","querySelector","setStateImpl","v7_startTransition","newState","isBrowser","ABSOLUTE_URL_REGEX","Link","_ref7","absoluteHref","reloadDocument","preventScrollReset","viewTransition","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","Navbar","_jsx","className","_jsxs","xmlns","xmlSpace","viewBox","fill","Links","logosize","Payment","rel","Calendar","alt","CCSLogo","border","title","Admin","App","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById","reportWebVitals"],"sourceRoot":""}